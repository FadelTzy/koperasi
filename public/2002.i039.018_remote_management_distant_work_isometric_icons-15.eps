%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2002.i039.018.P.m004.c33.remote management distant work isometric icons-15.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 3/24/2021
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 15 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2002.i039.018.P.m004.c33.remote management distant work isometric icons</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2021-03-24T11:55:44+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-03-24T11:55:44+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-03-24T11:55:44+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9AfmfrGraP5LvNQ0h2j1&#xA;CKeyWJo0WRyJb2GJ1VHBUlkdhl2CHFKvI/c15ZcMb933sM0v8xtbgtl1OT0rqOaaSKe3hYvAZA7L&#xA;yikb4oxzopryAyMcWWep8ER9Ph8XF5jnH31uO9ryZ8ePHxkk3OvnyPueheXfN+ia/GTYzgyqWDwk&#xA;jkCpKmlKg7rkCKchOsCuxV2KuxV2KsF82+ZNRhvVgiujaPp841D6pGpFxe2dsrCaBA3NX5uy7inU&#xA;dOuZUYARvvHkfs5tZNmvx82aWVyt1ZwXSqyLPGkqo2zAOoah998xWxWxV2KuxV2KuxVBahq1tZOi&#xA;Sg8pPs06ff8ARjsKsgWaHme5d3kunfmrrvl7X59I8yBbi2jb4Z0B58XPJXr0ZSp7Cv050M+yY5sY&#xA;yYT05HvdBHtWWHIceYdeY7nsdvOk9vFOn2JUV1+TCoznyKd+qYFdirsVdirTuiLydgqjqSaDBKQA&#xA;s7JAthEH5g2l/c3cc0sekrp15HCDJJ6jTciIyHUBPTAdxsSa+3a3Lw4xZLCHFLkGT6ZqGoXN3fQX&#xA;Vn9XjtmQW03In1kda8+JVeFCKUqcjIAJCY5FLsVdirsVWyzQxAGV1jDEKpYgVY9AK9zkJ5Iw3kQO&#xA;m6REnkg9ckuo9JuXteQnCfAUFW6itPozE7Slkjp5nHfHW1NuARMxxckl8seZb3ULz6pchTSMtzAo&#xA;aqf7fDNH2H23k1OTgmBsPx+PtcvV6SOONh2r6Pquu6Rf6Vqs8VlG81s9jOhV2Jt5Y7jkyniKGSPj&#xA;TrTOyhMQkDHfn9uzqJwMwQduVff97x2z1IWqT6SyEXthrUiWtzBK0sMyM0kp58gjmNQpRaHenYUr&#xA;ZqdadPOpQ2yYpGPL+GI5dxshohpRmiOGfqxzjfukTz7xQLJ/y+sZdS02z1TQYH0V7mSa5gBIdeTO&#xA;6TBlZSCrFCePw/fvmt/N5oZpxGOGTF6aJNcQ/ioi6kDy6VzDlzwCcInilCe/Lffpd8w9jFab7nxy&#xA;5k7FXYq7FXYq8ZsvN2k6ffwpawXOrW+nPeWtzIyyNdSNFzl9NGllVOXGrfGe4UcRmRqI5McdqNcJ&#xA;O4upECx+OjHFKMz1HTltYH4+b1+wv7S/tY7q0kEsEoDI4qOoruDQg+xzEhMS5dNmyUSOavk2LsVd&#xA;irsVdirGPNmvaJbiC3urWe+DyGNntUVxA2w+MsygbnpksmjhlxyGTh4Kupdfd59xYxzESHBZJNbP&#xA;nf8AMDztbaxPZwCxNrdWRkjllJDB15AKEYAErsTv0r886/snR/l8YAPoqND4PMdqZxnly9QJt9S6&#xA;V/xy7P8A4wR/8QGcfLm9SisCuxV2KuxVjPnGd5vSsI4eRT/STK/ExMVPAQ0rXm3PkKilB1zXdpYM&#xA;84xOCuOEuKjyIogj425GnlAE8fIinnNl5bvYtc1PWEkhC3YdxaSO8UizL6TSVSpDJwPIe5p03zJ7&#xA;OllyaeJzRqZ4rFbCpEAfLl382rPKMZ1E93XyDNPIWoLq+p3WpR6vPexwW6Wn1OQgBCJGbnIEYo0t&#xA;QV5qACO1Bvm5JQP0ivx+OpaYRkNib+/8fBnGVM3Yq7FXYqx/zrqWg2OkyT6vP6UVuGuOIYhisSs7&#xA;0AqfsKx2322zG1fZ8dVCpA1HfubMWo8KW3MvKLD85PRurvVL6+ttQ0q6MM0lsJJIjFEtf7mJxLxK&#xA;hAGGwkbluCKCzSjJKEJSsTqXGNqBvY/f3/LdlmERKQFGNjhPU+97Lp9hYNOuqQxUeeMOkg+H4ZPi&#xA;oVBpWlOuQ/J4hl8URrJyvv8Af3sfFlw8N+lh/wCcFxrtt5euDoVpPd6jMYfSNuOTRBZBycKrLI3w&#xA;igCA7n4qLUjMjIgWObXQJ3YCvkbX7axtWgsma8Wdri4RWWL4hFOyxqQQoVWcRhgN9q75z/5nW6vV&#xA;cWSHBhhCUI3vQkQCa/iNb1y2A57uYMGnw4/QbnKQka6kch5Dp8S9I/Ja0mtfy00S3uUcXESzM3qr&#xA;xask8kgah7Mrgj2zemugoOGWcYFdirsVdirsVeF3FjpXHUbaa7+r3t9ez3F7ZTSx2tzD6i8n4+p6&#xA;YIZo+I41U1BDU3yWu0Oqy6nHnxH0wgIEUSJVxUdjz9XlR+TXpc2HFCUZ/wAUjLmARdX8Nmf/AJdX&#xA;Nt9X+p2LyTWscXqTOSrxRSNxCwCVfgdlFa8Cem/UYjQfl40b4pSJN8yTuT+K8mX5oZjcd4+XLyZr&#xA;kWTsVdirsVdir5/utE/MnyZfT2lnby65olmEuVvvSbiHYjn+4V3bYcjVSd/iIpmwGshq8hif3ctr&#xA;J5H3GvwXEGE6bHYHic6H693nE3lTzNr1vd3OgaLcT2UcxkjMEf7pFX4Wjjbioala8RuBQb0qejjq&#xA;YYIiE533e7pf63SnBPMeMR4duXn1/sfX2mKy6baKwKsIYwQRQg8B1GcbLm9KicCuxV2KuxV5V+Ze&#xA;iata+Z9H19JvV0uIrZtFJIFKz3EtI2YsQoUbfF1GV5sGTOOCEvD6mXkOY77Iumccsce5HF5e/qyO&#xA;bRk1CH6rJByfiUIUkMlR0LGhH+yzKhUBQ5NMhxGzzTHyn5Rh8vG59Cd3juuDNC7F1R1qCyk/ES4p&#xA;yJ7jK5EM2Q5FXYq7FXYqkPm3yR5e81WZt9VtxIeJWOYfbUHsPbMjBqZ4+XI8x0LRm08MlXzHI9Q+&#xA;dfPX5Baj5ds7uXToJdSsndZI5oiWaLiRTnBvy25LXf7Xtvn6eOnykg1An7Pcbqj57jvN7YuaWfHR&#xA;Hrr7feK5jy+Qreefk7Yfm3a6kGvL/wCueXJmE1y98pX43WrLZpXmiq3QMFHigPSvPHDHHRs5GzGc&#xA;sp2NoPaZYYZl4Sosi9eLAEfjmtBpzVH9G2PGggVR1+EcT94ph4yileONI0CIoVR0AyJKV2KuxV2K&#xA;uxV2KqNxZWdzx+sQRzcfs+oitT5VByQkRyKCAeaqiIiBEUKiiiqooAPYDIkpbxV2KuxV2KuxV2Kq&#xA;dtbW1rAlvbRJBBGKRxRqERR4BVoBiqpirsVdirsVdiriAdiKjrv7b4q7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FUo81+ZtO8taHc6vfuFihFI0LBTJIfsICfE/hvl+mwHLMRDXlyiEbLEPy/8Azfh8&#xA;ywzG8smtCrIltNGHaOcty5kAr8CoVAqzbk+2ZWt0QxSAib/Q06bUGYsino2a5ynYq7FXYq7FXYq7&#xA;FWPXHmxYL028kYShoa1JpyI/hmLqNfgw5BjnKpSFj502QwzlHiA2T+KRZI1dejDMprXYq7FXYq7F&#xA;Uov/ADTplpfR2K87q7NxFbTxQDl6BnRpVeckgIvCMsd607b5dHBIi+Qr513MDkANdUv0DzNOhbTP&#xA;MMsa6xEyCSeJGS0le5kk9KK2Z6NIURV57bVFcsy4QfVAen7dudsI5K2kd/19zJ8xW52KuxV2KuxV&#xA;2KpPpfmSyvNQudPMi/WopGESr0eMAHkpq1eJ+Fj47YAbFjcHqkhOMKHYq7FXYq7FXYqgDrmmMbpY&#xA;LiO4ms3WO6hjdWaNm7MB0Ox+45acMxRIoS5NccsZEgGzHn5L9O1nStS9QWN1FcPDT1o43VmTlUDm&#xA;oNRXiafLITgYmjzZxkCLHJgP55eXrnXtF0uxt40ci8DyySFVSOPgys7M3QDkOm/tmx7MzwxSlKXK&#xA;nF1eIzAA70p8jeX7LSL2w0YesfrUT3FisiGP4oi0npTMRsaU3RW9wu2DPqJZAZ0OgZ48QhUXpPlr&#xA;zBFrFlyf00v4QovbaNi4jdq0oSFPFuJK1HTNcQRzck10TfAh2KuxV2KoHW9S07TtMnudQu0sbcKV&#xA;Nw5pQsKDj3LeAG5yM8UskTGNgkVskTEdzyDzTX/zPfQdDNroET6heRXQtxPIhMausnOWDgCGNYwy&#xA;qR88v7G7HGH/AAfJM3GPH/myJojyBcXWdo8f7yA24uH/ADo8/s3ZdpttB5u0SHVL2yGnXU/L0/Sl&#xA;9aqBiFJYpHWvcMoIP35hdqdkYcs6nvKHKQ2I6+f6Q5el1chG48in2l2U1pC0cjh6n4aVpT6cy5yt&#xA;gAjcgl2KuxVK/NMtqmgXqXNxNaR3KfVRcW1fWR7kiFDHT9vk4pluEHjFC63+TDJ9JYddeZLbR7xt&#xA;A0s8ruBYxdX06BpGMMaxqWPV24gfEfvyvtTUHTab8xMWLoC9t79+3u/a1aeQyZvBhzrc/Jhvm69u&#xA;tJ1bTr2b/SL+Im4WWUBioj4SE0A+BRT4qZkez2tyauWeGSIhGIhQH9MS5+e3zcbtPT+CcRjIyJJv&#xA;/NMfsel+Q/Ot/wCZY53uNHm0+CNY3tLx5YZ47hGqCawlhFIpX4om3FRktVphiNXZ7txXz+9y8OXj&#xA;HJlmYjc7FXYq7FXmms65PHdXc0kzt6ZkVmapVY1apVUXr9n+zPOddqsv5kwiTPKdt/pAO4AjyPnx&#xA;beXV3uHFEwB5R+35qHl7y7+jfM/+LlvGaa9sxC1iF/dt6jKxmdialyqIBsKU6nt2nYmlzx048aRM&#xA;rv3WOX45cnVavLAzPCNnpGn6hFeQhlosg+3HWpGbSUacYFFZFLsVdirsVSjV/MC2GoWlkI1b6yk0&#xA;ks7PQQrEhKkrSr822pt3OUZNRCJ4OIDIRcQev4+bOOOR3r09Xgsnniy0PzNrVzeRXSW2vG2unaDl&#xA;FKjQ+tyqsgjNGecnjWtVoRQ77nsXHqtRpoHMIjJESG9Vz25eQ/HN1faGTDhyyjEy4SRy26b/AI/s&#xA;Zz+TfnnSvMmuazBpahLW0ihKEgIzhwG+x9qkbs4FT3rtXMbUc9x6up73Ox1wij6eg7mS/mF5QtNU&#xA;tLzVpp5VktNPnjjgjlMKOwVmUyNUDiGapB8MxRjMpV39O9nYG7zWzt73TNBtPL1xeXVprUbR6dFZ&#xA;aaySzXNsVa59SLksfohlMkZmrxWnxbqCLSyB3tm35V2ms2Op6wmrWUOnzXghkgtYZjcOIrdBEHmk&#xA;qau/IDltXidu+JjtfRiZWaej5WrsVdirsVeT/mV5G81X949+t3NqOl8/UawjYq8YC0pGleP0j3Ob&#xA;D81L8sceAjFnNVM79d77tnWZdHxZxPLeTCL9HLptXf8AF5jovmmDy/Fex6tXVrKAesLO/VYruOeR&#xA;jzczKoV+TMPiYchUcRmHDsjNj1H5jPON/TGUZGiOnpO/IH02R135t8dfiyQ8PHE3zMZDr7/0pt5X&#xA;803On6hcJ+XsdxeSXsqzR6QzyywgMSWMiyjjGG5gclYbIKManNpDEZAnP9P87b/Y0TY/XuGM5RjX&#xA;hc/5u/22BR/VsX0Tp8l5LY28l7CtvePGpuIEb1FSQj4lV6LyAPQ0zUzABNcnNjdbq+RS7FXYqgNZ&#xA;j1aSK3j05YCWuIvrTXBcBYAeTsnp0Jk2HHcDJw4erGV9HkOueX9bXzhq95HewW1rErlEmWRpGIT4&#xA;PhjRqcuNQxDbdFbplvaOXSZ8ENLnEuKREhRoSq7BlW3dQNnvDTpsOWGWWXGR3Hy+F/fsyG18qaZP&#xA;osNpqsKXupMRNcXIUlppaMFjf1i1Ixz2T7NaGg6ZZgmcIqFRj3D7+8n+kdz3sp4xPc7nz/H2cmae&#xA;VNJstK0hbSztntUVvjWQks7hVUua068ewplepzSyT4pGyuDDHHERiNgnGY7c7FXYq7FXk/mXRPMl&#xA;vqsU8M0Fv9YlnCWk5J9Un40lRowzDgSOQ7g9uuc72X2XL85LPlhVEcO99KO3KiOV8i7DPqB4YjGX&#xA;T3JhNNfvqMOnx+mkDRAG4Zv3hcVAVU2FOKbtyzop6/HDOMJ+uQsfb+pwY4JHGZ9AzXRtJayUvK3K&#xA;VgFoN6D59zlmSdtYCZ5WydirsVdiryH85NB8+T38OsaUv1rTbRUraW1VmAQl2LdedWI6ClB0OWT7&#xA;M0mrx8OS45d6l0Fgj9XcdtpC3GlqtTgnxQqWPax16ft+fI08X8w+dpPMmirpFxYz3PmZrlRbegHq&#xA;qrVfTKMJGIpJ9kHYgmo+ybuyNLrNDn4Jnj09CpHmO/8ARufdvzDq8uHVYrHpyXy/H49zOfyg/wCc&#xA;e/M9hqNv5h1zUJ9HeMh4rG0kpORt8MzjYKQKFd8z9XrMQsQHFffy+DXhwSocW1Pox0R0ZHUMjAqy&#xA;sKgg7EEHNMC5rE7j8svL0ksb2815ZLFX0Yra4ZUj5CjemG5lKg0+EjbM389PqIyPeYi3G/KRBsGQ&#xA;/wA418k60Ly3o+hxSpp8JWSchrm5ldpZ5WUUBklkLO1OwrQdsx8uaWQ7/sboYxHkmeVM3Yq7FXYq&#xA;7FWM+Z/y68qeY3EuoWgFwAVaeImN2VgQVcqRyUg9Dl0c8hHhPqj3Hce/3+bVLDEy4uUu8bFMtD8s&#xA;6FoduIdMtI4AK8pQKyOWoWLyH4mLEAkk75HJllM3IsoQERsmmVs3Yq7FXYq7FUh1zyjZ6hb6kbSR&#xA;rDUdTRElv0Lsw9McUIXmoBUE04keOXQzEVe4j0azjG9bE9U1s9Pt7VaRgs3eRt2P6h92VylbOkTk&#xA;UuxV2KuxV2KrJoYpozHKodD1Bwg0qR3/AJI0K91S01GVZlktEMYgjlZYpFJ5D1UH2irbg9ex+EkY&#xA;3vxdeVr0ron+BXYq7FXYq7FXYqgYdC0aG/bUIbGCO+cENcrGoc16/FTvTfJnJIiidmIiLtHZBk7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYqoXd/Z2aq1zKIw5olepPsBvmPqNVjw1xmr5M4Y5S5BD6ZrVnqTzrbVItyAWI2PKtCP+&#xA;ByjR9o49QZCG/Azy4JQAvqj8z2l2KuxV2KuxV2KoZdS09799OW5iN/EiyyWnMeqI2NFfh9riSKVy&#xA;XCavojiF11RORS7FXYq7FXYq7FULq2ox6bpl1fyI0iWsTymNBV34KTxUdy3QYQqBtPNOm3Fnpdyv&#xA;IfpVY2hiBR2QSKGBfixFKsoqtdyO2+SELBPRB2NJxkEuxV2KuxV2KoLVdWtNMtzPcsFRd2ZmCgAd&#xA;yx2GThAyNBBIDek6pbapYx3trUwS7xsejDxHtjkgYmisZAiwjMgl2KuxV2KuxV2KpRqnmnStOubK&#xA;3kcyy314tiixAuVkZS5LUrQKB8Xh36HLI4iQSxMk3ytkx3zZZXlzPp/oQmaNGk9UE0TfhxDH3pmi&#xA;7a02XNLEIR4/Vv0jX9Ly/U5mknGIkSa2+PwWRXlr5fsr7UtRZnlYI8kUCc2ZQKKIo1+Jqctz9Jpm&#xA;ZpdOMEpSyTicmTnWw2/mjn8WucjkoRBqLJQagEdDvvt+vNi47sVdirsVdiqV61rLaa8AEZl9blSN&#xA;FaSRuFCQiJViaHsDlmPHxMZSp5D+YN/Yf8rAe8nuF03UrKK19OSSVYzETE8mzqQaNIwiJHIHde+Z&#xA;2M8GHiriG/x+e3zcPIOPJw8uX472QeXfPepXl36V9etzswGI4onrCrRkuoWrUZdytN9tts0Wvl4U&#xA;+OfFDEYiQ/o+Rq7EgevKufJz9KfEjUalIEj3/tD0yzukurSG5QFVmQOAeoqK5Zps4zY45BykLZZI&#xA;cMjHuVsvYOxV2KoTVxfnSrwafQX5gkFoW+yJSp4E+wamSjVi+SDy2Y291rVh5WtH1horvUmpBPcy&#xA;FRGr/FuYwUXl8PH4W+0fDL4xBkav3DqwJ2F/atsNQtb7VtFhtLdb+ykjnuP0kk3OKNoGWPjF6QeN&#xA;v3mx5MPs96bY+OPhxIBsHq2EXudqZjgV2KuxV2KuJAFT0xVjmseXdL1u4t7uci9hX97bRqeUdSpo&#xA;5oeDDb4eX0ZkY80oWBs1ygJblUW7r5hGgtcIka2YuVt41YSsBKUZi4AUJQqKda5j5sXiQ689/lyb&#xA;Iyoo3TNTub+d5Y4QmnKCiSswMjSq3FvhUkALQg1yYA4ATYkeh6D9vP3MLlxkbGI6+aZZBm7FXYq7&#xA;FWmYKpY9FBJ+jFXltx6Or3QgurptJOvwNHDbKV+tRXMrk+pE6/ElE5DpTfc5mxhOUCQPTHn/AG8m&#xA;mU4RkAT6jy/s5vUkUKoUEkKAKnc7ZhNyQ+dNdfSNJaWEM9yeTxxIvKRhGOREa9GatAB3rml7a18s&#xA;GOIgQJzlQJ5DvLl6TAJkkj0h4zrGqeZdQuI1ksSuj3cdlcfWbsjiFZlkdnUFHVoV24FutdqUrT2R&#xA;mjo8U8k8kTqPVuJbz5gR8zd0QOvkz1GPxpCIj6Pdy8/c9H/L/wDMCPXLx9JtLWW4s7NAi6rHHxtq&#xA;KCAnOtGIpT4fvzb9nx1EtOJ6gcOQk7HYkd5HRw8xxjJw494gdOXutn2ZLF2KuxV2KoTUFvin+jEF&#xA;afEo2evsSaH8MlGkF5LqGh3Wo/mXb399AJNPSwkhignjAaC5imWRZkB5B3360+H9d9RHv6d3mx9X&#xA;Tl1Ti0/L+1uLgekKUrGb7kfVCFzIqA7cvTLbb+PTMXXHJml6THhIIlExEr2AG338uextGDFGEOH1&#xA;c7Bujzt6NY2q2lnDaqxdYVCKzUqQNhWmVabAMWMQHKIpunMyJJ6q+XMXYq7FVO5SZ7eVIJBFOyMI&#xA;pSOQVyPhYr3oe2GJF78kHkwLVDrOgNqlzqutMtrcWjWulSzcIoReyRs/MFOcytVW3J2UADfrlSAy&#xA;D0D4fj4NcTw/V80itvPt95dkin1KKz0Xy1Akp9FpFluryYBlVLcKaKlIgy1pyqAK5TPHRptEuIXu&#xA;9ZtrhZ4hIBTsR4HKyKVVwK7FXYqhtUtLG7065tr/AP3iljZbn42i/dkfF8alWXbuDkoEiQrmxlVb&#xA;8njepfm1BpfmG/0fyykE1ta2kZW+kLCBC8vE8EpVqM1SxY8jv89tp9DxZOHNYNXQ5ny8nWajXfuu&#xA;LCQRdWeQ8/Pmx+41+K3T/FltrV1c3k6NCmruqvLEhmLRxyBG9P01p8Scacq7KdhLRYjkqJA4QDty&#xA;vfn7+l9zbq5Rx2RfETz51ty93Wu9kn5F/mhLqNvF5c1G0nl1N5Li6lv4UaSAfWZ5Jwsv++6K4C9R&#xA;mNqdBPHDikd+4827DqoTlUeT2nNc5TsVdirsVSHz3qN/p/lTUJ9OJGoNH6VoVpyEkp4BlrtyQEsK&#xA;g9OhzJ0mOM8gEuTTqJmMCRzeSxXdsJrfzprFw8erK0kFxbtaurLcW3C2MlssbFHWMg833Xv8FDmZ&#xA;qdbww8IEDED87PUlowaQcZyEXkP6nqnkXVDc6RHaS3Etzc2w3nnYPJIhY8WZh1O1N853s3VS1GAZ&#xA;SK4jIfI07PUwEMpgOlfagfOnkCTWrn9KadfPaaqicFDkvA6j9lkPT5jM3NgwajH4WeAnDp0lE94L&#xA;RGWTHLjxy4ZfYfeEi0n8o7zUJVn843guoYz+60q25Jb0B29Qkln+VaZj6Ds/TaIfuY3k/ny3l8Ok&#xA;fhzZ58+XN9ZqP80cvj3/ABek2VjZ2NslrZwpb28QCxxRqFUAbdBmTKRJssAK5K2BLsVdirsVdiql&#xA;NaW0zK8kYZl6N0NPDbqPbCCQrFdB/L39E6s162r3N3BXlHayhB8Q3Uu4+1Tr8IX7tsnDwMcOHFih&#xA;jJ5kXZ9/7bccY8nHxTyTmO41Q+z7mX5W5DsVdirsVdirC/zH8hp5uhtYJ3kWK3LFRGdjzFGV1JFf&#xA;sr/nvmdotWcJNdXG1OmGWuhHIsf038oZNPMkds6xrcl1uLhYIFmFsyKi20TcmSFNiX9OP4vbI+PE&#xA;yMpCyff+D82fAaABoPTrKBre1jhY8mQUJ679euYkjZbQrYEuxV2KrZooponilUPFICrowqCDsQcI&#xA;JBsIIvYvLfOf5NPcGe88sTQWszqv+gXESyROVblQO3Lip4r8PGm33bbS9pASvIL/AKQ2l+112fQk&#xA;isZofzecft5Ma0D8hNa1S/8ArfmuW3srVaI9npw4+vx/bYkAJXvxHXfLP5SjhxjHis11l0tZaI5Z&#xA;meSgT0j1p7RoXl3RdBsVstJtI7S3XqEFCx/mZurH3OajLmlkNyNlz4QjEUBQTHK2bsVdirsVSvzJ&#xA;o0uraYbeCf6tcxustvMRyUOtftKCpIIJGxBHUEEDLsGXglZFhry4+ONPOrnyT5pS/Nx/h+xvLl+X&#xA;K8FyI1DyAepMiFFCSPSjP6ZcjblTM8flTvxSHlw/t/U4cfzINERrvv8AYP0sv8k+VtS0j6xd6pNC&#xA;13cBVS3tgfTiQdauwUyO1Bybio22G5JxNRmgQIwFRj+Pg5OLGQSZG5FlWYre7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqp/WI&#xA;OXD1F5eFRXDSqmBXYq7FXYq7FXYqtMkYdULAO9Sqkipp1oPbGlXYq7FXYq7FXYq7FXVFaV3HUYq1&#xA;yXlxqOXhXfFW8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVQOq362sNOrvsKdsnCNoJYlYx3eo&#xA;NBKkis0xPJBSig8h8TePwg060zRdmazU58gmT+6HFyG3Uc/gNuYvdzNRihAEfxM2tmiEfopIJGgA&#xA;jkoQSGCg0bwNCDm7JcRVwK7FXYq7FVC++s/U5vqrBbjifTZhUA/LfDGr3QUshvNNGpAzSr66qzRc&#xA;z8Y9SnPYEgUoBgx4TEGrNm0ynZQkHn3R5/OKeWYmEss1q1zBdRsHjco7K6ArXdeDV+WZUtJOOPjO&#xA;29NEdRGUuEbslzFb3Yq7FXYq7FXlXmzVL0+fUvNI1X0YoLSOKRYyZInkW4nSRHVeQqhhZTtUHM0D&#xA;hxXLlZ+4fJxZEHJtzob/ABPzRGi+cQupNd6k8sepXSpMNIaRKKRF6benyI4hgvKhNNmbbcZGozj6&#xA;NwNr7+ux6pBMT6v7P1fjdnXl/wAw2mt2X1iGOW3kU8ZrS4XhLGw7MASPkQSMxTEhyQUzwK7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FUq8xvZW+m3F9cJ6jWkMkyQhuBkMaFuAO/WlMnCRHJBDzq2/OPy&#xA;5q+giXyvLbxa5JU2unamfq4Escqj0SwPAvLHJ+74sRUVbo1DSaZJ5Gkkl1W5u59Nj0m61CJpriIO&#xA;pknlV1MjlI+SlI2lorliTy/loTEjZJLNsih2KuxV2KpT5i1X6haii1aU8RXYbmlK4mUIgymaiFAJ&#xA;NB4pZXcd5r+t2V/WKOD6sXdpHEkq3IMiiaSvNl3AEa0T2yvt/tTLgxac6U3LNxchxcq3iKPfdjfl&#xA;u0aLSRy5MozbRhXWud8/1cvJPvy28u+p5sbX5DFDb2UtzaWMcXwL6PEBQ0ZVSj+pJJyU037DvsMW&#xA;bPDSRxZjxZCAZSO5PXn9g9zV+WxeN4mPaI5DkA9jzDcx2KuxV2KpL5v1oaTo0lws8UEhKgPNXiFL&#xA;BWPwvG1fioCD9ojLMcSSgvI/LH5e6hdazJq17diS2YTXOlapErq7LdtI/renUFkm5+qyk/CSDWta&#xA;7jVanFLGABvtY+XX7P0Otw4MkZ78uh/HzTHSJLK71CSS6tg+o6ZOYzb3EYqnMELs1Qyyq4+OlGO4&#xA;3FRrMOkOK4iV45AHzve7HwFczztzjk4tyPUGfeSNJjgsYdSWQubyBAQwFV4noD/L7ZLVzuRFcijB&#xA;Coj3MnzEbnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8y/N8avHcaffaTbGfULCjQMahV9ZisihwG&#xA;KlkQ14ippTfpmEZ5oaqBETPCYyBrpLofL3nb4t4ETikLqdj5KPkLS/K0+s3Nrp+k29xp9za3I1e5&#xA;uBJPP9ZjuVRYbn1kIQurO4UvzKgclFFzYSLSzLy15NtdCkLRXU00MP1hNPtnI9O2hupxO8a9Xc8l&#xA;X4nY7AAU3rG0WyHArsVdirsVQWr6PZ6pbpBdBiiOJAFPEkgEUr1oa9swtdoMeqgIZL4Qb2bsGeWI&#xA;3HnTy7yP+V+r+WtS1S+1Yw301y0f1O75yTzIihwwLyqOGzAAKaZvs+fEYxhjBjGI5fLYeWzr8WKY&#xA;JMjZLLvLXlq5t553mNLeaaWdlRRCOUj8th8bV8Ty36inTMaeSxubLkADoKZeiqihVFFUAKPADMdk&#xA;3irsVdiqD1TSNO1SAQ3sIlRTVTUqw8aMpBFclGZHJUpfRbq2WkdZESgiZdmVVACjqTsBlgkGJtit&#xA;roHmk/mHf3txYrLpMlqvprI3wyvxVCHQP6bbsSeS8vxy/wAYcAjsK69fwGoYvUZWTfTp+C9Gs7WC&#xA;0tYra3iWCGJQqQx/YQfyr02HbMScjI2dy3AUKCtkUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0e5c94b8-7fee-674b-aaec-a812b4a451d1</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0e5c94b8-7fee-674b-aaec-a812b4a451d1</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:38f7aced-9789-461b-992e-1b96f47cf32e</stRef:instanceID>
            <stRef:documentID>xmp.did:ca9f4abd-ef5a-6f44-b798-5fdc8d1bcfc2</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3a20f972-edde-0b45-bb2e-054a8dc7c649</stEvt:instanceID>
                  <stEvt:when>2018-10-13T13:53:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a031fac5-c643-fa4b-80d7-3670d7b0ca92</stEvt:instanceID>
                  <stEvt:when>2020-02-24T17:26:54+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b496fad9-99ae-f84c-a06c-5a024908bdf6</stEvt:instanceID>
                  <stEvt:when>2020-02-24T20:14:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:89fa8d8c-b20e-7943-a8dd-e0af6fe6c10b</stEvt:instanceID>
                  <stEvt:when>2020-02-24T20:17:55+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ca9f4abd-ef5a-6f44-b798-5fdc8d1bcfc2</stEvt:instanceID>
                  <stEvt:when>2021-03-22T04:25:59+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0e5c94b8-7fee-674b-aaec-a812b4a451d1</stEvt:instanceID>
                  <stEvt:when>2021-03-24T11:55:44+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
211.715 229.41 mo
211.714 135.043 li
212.888 135.043 li
212.889 229.41 li
211.715 229.41 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.662745 .694118 .831373 rgb
f
191.404 241.136 mo
191.404 196.951 li
163.865 212.85 li
163.864 162.669 li
165.038 162.669 li
165.039 210.816 li
192.578 194.917 li
192.578 241.136 li
191.404 241.136 li
cp
f
233.338 216.926 mo
233.338 171.144 li
257.679 157.092 li
257.678 108.507 li
258.852 108.507 li
258.853 157.769 li
234.512 171.822 li
234.512 216.926 li
233.338 216.926 li
cp
f
225.768 153.669 mo
225.503 154.194 225.226 154.719 224.936 155.239 cv
224.821 155.444 224.706 155.653 224.586 155.858 cv
223.123 158.387 221.476 160.678 219.714 162.679 cv
219.445 162.986 219.168 163.289 218.891 163.584 cv
218.029 164.509 217.137 165.367 216.233 166.152 cv
212.419 169.462 208.354 171.454 204.702 171.749 cv
203.362 171.855 202.082 171.74 200.888 171.373 cv
200.257 171.181 199.647 170.917 199.07 170.584 cv
197.676 169.778 196.558 168.617 195.718 167.176 cv
192.304 161.339 193.422 150.913 199.07 141.127 cv
206.118 128.926 217.538 122.331 224.586 126.396 cv
231.211 130.223 231.608 142.112 225.768 153.669 cv
cp
.254902 .478431 .862745 rgb
f
225.768 153.669 mo
225.503 154.194 225.226 154.719 224.936 155.239 cv
224.821 155.444 224.706 155.653 224.586 155.858 cv
223.123 158.387 221.476 160.678 219.714 162.679 cv
219.172 161.084 218.865 159.377 218.84 157.683 cv
218.818 155.935 219.369 154.458 220.188 152.88 cv
220.559 152.163 221.075 151.399 221.877 151.233 cv
222.611 151.084 223.315 151.493 223.89 151.929 cv
224.577 152.445 225.2 153.029 225.768 153.669 cv
cp
.705882 .737255 .87451 rgb
f
224.936 155.239 mo
224.821 155.444 224.706 155.653 224.586 155.858 cv
218.114 167.06 207.961 173.536 200.888 171.373 cv
200.756 170.904 200.619 170.426 200.483 169.931 cv
200.009 168.216 198.972 165.618 198.832 164.394 cv
198.508 161.57 200.141 159.39 203.797 156.911 cv
206.268 155.235 211.208 153.033 216.032 151.523 cv
221.877 149.693 223.379 151.288 224.936 155.239 cv
cp
.870588 .882353 .933333 rgb
f
218.891 163.584 mo
218.029 164.509 217.137 165.367 216.233 166.152 cv
216.032 164.117 215.789 162.099 215.525 160.102 cv
216.442 159.462 216.894 159.138 217.799 158.499 cv
218.225 160.201 218.584 161.894 218.891 163.584 cv
cp
.0745098 .568627 .933333 rgb
f
218.77 158.274 mo
218.783 158.412 li
218.776 158.687 218.606 159.033 218.512 159.291 cv
218.31 159.85 218.055 160.39 217.752 160.901 cv
217.585 161.182 217.387 161.469 217.086 161.592 cv
216.748 161.731 216.355 161.629 216.036 161.45 cv
215.673 161.245 215.007 160.944 215.089 160.489 cv
215.16 160.093 215.301 159.693 215.431 159.314 cv
215.697 158.536 216.057 157.572 216.774 157.096 cv
217.581 156.562 218.154 157.363 218.581 157.96 cv
218.67 158.085 218.741 158.163 218.77 158.274 cv
cp
.188235 .392157 .780392 rgb
f
208.559 154.314 mo
208.385 159.772 218.626 159.865 218.479 154.731 cv
218.273 147.578 217.838 146.757 214.467 145.648 cv
213.544 145.344 212.578 145.11 211.602 145.092 cv
208.044 145.027 209.422 146.833 209.555 148.093 cv
209.952 151.832 208.621 152.349 208.559 154.314 cv
cp
.898039 .627451 .490196 rgb
f
208.559 154.314 mo
208.621 152.35 209.952 151.832 209.555 148.093 cv
209.422 146.833 208.044 145.027 211.602 145.092 cv
212.578 145.11 213.544 145.344 214.467 145.648 cv
217.792 146.742 218.26 147.559 218.469 154.441 cv
215.637 154.169 213.133 151.043 210.246 152.899 cv
209.477 153.476 208.959 154.219 208.599 155.038 cv
208.565 154.808 208.55 154.567 208.559 154.314 cv
cp
f
210.246 152.899 mo
213.133 151.043 215.637 154.169 218.469 154.441 cv
218.472 154.538 218.475 154.632 218.479 154.731 cv
218.618 159.627 209.312 159.77 208.599 155.038 cv
208.959 154.219 209.477 153.476 210.246 152.899 cv
cp
f
216.8 157.679 mo
216.981 158.264 217.753 158.467 218.262 158.806 cv
218.486 158.955 218.875 159.244 219.167 159.183 cv
219.463 159.121 219.64 158.728 219.74 158.485 cv
220.463 156.724 220.876 154.804 220.896 152.897 cv
220.901 152.293 220.804 151.619 220.329 151.193 cv
219.905 150.81 219.171 150.729 218.65 150.957 cv
218.091 151.202 217.955 152.304 218.154 152.813 cv
218.87 154.64 218.055 156.743 216.8 157.679 cv
cp
.705882 .737255 .87451 rgb
f
216.88 157.704 mo
216.88 157.704 215.991 159.11 214.906 160.075 cv
214.636 160.315 214.42 160.609 214.06 160.494 cv
212.302 159.929 208.601 156.822 207.865 154.855 cv
207.599 154.145 208.114 153.264 208.519 152.706 cv
208.591 152.607 209.157 151.84 209.265 151.765 cv
209.337 151.875 209.719 153.285 210.337 154.196 cv
211.759 156.294 214.357 157.36 216.88 157.704 cv
cp
f
204.809 171.424 mo
204.774 171.531 204.736 171.642 204.702 171.749 cv
203.362 171.855 202.082 171.74 200.888 171.373 cv
200.257 171.181 199.647 170.917 199.07 170.584 cv
197.676 169.778 196.558 168.617 195.718 167.176 cv
195.752 166.975 195.786 166.774 195.82 166.57 cv
196.084 165.013 196.613 163.468 197.402 162.065 cv
198.196 160.649 199.374 159.706 200.833 158.797 cv
201.494 158.387 202.309 157.999 203.094 158.225 cv
203.815 158.434 204.241 159.079 204.548 159.684 cv
206.391 163.353 206.042 167.726 204.809 171.424 cv
cp
f
222 137.161 mo
222.709 138.294 223.124 139.602 223.109 140.99 cv
223.103 141.587 223.005 142.184 222.805 142.748 cv
222.616 143.282 222.279 143.787 222.274 144.37 cv
222.267 145.054 222.76 145.818 222.982 146.461 cv
223.183 147.044 223.297 147.696 223.067 148.267 cv
222.935 148.596 222.7 148.87 222.51 149.168 cv
221.607 150.589 222.459 152.684 220.885 153.705 cv
220.492 153.96 220.027 154.009 219.562 154.034 cv
218.979 154.065 216.353 153.329 215.336 152.88 cv
214.214 152.384 213.119 151.107 212.309 150.186 cv
211.674 149.464 210.609 148.537 210.205 147.671 cv
210.081 147.405 210.379 147.357 210.108 147.225 cv
209.944 147.146 209.745 146.1 209.563 146.08 cv
209.347 146.057 209.054 145.818 208.871 145.695 cv
208.519 145.46 208.35 146.315 208.234 145.907 cv
207.741 144.179 207.115 142.414 207.189 140.59 cv
207.257 138.92 207.22 137.487 208.296 136.067 cv
209.103 134.999 210.257 134.223 211.508 133.747 cv
213.419 133.02 215.583 132.982 217.519 133.64 cv
219.351 134.264 220.98 135.532 222 137.161 cv
cp
.945098 .737255 .643137 rgb
f
207.189 140.59 mo
207.257 138.92 207.22 137.487 208.296 136.067 cv
209.103 134.999 210.257 134.223 211.508 133.747 cv
212.649 133.313 213.88 133.128 215.098 133.188 cv
216.921 136.83 214.281 141.497 216.27 145.274 cv
216.935 146.161 218.266 146.827 218.266 147.936 cv
218.709 149.928 216.721 151.7 217.817 153.692 cv
216.904 153.448 215.885 153.122 215.336 152.88 cv
214.214 152.384 213.119 151.107 212.309 150.186 cv
211.674 149.464 210.609 148.537 210.205 147.671 cv
210.081 147.405 210.379 147.357 210.108 147.225 cv
209.944 147.146 209.745 146.1 209.563 146.08 cv
209.347 146.057 209.054 145.818 208.87 145.695 cv
208.519 145.46 208.351 146.315 208.234 145.907 cv
207.741 144.179 207.115 142.414 207.189 140.59 cv
cp
f
215.664 138.699 mo
215.193 138.623 214.718 138.637 214.286 138.831 cv
213.553 139.161 213.116 139.956 212.999 140.752 cv
212.741 142.504 213.345 144.254 213.395 145.992 cv
213.402 146.253 213.386 146.526 213.258 146.754 cv
212.908 147.373 212.253 147.036 211.881 146.643 cv
211.643 146.392 211.457 146.096 211.229 145.836 cv
211.001 145.577 210.715 145.345 210.374 145.283 cv
209.831 145.184 209.412 145.612 209.326 146.114 cv
209.247 146.574 209.333 147.035 209.454 147.479 cv
209.483 147.585 209.712 148.386 209.384 148.389 cv
209.054 148.393 206.152 145.406 206.022 140.329 cv
205.897 135.46 209.275 134.552 209.275 134.552 cv
209.275 134.552 210.763 132.03 214.685 132.217 cv
216.748 132.315 218.767 132.987 220.51 134.075 cv
220.718 134.208 li
221.564 134.758 222.365 135.412 222.912 136.259 cv
224.417 138.587 222.39 140.451 219.949 140.062 cv
218.8 139.878 217.741 139.346 216.643 138.96 cv
216.328 138.849 215.997 138.752 215.664 138.699 cv
cp
.105882 .0823529 .117647 rgb
f
209.859 143.951 mo
208.412 143.853 208.045 145.648 209.038 147.035 cv
209.328 147.44 209.841 147.8 210.219 148.122 cv
212.811 150.329 213.462 147.94 212.639 147.189 cv
210.726 145.444 211.679 144.073 209.859 143.951 cv
cp
.945098 .737255 .643137 rgb
f
210.732 147.376 mo
210.566 147.224 208.918 146.251 210.041 145.588 cv
210.351 145.406 210.698 145.678 210.746 146.007 cv
210.77 146.177 210.717 146.353 210.743 146.523 cv
210.757 146.624 210.8 146.719 210.853 146.806 cv
210.999 147.045 211.499 147.274 211.401 147.622 cv
211.315 147.931 210.828 147.464 210.732 147.376 cv
cp
.898039 .627451 .490196 rgb
f
177.641 181.75 mo
177.385 182.24 177.113 182.731 176.831 183.217 cv
176.703 183.439 li
175.709 185.133 174.634 186.719 173.495 188.183 cv
172.876 188.985 172.236 189.749 171.579 190.469 cv
171.49 190.568 li
171.247 190.836 171.003 191.096 170.756 191.348 cv
169.224 192.94 167.625 194.317 166.003 195.452 cv
163.269 197.372 160.475 198.601 157.864 199.002 cv
157.104 199.117 156.358 199.164 155.633 199.138 cv
154.08 199.087 152.625 198.703 151.32 197.948 cv
150.548 197.5 149.861 196.945 149.255 196.292 cv
144.358 190.998 145.044 179.352 151.32 168.486 cv
158.363 156.285 169.788 149.69 176.831 153.76 cv
183.597 157.663 183.866 169.975 177.641 181.75 cv
cp
.760784 .784314 .890196 rgb
f
177.641 181.75 mo
177.385 182.24 177.113 182.731 176.831 183.217 cv
176.703 183.439 li
175.167 186.063 173.431 188.426 171.579 190.469 cv
170.491 185.7 169.041 179.489 168.435 178.303 cv
167.518 176.498 170.713 180.483 172.565 179.783 cv
173.9 179.275 175.573 179.489 176.605 180.495 cv
176.993 180.871 177.339 181.293 177.641 181.75 cv
cp
.560784 .603922 .823529 rgb
f
161.808 181.319 mo
161.808 181.319 171.19 186.036 170.739 180.827 cv
170.11 173.567 169.649 172.757 166.394 171.82 cv
165.503 171.563 165.153 170.811 164.229 170.848 cv
160.861 170.983 162.273 172.741 162.476 174.015 cv
163.08 177.793 161.748 179.319 161.808 181.319 cv
cp
.898039 .627451 .490196 rgb
f
173.495 179.723 mo
173.495 188.183 li
172.876 188.985 172.236 189.749 171.579 190.469 cv
169.8 192.436 167.915 194.113 166.003 195.452 cv
158.418 195.452 li
159.43 180.534 li
161.439 179.621 161.806 179.254 163.913 178.776 cv
164.255 178.699 165.402 179.134 165.748 179.062 cv
168.307 178.52 171.037 178.64 173.414 179.685 cv
173.495 179.723 li
cp
f
161.229 183.049 mo
160.599 182.549 159.067 180.666 159.067 180.666 cv
159.66 180.396 160.137 180.166 160.576 179.958 cv
161.711 181.811 165.296 184.445 168.783 184.003 cv
170.412 183.797 170.947 182.042 172.373 179.337 cv
172.722 179.449 173.078 179.537 173.414 179.685 cv
173.493 179.723 li
173.493 179.723 171.695 183.265 170.683 184.277 cv
168.095 186.865 163.096 184.53 161.229 183.049 cv
cp
.870588 .882353 .933333 rgb
f
170.281 178.508 mo
170.408 178.514 li
170.035 178.399 169.82 178.496 170.281 178.508 cv
cp
.705882 .737255 .87451 rgb
f
176.703 183.439 mo
170.965 193.251 162.399 199.377 155.633 199.138 cv
155.317 198.379 155.035 197.645 154.587 196.915 cv
154.024 195.998 153.56 195.068 152.992 194.155 cv
152.455 193.289 151.972 192.389 151.747 191.391 cv
151.559 190.55 151.328 189.71 151.29 188.836 cv
151.277 188.524 151.281 188.225 151.299 187.935 cv
151.409 186.267 152.066 184.983 153.538 183.895 cv
155.266 182.624 157.245 181.771 159.071 180.666 cv
160.522 184.937 164.945 186.711 168.158 185.619 cv
168.555 185.487 168.926 185.295 169.259 185.03 cv
170.543 184.083 171.695 183.162 171.549 180.223 cv
171.49 179.062 170.846 178.644 170.411 178.512 cv
174.834 178.669 175.982 180.764 176.703 183.439 cv
cp
f
171.49 190.568 mo
171.247 190.836 171.003 191.096 170.756 191.348 cv
170.112 189.228 169.31 187.167 168.721 185.026 cv
168.653 184.778 168.994 184.646 169.126 184.855 cv
170.188 186.575 170.918 188.567 171.49 190.568 cv
cp
.870588 .882353 .933333 rgb
f
171.608 179.581 mo
171.653 180.827 171.192 182.544 170.509 183.592 cv
170.183 184.092 169.085 184.534 168.529 184.752 cv
168.841 185.086 170.665 186.367 171.075 186.594 cv
171.793 186.989 172.499 187.176 173.214 186.684 cv
174.171 186.026 174.865 183.94 173.216 180.931 cv
173.032 180.594 172.817 180.276 172.537 180.016 cv
172.403 179.892 172.272 179.776 172.105 179.697 cv
171.608 179.581 li
cp
f
159.784 180.642 mo
159.692 180.632 159.621 180.66 159.572 180.727 cv
159.556 181.147 160.206 180.289 160.507 180.486 cv
161.5 181.137 162.116 183.075 163.827 184.097 cv
166.299 185.573 168.59 184.731 168.807 184.641 cv
168.899 185.801 168.98 188.399 167.994 188.892 cv
165.659 190.06 161.864 188.303 160.485 186.779 cv
159.745 185.962 159.218 185.365 158.711 184.388 cv
158.413 183.814 158.017 183.171 158.125 182.498 cv
158.166 182.24 158.651 180.979 159.067 180.666 cv
159.784 180.642 li
cp
f
156.572 172.51 mo
156.556 171.781 156.582 171.054 156.676 170.331 cv
156.874 168.793 157.44 165.55 159.078 163.851 cv
159.886 163.934 160.015 166.328 160.805 166.493 cv
161.556 166.65 162.217 167.153 162.894 167.504 cv
163.31 167.721 164.01 167.932 164.198 168.416 cv
164.553 169.327 163.302 170.849 162.929 171.662 cv
162.109 173.46 162.031 175.515 162.132 177.457 cv
162.24 179.53 162.939 181.575 164.152 183.263 cv
165.092 184.571 166.319 185.664 167.184 187.023 cv
168.488 189.073 168.872 191.685 168.212 194.024 cv
167.509 192.814 166.793 191.588 165.776 190.627 cv
164.436 189.363 162.663 188.646 161.278 187.431 cv
159.979 186.292 159.077 184.759 158.455 183.148 cv
157.444 180.534 157.027 177.745 156.743 174.973 cv
156.66 174.155 156.59 173.332 156.572 172.51 cv
cp
.196078 .164706 .211765 rgb
f
165.442 176.58 mo
165.17 176.354 164.903 176.121 164.643 175.881 cv
163.743 175.05 162.721 174.083 162.093 173.029 cv
160.078 169.643 159.963 165.094 162.8 162.126 cv
164.813 160.021 168.017 159.142 170.823 159.926 cv
171.583 160.139 172.307 160.461 173.01 160.819 cv
173.616 161.128 174.22 161.473 174.683 161.972 cv
174.987 162.301 175.222 162.686 175.437 163.079 cv
175.823 163.783 176.028 164.479 176.247 165.245 cv
176.368 165.668 176.326 166.115 176.326 166.55 cv
176.326 167.32 176.272 168.065 176.123 168.823 cv
175.999 169.446 175.913 170.074 175.899 170.706 cv
175.884 171.348 176.198 171.894 176.402 172.489 cv
176.526 172.854 176.741 173.422 176.632 173.789 cv
176.512 174.19 176.079 174.511 175.878 174.877 cv
175.662 175.268 175.596 175.56 175.579 176.015 cv
175.568 176.308 175.469 176.496 175.356 176.755 cv
175.26 176.973 175.313 177.132 175.28 177.35 cv
175.241 177.608 175.041 177.833 174.949 178.072 cv
174.844 178.343 174.757 178.607 174.615 178.864 cv
173.779 180.373 172.563 180.473 171.056 179.888 cv
169.018 179.098 167.116 177.971 165.442 176.58 cv
cp
.945098 .737255 .643137 rgb
f
158.649 166.292 mo
158.781 162.014 160.038 161.284 161.657 159.915 cv
163.227 158.588 165.346 157.983 167.392 158.037 cv
169.483 158.092 171.53 158.8 173.301 159.895 cv
173.512 160.029 li
174.43 160.62 175.242 161.298 175.733 162.291 cv
176.168 163.172 176.349 164.063 176.435 165.029 cv
176.452 165.223 176.466 165.431 176.364 165.595 cv
176.261 165.762 176.065 165.842 175.878 165.9 cv
174.382 166.367 172.551 166.046 171.359 165.015 cv
171.231 166.09 170.443 166.95 169.694 167.73 cv
168.908 168.548 167.931 169.345 167.265 170.259 cv
166.818 170.874 166.652 171.497 165.974 171.954 cv
165.354 172.369 164.92 172.401 164.253 172.101 cv
163.655 171.831 163.04 171.37 162.384 171.78 cv
161.778 172.159 162.01 172.951 162.155 173.522 cv
162.184 173.629 162.42 174.44 162.088 174.444 cv
161.754 174.45 158.488 171.435 158.649 166.292 cv
cp
.223529 .192157 .243137 rgb
f
158.649 166.292 mo
158.726 163.785 159.19 162.497 159.887 161.584 cv
159.887 161.584 161.842 162.329 163.586 163.554 cv
165.217 164.7 167.014 166.774 167.014 166.774 cv
166.873 167.403 167.215 168.027 167.358 168.654 cv
167.47 169.143 167.241 168.898 167.102 169.375 cv
165.236 171.018 li
164.325 172.13 li
164.253 172.101 li
163.655 171.831 163.04 171.37 162.384 171.78 cv
161.778 172.159 162.253 173.219 162.398 173.791 cv
162.428 173.898 162.667 175.139 162.667 175.139 cv
162.332 175.144 158.488 171.435 158.649 166.292 cv
cp
f
162.738 170.176 mo
161.279 170.084 160.916 171.897 161.923 173.291 cv
162.217 173.698 162.735 174.059 163.119 174.382 cv
165.742 176.598 166.389 174.187 165.555 173.432 cv
163.618 171.679 164.574 170.293 162.738 170.176 cv
cp
.945098 .737255 .643137 rgb
f
163.684 173.49 mo
163.516 173.337 161.849 172.363 162.979 171.69 cv
163.291 171.503 163.642 171.776 163.692 172.108 cv
163.718 172.281 163.664 172.457 163.69 172.629 cv
163.706 172.731 163.749 172.827 163.804 172.914 cv
163.952 173.155 164.457 173.384 164.36 173.736 cv
164.274 174.047 163.781 173.578 163.684 173.49 cv
cp
.898039 .627451 .490196 rgb
f
158.103 197.513 mo
158.026 198.008 157.945 198.507 157.864 199.002 cv
157.104 199.117 156.358 199.164 155.633 199.138 cv
154.08 199.087 152.625 198.703 151.32 197.948 cv
150.548 197.5 149.861 196.945 149.255 196.292 cv
149.344 194.642 149.46 192.991 149.622 191.344 cv
149.78 189.783 149.899 188.115 150.411 186.621 cv
150.471 186.442 150.548 186.28 150.637 186.127 cv
151.256 185.06 152.519 184.591 153.768 185.03 cv
154.955 185.448 155.816 186.489 156.452 187.573 cv
158.188 190.538 158.636 194.177 158.103 197.513 cv
cp
.870588 .882353 .933333 rgb
f
272.325 126.707 mo
272.145 127.04 271.962 127.369 271.774 127.701 cv
271.667 127.889 li
270.055 130.687 268.208 133.192 266.232 135.337 cv
265.976 135.619 265.716 135.896 265.452 136.165 cv
264.565 137.078 263.651 137.918 262.73 138.678 cv
258.937 141.809 254.932 143.648 251.357 143.81 cv
249.471 143.895 247.705 143.516 246.152 142.62 cv
245.384 142.176 244.697 141.622 244.096 140.973 cv
243.239 140.047 242.552 138.929 242.04 137.654 cv
239.604 131.63 240.977 122.13 246.152 113.158 cv
253.199 100.957 264.62 94.3617 271.663 98.4315 cv
278.484 102.365 278.702 114.848 272.325 126.707 cv
cp
.760784 .784314 .890196 rgb
f
272.325 126.707 mo
272.145 127.04 271.962 127.369 271.774 127.701 cv
271.667 127.889 li
270.055 130.687 268.208 133.192 266.232 135.337 cv
266.053 134.365 265.955 133.379 265.938 132.39 cv
265.912 130.461 266.522 128.832 267.427 127.087 cv
267.837 126.298 268.404 125.453 269.291 125.27 cv
270.102 125.103 270.878 125.56 271.518 126.042 cv
271.795 126.251 272.064 126.473 272.325 126.707 cv
cp
.705882 .737255 .87451 rgb
f
271.774 127.701 mo
271.667 127.889 li
264.62 140.094 253.199 146.685 246.152 142.62 cv
245.384 142.176 244.697 141.622 244.096 140.973 cv
243.972 140.521 243.878 140.12 243.844 139.8 cv
243.486 136.681 245.291 134.275 249.33 131.54 cv
252.056 129.689 257.508 127.262 262.841 125.594 cv
268.195 123.917 270.247 124.843 271.774 127.701 cv
cp
.870588 .882353 .933333 rgb
f
265.452 136.165 mo
264.565 137.078 263.651 137.918 262.73 138.678 cv
262.589 137.466 262.436 136.263 262.278 135.064 cv
263.289 134.356 263.792 133.998 264.791 133.29 cv
265.03 134.25 265.251 135.209 265.452 136.165 cv
cp
.0745098 .568627 .933333 rgb
f
265.861 133.045 mo
265.876 133.197 li
265.867 133.501 265.68 133.883 265.576 134.168 cv
265.353 134.785 265.071 135.382 264.737 135.946 cv
264.553 136.256 264.334 136.572 264.001 136.709 cv
263.628 136.862 263.194 136.749 262.843 136.552 cv
262.442 136.326 261.706 135.993 261.796 135.491 cv
261.875 135.053 262.03 134.612 262.174 134.193 cv
262.468 133.334 262.865 132.27 263.657 131.744 cv
264.548 131.154 265.181 132.039 265.652 132.698 cv
265.751 132.836 265.829 132.922 265.861 133.045 cv
cp
.188235 .392157 .780392 rgb
f
254.586 128.672 mo
254.395 134.699 265.702 134.801 265.539 129.133 cv
265.313 121.235 264.833 120.328 261.11 119.103 cv
260.09 118.767 259.024 118.509 257.946 118.489 cv
254.017 118.417 255.539 120.412 255.687 121.804 cv
256.125 125.932 254.655 126.503 254.586 128.672 cv
cp
.898039 .627451 .490196 rgb
f
254.586 128.672 mo
254.655 126.503 256.125 125.932 255.687 121.804 cv
255.539 120.412 254.017 118.417 257.946 118.489 cv
259.024 118.509 260.09 118.767 261.11 119.103 cv
264.781 120.311 265.298 121.214 265.529 128.813 cv
262.401 128.513 259.637 125.061 256.449 127.11 cv
255.6 127.747 255.028 128.567 254.631 129.472 cv
254.593 129.218 254.577 128.952 254.586 128.672 cv
cp
f
256.449 127.11 mo
259.637 125.061 262.401 128.513 265.529 128.813 cv
265.533 128.92 265.536 129.023 265.539 129.133 cv
265.694 134.539 255.417 134.697 254.631 129.472 cv
255.028 128.567 255.6 127.747 256.449 127.11 cv
cp
f
263.686 132.389 mo
263.886 133.033 264.738 133.257 265.3 133.633 cv
265.547 133.797 265.977 134.116 266.3 134.048 cv
266.626 133.98 266.821 133.547 266.932 133.278 cv
267.731 131.334 268.187 129.213 268.208 127.108 cv
268.215 126.441 268.107 125.696 267.583 125.225 cv
267.114 124.803 266.305 124.713 265.729 124.965 cv
265.111 125.236 264.962 126.453 265.181 127.015 cv
265.971 129.033 265.072 131.355 263.686 132.389 cv
cp
.705882 .737255 .87451 rgb
f
263.775 132.415 mo
263.775 132.415 262.793 133.968 261.594 135.034 cv
261.297 135.298 261.058 135.624 260.661 135.495 cv
258.72 134.873 254.633 131.441 253.82 129.27 cv
253.527 128.486 254.094 127.512 254.541 126.897 cv
254.622 126.788 255.247 125.94 255.365 125.857 cv
255.446 125.979 255.868 127.536 256.549 128.542 cv
258.12 130.858 260.989 132.036 263.775 132.415 cv
cp
f
251.357 143.81 mo
249.471 143.895 247.705 143.516 246.152 142.62 cv
245.384 142.176 244.697 141.622 244.096 140.973 cv
243.239 140.047 242.552 138.929 242.04 137.654 cv
242.112 137.513 242.189 137.372 242.266 137.232 cv
243.144 135.666 244.441 134.625 246.054 133.623 cv
246.783 133.17 247.684 132.744 248.554 132.991 cv
249.343 133.221 249.821 133.934 250.158 134.604 cv
251.595 137.462 251.822 140.708 251.357 143.81 cv
cp
f
269.428 109.732 mo
270.211 110.983 270.669 112.427 270.652 113.96 cv
270.646 114.62 270.537 115.279 270.317 115.901 cv
270.108 116.491 269.736 117.048 269.73 117.692 cv
269.723 118.447 270.267 119.291 270.512 120.001 cv
270.734 120.644 270.86 121.365 270.605 121.996 cv
270.46 122.358 270.2 122.661 269.991 122.99 cv
268.994 124.559 269.935 126.873 268.197 128 cv
267.762 128.281 267.25 128.336 266.735 128.363 cv
266.092 128.397 263.192 127.584 262.07 127.089 cv
260.83 126.54 259.622 125.131 258.727 124.114 cv
258.025 123.317 256.85 122.293 256.404 121.337 cv
256.266 121.044 256.596 120.99 256.297 120.844 cv
256.116 120.757 255.896 119.602 255.695 119.581 cv
255.456 119.555 255.133 119.291 254.931 119.155 cv
254.541 118.896 254.355 119.84 254.227 119.39 cv
253.683 117.481 252.993 115.532 253.074 113.519 cv
253.149 111.674 253.108 110.092 254.295 108.523 cv
255.187 107.345 256.461 106.488 257.843 105.962 cv
259.953 105.159 262.342 105.117 264.479 105.844 cv
266.502 106.534 268.301 107.933 269.428 109.732 cv
cp
.945098 .737255 .643137 rgb
f
253.074 113.519 mo
253.149 111.674 253.108 110.092 254.295 108.523 cv
255.187 107.345 256.461 106.488 257.843 105.962 cv
259.102 105.483 260.461 105.279 261.807 105.345 cv
263.82 109.367 260.905 114.52 263.1 118.69 cv
263.835 119.669 265.305 120.405 265.305 121.63 cv
265.794 123.83 263.6 125.786 264.808 127.985 cv
263.801 127.716 262.676 127.356 262.07 127.089 cv
260.83 126.54 259.622 125.131 258.727 124.114 cv
258.025 123.317 256.85 122.293 256.404 121.337 cv
256.266 121.044 256.596 120.99 256.297 120.844 cv
256.116 120.757 255.896 119.602 255.695 119.581 cv
255.456 119.555 255.133 119.291 254.93 119.155 cv
254.541 118.896 254.356 119.84 254.227 119.39 cv
253.683 117.481 252.993 115.532 253.074 113.519 cv
cp
f
262.385 112.617 mo
261.732 112.596 260.482 112.453 260.029 113.05 cv
259.402 113.874 259.885 115.031 260.054 115.929 cv
260.289 117.177 260.452 118.442 260.648 119.696 cv
260.69 119.961 260.729 120.245 260.612 120.486 cv
260.447 120.825 260.012 120.961 259.641 120.892 cv
259.271 120.824 258.951 120.595 258.654 120.363 cv
258.143 119.962 257.663 119.526 257.198 119.071 cv
256.812 118.693 256.392 118.296 255.896 118.778 cv
255.36 119.301 255.395 120.46 255.575 121.125 cv
255.606 121.242 255.859 122.126 255.497 122.13 cv
255.133 122.135 251.928 118.835 251.785 113.23 cv
251.647 107.854 255.376 106.851 255.376 106.851 cv
255.376 106.851 257.02 104.066 261.351 104.273 cv
265.741 104.482 269.798 106.141 272.135 110.076 cv
271.737 111.42 270.464 112.366 269.113 112.739 cv
267.761 113.112 266.328 113.004 264.934 112.849 cv
264.088 112.755 263.236 112.644 262.385 112.617 cv
cp
.105882 .0823529 .117647 rgb
f
256.021 117.229 mo
254.424 117.122 254.019 119.104 255.115 120.635 cv
255.435 121.082 256.001 121.479 256.419 121.835 cv
259.281 124.272 260 121.635 259.091 120.805 cv
256.979 118.878 258.031 117.364 256.021 117.229 cv
cp
.945098 .737255 .643137 rgb
f
256.986 121.012 mo
256.802 120.844 254.982 119.77 256.222 119.037 cv
256.565 118.835 256.948 119.136 257.001 119.5 cv
257.028 119.688 256.969 119.882 256.997 120.07 cv
257.014 120.181 257.061 120.286 257.119 120.382 cv
257.281 120.646 257.833 120.899 257.725 121.283 cv
257.629 121.624 257.091 121.108 256.986 121.012 cv
cp
.898039 .627451 .490196 rgb
f
265.716 126.538 mo
265.071 126.334 264.461 126.026 263.884 125.671 cv
262.846 125.034 262.16 124.758 261.322 123.203 cv
260.959 122.53 260.691 120.734 260.601 119.392 cv
260.541 118.476 259.052 116.747 258.387 116.376 cv
257.614 115.944 257.71 118.601 257.768 118.972 cv
258.116 121.174 258.078 121.176 258.335 122.382 cv
258.605 123.648 258.441 123.008 258.757 124.264 cv
258.932 124.959 259.799 126.566 260.075 127.226 cv
260.383 127.964 260.795 128.659 261.295 129.285 cv
262.269 130.503 263.546 131.336 265.01 131.875 cv
266.329 132.361 267.977 132.516 268.869 131.2 cv
269.374 130.454 269.639 129.553 269.644 128.653 cv
269.648 127.922 269.469 127.137 269.275 126.436 cv
268.856 126.818 268.453 126.796 267.891 126.822 cv
267.157 126.855 266.417 126.76 265.716 126.538 cv
cp
.105882 .0823529 .117647 rgb
f
267.459 123.844 mo
266.987 124.312 266.672 124.917 266.216 125.4 cv
265.807 125.832 265.288 126.159 264.722 126.341 cv
264.869 126.626 265.181 126.794 265.495 126.856 cv
265.944 126.944 266.428 126.843 266.804 126.582 cv
267.375 126.185 267.661 125.476 268.215 125.057 cv
268.437 124.889 268.693 124.774 268.933 124.635 cv
269.173 124.495 269.405 124.321 269.537 124.076 cv
269.846 123.505 269.435 123.31 268.944 123.25 cv
268.388 123.182 267.846 123.46 267.459 123.844 cv
cp
f
253.198 99.8278 mo
253.377 99.724 253.548 99.4601 253.548 97.8656 cv
253.548 96.3743 253.476 96.1881 253.207 96.3433 cv
253.01 96.4573 252.848 96.7986 252.848 98.269 cv
252.848 99.8843 252.974 99.9573 253.198 99.8278 cv
cp
253.243 95.3699 mo
254.202 94.8162 254.642 95.1107 254.642 97.2029 cv
254.642 99.2013 254.139 100.237 253.171 100.796 cv
252.202 101.356 251.754 101.23 251.754 98.911 cv
251.754 97.037 252.292 95.9186 253.243 95.3699 cv
cp
.662745 .694118 .831373 rgb
f
256.938 92.7499 mo
256.938 92.4288 256.973 92.1498 257.037 91.885 cv
256.938 91.9114 256.83 91.942 256.687 92.0254 cv
256.525 92.1183 256.22 92.3459 256.22 92.9365 cv
256.22 93.7543 li
256.938 93.3403 li
256.938 92.7499 li
cp
259.771 89.6537 mo
259.771 96.6746 li
259.771 96.8815 259.771 96.8815 258.776 97.4561 cv
258.776 90.8702 li
258.704 90.8914 258.615 90.9225 258.498 90.9895 cv
258.229 91.1445 257.933 91.4193 257.933 92.0094 cv
257.933 92.7654 li
258.39 92.5018 li
258.39 93.3922 258.372 93.4644 258.211 93.5573 cv
257.933 93.7175 li
257.933 97.736 li
257.933 97.736 257.933 97.9429 257.754 98.0466 cv
256.938 98.5179 li
256.938 94.2925 li
256.22 94.7064 li
256.22 98.7249 li
256.22 98.7249 256.22 98.9318 256.05 99.0303 cv
255.225 99.5067 li
255.225 95.2817 li
254.687 95.5924 li
254.687 94.702 254.687 94.6403 254.929 94.5004 cv
255.225 94.3292 li
255.225 93.6665 li
255.225 92.1343 256.068 91.4193 256.642 91.0879 cv
256.982 90.8914 257.269 90.8296 257.512 90.8348 cv
257.799 90.4304 258.148 90.1669 258.426 90.0062 cv
259.054 89.6433 259.511 89.6174 259.771 89.6537 cv
cp
f
260.363 91.6003 mo
260.65 91.2802 261.305 90.7156 261.753 90.4568 cv
262.668 89.9288 263.044 90.0114 263.044 91.0469 cv
263.044 94.785 li
263.044 94.9919 263.018 95.0074 262.013 95.5876 cv
262.013 92.0046 li
262.013 91.4561 261.968 91.316 261.717 91.4612 cv
261.592 91.5333 261.466 91.6473 261.358 91.7925 cv
261.358 95.7587 li
261.358 95.9657 261.341 95.9761 260.363 96.5398 cv
260.363 91.6003 li
cp
f
264.622 91.2029 mo
264.874 91.0577 265.16 90.8706 265.295 90.7212 cv
265.331 90.576 265.341 90.322 265.341 90.1565 cv
265.341 89.4939 265.259 89.4265 265.035 89.556 cv
264.757 89.7168 264.649 90.2343 264.622 91.2029 cv
cp
266.165 91.8859 mo
266.219 92.0613 266.246 92.3671 266.246 92.6056 cv
266.246 93.0194 265.672 93.5789 264.972 93.9832 cv
264.156 94.4545 263.582 94.3093 263.582 92.3416 cv
263.582 89.8361 264.327 88.9707 265.16 88.4895 cv
265.878 88.0752 266.308 88.3132 266.308 89.5142 cv
266.308 90.0114 266.273 90.6019 266.183 91.0577 cv
265.743 91.4149 265.071 91.834 264.622 92.1031 cv
264.659 92.7559 264.784 92.9728 265.215 92.7247 cv
265.537 92.5386 265.851 92.2432 266.165 91.8859 cv
cp
f
156.273 155.134 mo
156.453 155.03 156.624 154.766 156.624 153.171 cv
156.624 151.681 156.552 151.495 156.282 151.65 cv
156.085 151.763 155.924 152.105 155.924 153.575 cv
155.924 155.191 156.05 155.264 156.273 155.134 cv
cp
156.319 150.676 mo
157.278 150.122 157.718 150.417 157.718 152.509 cv
157.718 154.508 157.215 155.544 156.247 156.103 cv
155.278 156.661 154.83 156.537 154.83 154.217 cv
154.83 152.343 155.368 151.225 156.319 150.676 cv
cp
f
160.014 148.056 mo
160.014 147.735 160.049 147.456 160.112 147.191 cv
160.014 147.217 159.906 147.248 159.762 147.332 cv
159.601 147.425 159.296 147.652 159.296 148.243 cv
159.296 149.061 li
160.014 148.647 li
160.014 148.056 li
cp
162.848 144.96 mo
162.848 151.981 li
162.848 152.187 162.848 152.187 161.852 152.762 cv
161.852 146.177 li
161.78 146.198 161.691 146.229 161.574 146.296 cv
161.305 146.451 161.009 146.726 161.009 147.316 cv
161.009 148.072 li
161.466 147.807 li
161.466 148.699 161.448 148.771 161.287 148.864 cv
161.009 149.024 li
161.009 153.042 li
161.009 153.042 161.009 153.249 160.83 153.353 cv
160.014 153.824 li
160.014 149.599 li
159.296 150.013 li
159.296 154.031 li
159.296 154.031 159.296 154.238 159.126 154.336 cv
158.301 154.813 li
158.301 150.588 li
157.762 150.899 li
157.762 150.008 157.762 149.946 158.005 149.806 cv
158.301 149.635 li
158.301 148.973 li
158.301 147.441 159.144 146.725 159.718 146.394 cv
160.058 146.198 160.345 146.136 160.588 146.14 cv
160.875 145.737 161.224 145.473 161.502 145.313 cv
162.13 144.95 162.587 144.924 162.848 144.96 cv
cp
f
163.439 146.907 mo
163.726 146.586 164.381 146.021 164.829 145.763 cv
165.743 145.235 166.12 145.317 166.12 146.352 cv
166.12 150.091 li
166.12 150.298 166.094 150.314 165.089 150.894 cv
165.089 147.311 li
165.089 146.762 165.044 146.622 164.793 146.767 cv
164.668 146.84 164.542 146.953 164.434 147.099 cv
164.434 151.065 li
164.434 151.271 164.416 151.281 163.439 151.846 cv
163.439 146.907 li
cp
f
167.698 146.508 mo
167.949 146.364 168.236 146.177 168.371 146.027 cv
168.406 145.882 168.416 145.628 168.416 145.463 cv
168.416 144.8 168.335 144.732 168.111 144.862 cv
167.833 145.023 167.725 145.54 167.698 146.508 cv
cp
169.241 147.192 mo
169.295 147.367 169.322 147.673 169.322 147.912 cv
169.322 148.326 168.748 148.885 168.048 149.289 cv
167.232 149.76 166.658 149.615 166.658 147.648 cv
166.658 145.142 167.402 144.277 168.236 143.796 cv
168.954 143.381 169.384 143.619 169.384 144.821 cv
169.384 145.317 169.349 145.907 169.259 146.363 cv
168.819 146.72 168.147 147.14 167.698 147.409 cv
167.734 148.061 167.86 148.279 168.291 148.031 cv
168.613 147.844 168.927 147.549 169.241 147.192 cv
cp
f
204.015 127.777 mo
204.195 127.674 204.365 127.409 204.365 125.814 cv
204.365 124.323 204.293 124.138 204.024 124.293 cv
203.827 124.406 203.666 124.748 203.666 126.219 cv
203.666 127.834 203.791 127.906 204.015 127.777 cv
cp
204.06 123.319 mo
205.02 122.765 205.459 123.06 205.459 125.152 cv
205.459 127.151 204.957 128.186 203.988 128.746 cv
203.02 129.305 202.571 129.18 202.571 126.86 cv
202.571 124.986 203.11 123.868 204.06 123.319 cv
cp
.254902 .478431 .862745 rgb
f
205.934 122.579 mo
206.221 122.258 206.876 121.693 207.325 121.435 cv
208.239 120.906 208.616 120.989 208.616 122.024 cv
208.616 125.763 li
208.616 125.97 208.589 125.985 207.585 126.566 cv
207.585 122.983 li
207.585 122.434 207.539 122.294 207.288 122.439 cv
207.164 122.511 207.038 122.625 206.93 122.77 cv
206.93 126.736 li
206.93 126.943 206.912 126.953 205.934 127.518 cv
205.934 122.579 li
cp
f
210.176 124.862 mo
210.176 125.069 210.176 125.069 209.18 125.644 cv
209.18 118.541 li
209.18 118.033 209.369 117.924 210.176 117.458 cv
210.176 124.862 li
cp
f
211.79 123.931 mo
211.79 124.138 211.781 124.143 210.777 124.722 cv
210.777 120.052 li
210.777 119.545 210.974 119.432 211.79 118.96 cv
211.79 123.931 li
cp
211.324 117.116 mo
211.691 116.904 211.799 117.039 211.79 117.604 cv
211.79 118.152 211.611 118.587 211.26 118.79 cv
210.965 118.96 210.777 118.882 210.777 118.24 cv
210.777 117.764 210.947 117.335 211.324 117.116 cv
cp
f
212.57 118.748 mo
212.857 118.427 213.512 117.862 213.96 117.603 cv
214.875 117.075 215.251 117.158 215.251 118.194 cv
215.251 121.932 li
215.251 122.139 215.225 122.154 214.22 122.734 cv
214.22 119.151 li
214.22 118.602 214.175 118.463 213.924 118.608 cv
213.799 118.68 213.673 118.794 213.565 118.939 cv
213.565 122.906 li
213.565 123.113 213.548 123.123 212.57 123.687 cv
212.57 118.748 li
cp
f
216.829 118.349 mo
217.081 118.204 217.368 118.017 217.502 117.868 cv
217.538 117.722 217.548 117.469 217.548 117.303 cv
217.548 116.64 217.467 116.573 217.242 116.703 cv
216.964 116.863 216.857 117.381 216.829 118.349 cv
cp
218.373 119.032 mo
218.426 119.208 218.453 119.514 218.453 119.752 cv
218.453 120.166 217.879 120.725 217.18 121.13 cv
216.364 121.601 215.79 121.456 215.79 119.488 cv
215.79 116.982 216.534 116.117 217.368 115.635 cv
218.086 115.222 218.516 115.46 218.516 116.661 cv
218.516 117.158 218.48 117.748 218.39 118.204 cv
217.951 118.561 217.278 118.98 216.829 119.25 cv
216.866 119.902 216.992 120.119 217.423 119.871 cv
217.744 119.685 218.059 119.39 218.373 119.032 cv
cp
f
228.098 55.3063 mo
228.278 55.2021 228.448 54.9382 228.448 53.3433 cv
228.448 51.8519 228.376 51.6663 228.107 51.8218 cv
227.91 51.9353 227.749 52.2771 227.749 53.7472 cv
227.749 55.3628 227.875 55.4349 228.098 55.3063 cv
cp
228.144 50.8475 mo
229.103 50.2937 229.542 50.5892 229.542 52.681 cv
229.542 54.6794 229.04 55.715 228.071 56.2744 cv
227.103 56.8334 226.655 56.7085 226.655 54.3887 cv
226.655 52.5146 227.193 51.3966 228.144 50.8475 cv
cp
f
230.018 50.1075 mo
230.304 49.7866 230.959 49.2219 231.408 48.9631 cv
232.322 48.4353 232.699 48.5178 232.699 49.5533 cv
232.699 53.2914 li
232.699 53.4983 232.672 53.5139 231.668 54.094 cv
231.668 50.511 li
231.668 49.9624 231.623 49.8224 231.371 49.9675 cv
231.247 50.0398 231.121 50.1538 231.013 50.299 cv
231.013 54.2651 li
231.013 54.472 230.995 54.4824 230.018 55.047 cv
230.018 50.1075 li
cp
f
234.259 52.3911 mo
234.259 52.598 234.259 52.598 233.264 53.173 cv
233.264 46.0692 li
233.264 45.562 233.452 45.4532 234.259 44.9871 cv
234.259 52.3911 li
cp
f
235.873 51.4592 mo
235.873 51.6663 235.864 51.6714 234.86 52.2511 cv
234.86 47.5812 li
234.86 47.0736 235.057 46.96 235.873 46.4891 cv
235.873 51.4592 li
cp
235.407 44.6454 mo
235.774 44.4332 235.882 44.568 235.873 45.1327 cv
235.873 45.6813 235.694 46.1158 235.344 46.318 cv
235.048 46.4891 234.86 46.4109 234.86 45.769 cv
234.86 45.2925 235.03 44.863 235.407 44.6454 cv
cp
f
236.653 46.2761 mo
236.94 45.9552 237.595 45.391 238.043 45.1318 cv
238.958 44.6039 239.334 44.6873 239.334 45.7223 cv
239.334 49.4608 li
239.334 49.6677 239.308 49.6833 238.303 50.2631 cv
238.303 46.6797 li
238.303 46.131 238.258 45.9919 238.007 46.1362 cv
237.882 46.2092 237.756 46.3228 237.649 46.4684 cv
237.649 50.4342 li
237.649 50.6411 237.631 50.6515 236.653 51.2157 cv
236.653 46.2761 li
cp
f
240.913 45.8778 mo
241.165 45.7327 241.451 45.546 241.586 45.3961 cv
241.622 45.251 241.631 44.9974 241.631 44.8315 cv
241.631 44.1688 241.55 44.1019 241.326 44.2314 cv
241.048 44.3917 240.94 44.9093 240.913 45.8778 cv
cp
242.456 46.5613 mo
242.51 46.7367 242.536 47.0421 242.536 47.2805 cv
242.536 47.6945 241.963 48.2543 241.263 48.6582 cv
240.447 49.1295 239.873 48.9844 239.873 47.0171 cv
239.873 44.511 240.617 43.6461 241.451 43.1644 cv
242.169 42.7506 242.599 42.9882 242.599 44.1896 cv
242.599 44.6864 242.563 45.277 242.473 45.7327 cv
242.034 46.09 241.362 46.509 240.913 46.7786 cv
240.949 47.4309 241.075 47.6482 241.505 47.3998 cv
241.828 47.2136 242.142 46.9181 242.456 46.5613 cv
cp
f
178.326 83.7759 mo
178.505 83.6722 178.676 83.4083 178.676 81.8134 cv
178.676 80.322 178.604 80.1364 178.335 80.2914 cv
178.138 80.4054 177.976 80.7467 177.976 82.2173 cv
177.976 83.8325 178.102 83.905 178.326 83.7759 cv
cp
178.371 79.3176 mo
179.33 78.7638 179.77 79.059 179.77 81.1511 cv
179.77 83.1495 179.268 84.1851 178.299 84.7445 cv
177.33 85.3035 176.882 85.1786 176.882 82.8588 cv
176.882 80.9847 177.42 79.8667 178.371 79.3176 cv
cp
f
180.245 78.5773 mo
180.532 78.2562 181.187 77.692 181.635 77.4332 cv
182.55 76.9049 182.927 76.9879 182.927 78.0234 cv
182.927 81.7615 li
182.927 81.9689 182.9 81.984 181.895 82.5642 cv
181.895 78.9812 li
181.895 78.4325 181.85 78.2925 181.599 78.4377 cv
181.474 78.5099 181.348 78.6239 181.241 78.769 cv
181.241 82.7352 li
181.241 82.9421 181.223 82.9525 180.245 83.5167 cv
180.245 78.5773 li
cp
f
184.487 80.8612 mo
184.487 81.0681 184.487 81.0681 183.491 81.6427 cv
183.491 74.5393 li
183.491 74.0317 183.679 73.9233 184.487 73.4572 cv
184.487 80.8612 li
cp
f
186.101 79.9293 mo
186.101 80.1364 186.092 80.1415 185.087 80.7212 cv
185.087 76.0513 li
185.087 75.5437 185.285 75.4301 186.101 74.9587 cv
186.101 79.9293 li
cp
185.635 73.1155 mo
186.002 72.9033 186.11 73.0377 186.101 73.6023 cv
186.101 74.151 185.922 74.5859 185.572 74.7877 cv
185.275 74.9587 185.087 74.881 185.087 74.2391 cv
185.087 73.7626 185.258 73.3328 185.635 73.1155 cv
cp
f
186.881 74.7462 mo
187.167 74.4253 187.823 73.8611 188.271 73.6019 cv
189.185 73.074 189.562 73.1569 189.562 74.1924 cv
189.562 77.9305 li
189.562 78.1375 189.535 78.153 188.531 78.7332 cv
188.531 75.1501 li
188.531 74.6016 188.486 74.4615 188.235 74.6063 cv
188.11 74.6788 187.984 74.7928 187.876 74.9381 cv
187.876 78.9043 li
187.876 79.1112 187.858 79.1216 186.881 79.6858 cv
186.881 74.7462 li
cp
f
191.141 74.3479 mo
191.392 74.2028 191.679 74.0161 191.813 73.8662 cv
191.849 73.7211 191.859 73.4675 191.859 73.3016 cv
191.859 72.6389 191.777 72.5715 191.553 72.7012 cv
191.275 72.8618 191.168 73.3794 191.141 74.3479 cv
cp
192.683 75.0309 mo
192.737 75.2068 192.764 75.5122 192.764 75.7506 cv
192.764 76.1646 192.19 76.7244 191.49 77.1283 cv
190.675 77.5991 190.101 77.4545 190.101 75.4867 cv
190.101 72.9811 190.845 72.1162 191.679 71.6345 cv
192.396 71.2202 192.827 71.4587 192.827 72.6597 cv
192.827 73.1565 192.791 73.7471 192.701 74.2028 cv
192.262 74.5601 191.589 74.9791 191.141 75.2487 cv
191.177 75.9005 191.302 76.1183 191.733 75.8699 cv
192.056 75.6832 192.369 75.3882 192.683 75.0309 cv
cp
f
200.81 222.047 mo
199.635 222.047 li
199.635 181.661 li
186.15 189.447 li
186.15 83.067 li
187.323 83.067 li
187.324 187.413 li
200.809 179.627 li
200.81 222.047 li
cp
.662745 .694118 .831373 rgb
f
221.365 209.463 mo
221.365 167.723 li
234.789 159.972 li
234.787 54.9512 li
235.961 54.9512 li
235.963 160.65 li
222.539 168.4 li
222.539 209.463 li
221.365 209.463 li
cp
f
201.908 108.33 mo
201.566 109.088 201.198 109.841 200.804 110.594 cv
200.526 111.129 200.231 111.668 199.923 112.203 cv
198.977 113.842 197.95 115.382 196.859 116.807 cv
196.102 117.808 195.314 118.758 194.501 119.644 cv
193.581 120.65 192.636 121.574 191.673 122.417 cv
187.873 125.742 183.825 127.77 180.171 128.125 cv
179.131 128.228 178.121 128.194 177.163 128.014 cv
176.161 127.83 175.211 127.487 174.33 126.978 cv
173.543 126.525 172.845 125.956 172.233 125.284 cv
167.355 119.956 168.053 108.301 174.33 97.4275 cv
181.399 85.1898 192.854 78.5746 199.918 82.6522 cv
206.247 86.3065 206.91 97.2906 201.908 108.33 cv
cp
.254902 .478431 .862745 rgb
f
201.908 108.33 mo
201.566 109.088 201.198 109.841 200.804 110.594 cv
200.526 111.129 200.231 111.668 199.923 112.203 cv
198.977 113.842 197.95 115.382 196.859 116.807 cv
196.315 115.665 195.811 114.608 195.374 113.726 cv
194.805 112.584 195.477 111.784 195.327 110.491 cv
195.177 109.186 195.502 108.009 196.033 106.717 cv
196.273 106.135 196.624 105.493 197.248 105.262 cv
197.822 105.053 198.412 105.267 198.9 105.515 cv
200.073 106.11 201.138 107.175 201.908 108.33 cv
cp
.560784 .603922 .823529 rgb
f
200.804 110.594 mo
200.526 111.129 200.231 111.668 199.923 112.203 cv
193.735 122.913 184.189 129.319 177.163 128.014 cv
176.714 126.426 176.243 124.873 175.759 123.127 cv
175.289 121.424 174.261 118.844 174.125 117.629 cv
173.8 114.822 175.421 112.656 179.054 110.196 cv
181.51 108.536 186.41 106.349 191.206 104.848 cv
197.916 102.746 198.862 105.194 200.792 110.551 cv
200.804 110.594 li
cp
.705882 .737255 .87451 rgb
f
194.501 119.644 mo
193.581 120.65 192.636 121.574 191.673 122.417 cv
191.437 119.353 191.095 116.341 190.702 113.367 cv
191.609 112.729 192.058 112.408 192.957 111.771 cv
193.615 114.407 194.121 117.021 194.501 119.644 cv
cp
.0745098 .568627 .933333 rgb
f
193.922 111.551 mo
193.936 111.687 li
193.928 111.961 193.759 112.304 193.666 112.561 cv
193.465 113.115 193.212 113.652 192.911 114.16 cv
192.746 114.438 192.549 114.723 192.25 114.845 cv
191.914 114.983 191.524 114.882 191.208 114.704 cv
190.847 114.501 190.185 114.201 190.267 113.751 cv
190.338 113.357 190.477 112.96 190.606 112.583 cv
190.87 111.811 191.228 110.853 191.941 110.381 cv
192.741 109.85 193.311 110.646 193.734 111.239 cv
193.823 111.363 193.893 111.44 193.922 111.551 cv
cp
.188235 .392157 .780392 rgb
f
183.782 107.618 mo
183.61 113.038 193.779 113.13 193.633 108.033 cv
193.428 100.929 192.997 100.115 189.649 99.0121 cv
188.732 98.7102 187.773 98.4781 186.804 98.4609 cv
183.271 98.3956 184.639 100.189 184.771 101.441 cv
185.166 105.153 183.844 105.667 183.782 107.618 cv
cp
.898039 .627451 .490196 rgb
f
191.966 110.96 mo
192.146 111.54 192.912 111.741 193.417 112.079 cv
193.64 112.227 194.027 112.514 194.317 112.453 cv
194.61 112.392 194.786 112.002 194.885 111.76 cv
195.604 110.012 196.014 108.104 196.033 106.211 cv
196.039 105.611 195.941 104.941 195.47 104.518 cv
195.049 104.139 194.321 104.058 193.803 104.285 cv
193.248 104.528 193.114 105.622 193.311 106.128 cv
194.021 107.942 193.212 110.031 191.966 110.96 cv
cp
.705882 .737255 .87451 rgb
f
192.046 110.984 mo
192.046 110.984 191.163 112.38 190.085 113.339 cv
189.817 113.577 189.602 113.87 189.245 113.755 cv
187.5 113.194 183.824 110.109 183.094 108.156 cv
182.829 107.451 183.34 106.576 183.743 106.022 cv
183.814 105.923 184.376 105.161 184.483 105.086 cv
184.555 105.197 184.935 106.597 185.548 107.501 cv
186.96 109.584 189.54 110.643 192.046 110.984 cv
cp
f
198.338 90.582 mo
199.103 91.8055 199.552 93.2173 199.536 94.7158 cv
199.529 95.3608 199.424 96.0054 199.207 96.6141 cv
199.004 97.1904 198.64 97.7351 198.634 98.365 cv
198.627 99.1028 199.158 99.9275 199.398 100.623 cv
199.615 101.251 199.739 101.955 199.49 102.572 cv
199.347 102.926 199.094 103.223 198.889 103.544 cv
197.914 105.077 198.834 107.34 197.135 108.442 cv
196.71 108.717 196.209 108.771 195.706 108.797 cv
195.077 108.83 192.243 108.036 191.145 107.551 cv
189.933 107.015 188.752 105.638 187.876 104.642 cv
187.191 103.864 186.042 102.863 185.605 101.928 cv
185.471 101.641 185.794 101.589 185.501 101.446 cv
185.324 101.361 185.109 100.232 184.913 100.211 cv
184.679 100.186 184.363 99.928 184.165 99.7944 cv
183.785 99.5417 183.603 100.464 183.478 100.024 cv
182.946 98.1589 182.27 96.2534 182.351 94.2843 cv
182.423 92.4816 182.384 90.9342 183.545 89.4005 cv
184.416 88.2493 185.662 87.4108 187.012 86.8971 cv
189.075 86.1122 191.411 86.0707 193.5 86.7822 cv
195.478 87.4562 197.237 88.8239 198.338 90.582 cv
cp
.945098 .737255 .643137 rgb
f
185.309 93.1564 mo
186.566 94.1647 187.409 94.5258 189.851 94.7729 cv
189.355 96.4503 189.368 98.0579 189.178 99.7655 cv
189.066 100.782 188.504 101.974 187.413 100.817 cv
187.157 100.545 186.956 100.227 186.712 99.947 cv
186.466 99.667 186.156 99.4169 185.788 99.3503 cv
185.357 99.2726 184.953 99.5327 184.764 99.9133 cv
184.65 100.142 184.719 100.185 184.785 100.391 cv
184.85 100.597 184.699 100.833 184.479 100.84 cv
184.256 100.846 184.066 100.664 183.906 100.531 cv
183.285 100.019 182.919 99.1487 182.652 98.4104 cv
182.176 97.0936 181.944 95.7095 181.963 94.3085 cv
181.975 93.4069 182.084 92.5278 182.387 91.675 cv
182.617 91.021 182.946 90.4417 183.267 89.8269 cv
183.596 91.421 184.411 92.4366 185.309 93.1564 cv
cp
.843137 .85098 .92549 rgb
f
185.232 97.9122 mo
183.67 97.8073 183.274 99.7444 184.346 101.243 cv
184.658 101.679 185.212 102.067 185.621 102.415 cv
188.418 104.798 189.121 102.22 188.232 101.408 cv
186.168 99.5236 187.197 98.0436 185.232 97.9122 cv
cp
.945098 .737255 .643137 rgb
f
186.174 101.61 mo
185.995 101.446 184.216 100.396 185.428 99.6796 cv
185.763 99.4817 186.137 99.7764 186.189 100.132 cv
186.215 100.316 186.158 100.505 186.186 100.69 cv
186.202 100.798 186.248 100.901 186.305 100.995 cv
186.463 101.252 187.002 101.5 186.897 101.875 cv
186.803 102.208 186.278 101.704 186.174 101.61 cv
cp
.898039 .627451 .490196 rgb
f
181.035 123.345 mo
180.706 124.621 180.321 126.405 180.171 128.125 cv
179.131 128.228 178.121 128.194 177.163 128.014 cv
176.161 127.83 175.211 127.487 174.33 126.978 cv
173.543 126.525 172.845 125.956 172.233 125.284 cv
172.255 124.771 172.28 124.266 172.311 123.773 cv
172.456 121.42 172.807 118.917 173.414 116.632 cv
173.919 114.74 174.395 113.504 175.927 112.293 cv
177.372 111.146 179.178 111.446 180.671 112.516 cv
181.664 113.221 182.126 114.394 182.345 115.536 cv
182.858 118.219 181.716 120.714 181.035 123.345 cv
cp
.870588 .882353 .933333 rgb
f
192.538 105.82 mo
194.614 107.268 196.306 107.039 198.136 106.662 cv
198.177 107.805 197.241 108.857 196.115 109.058 cv
194.989 109.259 193.842 108.887 192.79 108.438 cv
191.477 107.877 190.202 107.175 189.18 106.179 cv
188.158 105.182 187.285 104.825 187.172 103.402 cv
187.113 102.663 187.284 98.8237 187.78 98.2479 cv
188.637 97.2522 189.177 98.3167 189.165 99.172 cv
189.088 104.343 191.107 104.822 192.538 105.82 cv
cp
.843137 .85098 .92549 rgb
f
248.291 83.5302 mo
248.099 83.8895 247.898 84.2489 247.692 84.604 cv
247.534 84.8737 247.38 85.1389 247.221 85.4003 cv
247.153 85.5112 247.084 85.6227 247.016 85.7338 cv
245.929 87.5011 244.744 89.14 243.499 90.6292 cv
243.118 91.0909 242.724 91.5406 242.326 91.9727 cv
242.237 92.0793 242.138 92.1823 242.044 92.285 cv
241.89 92.4474 241.74 92.6104 241.586 92.7684 cv
237.089 97.4285 232.022 100.257 227.581 100.556 cv
227.384 100.569 li
225.467 100.668 223.675 100.286 222.1 99.3793 cv
221.317 98.9257 220.619 98.3611 220.007 97.6936 cv
215.121 92.3706 215.818 80.7062 222.1 69.8287 cv
229.169 57.5911 240.624 50.9758 247.692 55.0535 cv
254.551 59.0159 254.753 71.6005 248.291 83.5302 cv
cp
.254902 .478431 .862745 rgb
f
247.483 68.5466 mo
246.34 68.3669 245.099 68.5259 243.938 68.4961 cv
242.617 68.4628 241.295 68.4282 239.983 68.6196 cv
239.371 68.7086 238.533 68.7794 238.194 69.3929 cv
237.801 70.1061 238.239 71.0902 238.654 71.6592 cv
238.807 71.87 239.158 71.6791 239.011 71.4501 cv
238.697 70.9589 238.902 69.5665 239.332 69.1794 cv
239.623 68.9177 240.682 68.9545 241.07 68.922 cv
241.849 68.8577 242.634 68.8702 243.414 68.8823 cv
244.712 68.9021 246.05 68.9609 247.425 68.9012 cv
247.483 68.5466 li
cp
.105882 .0823529 .117647 rgb
f
247.221 85.4003 mo
247.153 85.5112 247.084 85.6227 247.016 85.7338 cv
245.929 87.5011 244.744 89.14 243.499 90.6292 cv
242.985 90.1497 242.643 89.4995 242.553 88.6523 cv
242.348 86.675 242.408 84.7323 241.766 82.7944 cv
241.488 81.9554 241.111 81.0482 240.49 80.3981 cv
240.088 79.9829 239.429 79.8715 239.203 79.3112 cv
238.925 78.6265 239.237 77.6125 239.455 76.9534 cv
239.939 75.5114 240.487 74.3475 240.598 72.88 cv
240.611 72.6917 240.615 72.4946 240.615 72.2977 cv
240.598 70.2867 240.29 68.233 240.465 66.226 cv
240.538 65.4431 240.688 64.6599 240.91 63.8896 cv
240.936 63.7955 243.003 63.8896 243.161 63.8896 cv
243.867 63.8896 245.917 63.509 246.118 64.4072 cv
246.22 64.8738 245.985 65.3917 245.865 65.828 cv
245.634 66.6454 245.501 67.4752 245.309 68.3013 cv
244.855 70.257 245.185 72.2338 245.771 74.125 cv
246.024 74.9381 246.477 75.5372 246.935 76.2388 cv
248 77.8605 246.832 80.2439 246.717 81.9983 cv
246.644 83.1024 246.871 84.262 247.221 85.4003 cv
cp
.0156863 .215686 .454902 rgb
f
248.291 83.5302 mo
248.099 83.8895 247.898 84.2489 247.692 84.604 cv
247.47 84.9851 247.248 85.3618 247.016 85.7338 cv
245.51 88.1771 243.824 90.3765 242.044 92.285 cv
241.026 87.7878 239.173 79.5424 238.479 78.1815 cv
237.606 76.4656 240.653 80.2568 242.412 79.5894 cv
243.687 79.1056 245.279 79.3112 246.263 80.2655 cv
247.166 81.1425 247.825 82.285 248.291 83.5302 cv
cp
.560784 .603922 .823529 rgb
f
243.3 90.004 mo
243.3 79.5332 li
243.224 79.4969 li
240.961 78.5007 238.362 78.3854 235.921 78.9021 cv
235.595 78.9712 234.5 78.5586 234.175 78.6321 cv
232.166 79.0857 231.47 79.5621 229.559 80.4314 cv
229.138 90.004 li
243.3 90.004 li
cp
.898039 .627451 .490196 rgb
f
232.602 80.4379 mo
232.602 80.4379 241.701 84.5919 241.085 79.6503 cv
240.227 72.7621 239.759 72.0078 236.628 71.2323 cv
235.771 71.0194 235.41 70.3165 234.532 70.3848 cv
231.332 70.6337 232.739 72.2562 232.977 73.4619 cv
233.687 77.0363 232.473 78.5361 232.602 80.4379 cv
cp
f
231.618 82.701 mo
231.018 82.225 229.559 80.4314 229.559 80.4314 cv
230.124 80.1743 230.578 79.9545 230.996 79.7566 cv
232.077 81.5226 235.492 84.0313 238.813 83.61 cv
240.365 83.4135 240.874 81.7416 242.233 79.1656 cv
242.565 79.2719 242.904 79.3561 243.224 79.4969 cv
243.3 79.5332 li
243.3 79.5332 241.587 82.9063 240.622 83.8705 cv
238.158 86.3351 233.397 84.1121 231.618 82.701 cv
cp
.870588 .882353 .933333 rgb
f
240.24 78.3759 mo
240.361 78.3811 li
240.006 78.2719 239.801 78.3643 240.24 78.3759 cv
cp
.705882 .737255 .87451 rgb
f
247.016 85.7338 mo
241.548 94.5958 233.79 100.244 227.384 100.569 cv
227.123 99.9142 226.841 99.2683 226.55 98.6263 cv
226.122 97.6893 225.84 96.795 225.296 95.9095 cv
224.757 95.0364 224.312 94.1465 223.773 93.2777 cv
223.259 92.4561 222.802 91.6003 222.588 90.646 cv
222.408 89.8459 222.19 89.0459 222.155 88.2156 cv
222.143 87.9161 222.143 87.6294 222.159 87.3555 cv
222.262 85.7678 222.891 84.5402 224.295 83.5089 cv
225.938 82.2937 227.821 81.485 229.562 80.4323 cv
230.944 84.4973 235.159 86.1874 238.219 85.1475 cv
238.595 85.0236 238.95 84.8395 239.267 84.5872 cv
240.49 83.6886 241.586 82.8069 241.449 80.0084 cv
241.393 78.9047 240.777 78.5024 240.366 78.3785 cv
245.972 78.5793 246.045 82.0453 247.016 85.7338 cv
cp
f
242.326 91.9727 mo
242.237 92.0793 242.138 92.1823 242.044 92.285 cv
241.89 92.4474 241.74 92.6104 241.586 92.7684 cv
240.764 89.8417 239.725 86.9792 238.544 84.099 cv
238.441 83.8468 238.835 83.7098 238.963 83.9198 cv
240.474 86.38 241.543 89.1315 242.326 91.9727 cv
cp
.870588 .882353 .933333 rgb
f
241.504 79.3984 mo
241.546 80.5852 241.107 82.2212 240.457 83.2186 cv
239.991 83.9331 239.086 84.3125 239.086 84.3125 cv
242.692 87.2808 li
242.692 87.2808 243.954 84.4027 243.482 82.4985 cv
243.274 81.657 242.843 79.4063 241.504 79.3984 cv
cp
f
230.242 80.4081 mo
230.04 80.4893 li
230.025 80.8893 230.644 80.0728 230.93 80.2603 cv
231.876 80.8806 232.463 82.7253 234.093 83.699 cv
236.447 85.1047 238.88 84.3979 239.086 84.3125 cv
239.175 85.4175 238.355 88.9854 238.205 89.5038 cv
238.111 89.4078 233.169 87.0815 231.459 86.2046 cv
230.524 85.7251 229.703 84.9069 229.22 83.9768 cv
228.936 83.4299 228.559 82.8177 228.662 82.1763 cv
228.701 81.9308 229.163 80.7299 229.559 80.4314 cv
230.242 80.4081 li
cp
f
235.265 75.7666 mo
234.99 75.5386 234.755 75.339 234.542 75.0516 cv
234.323 74.7554 234.103 74.459 233.842 74.1976 cv
233.674 74.0295 233.49 73.8762 233.287 73.7522 cv
233.091 73.6321 232.852 73.588 232.719 73.3906 cv
232.498 73.0653 232.276 72.7223 232.075 72.384 cv
230.157 69.1592 230.047 64.8267 232.749 62.0001 cv
234.666 59.9951 237.718 59.158 240.391 59.9044 cv
241.114 60.1071 241.804 60.4138 242.473 60.7546 cv
243.052 61.0492 243.626 61.3776 244.067 61.8531 cv
244.356 62.166 244.58 62.5336 244.785 62.9069 cv
245.086 63.4542 245.324 64.0491 245.579 64.6215 cv
245.786 65.0854 245.765 65.5983 245.764 66.098 cv
245.762 67.1538 245.425 68.0913 245.198 69.1056 cv
244.991 70.0254 245.439 70.8647 245.722 71.7188 cv
245.88 72.1914 246.136 72.7686 245.852 73.2373 cv
245.67 73.5375 245.397 73.7816 245.258 74.103 cv
245.116 74.4279 245.012 74.767 244.931 75.1113 cv
244.875 75.3472 244.712 76.1693 244.675 76.3511 cv
244.631 76.5667 244.602 76.7849 244.572 77.0026 cv
244.537 77.251 244.491 77.4968 244.45 77.7444 cv
244.354 78.3193 244.067 78.8459 243.506 79.0706 cv
243.185 79.1989 242.86 79.2797 242.513 79.2875 cv
242.177 79.2957 241.839 79.2598 241.516 79.173 cv
240.119 78.7985 237.083 77.1157 236.631 76.803 cv
236.161 76.4777 235.705 76.1317 235.265 75.7666 cv
cp
.945098 .737255 .643137 rgb
f
229.16 65.9956 mo
229.287 61.9207 230.324 61.0842 231.867 59.78 cv
233.361 58.516 235.539 58.0809 237.489 58.1328 cv
238.957 58.1721 240.406 58.5497 241.738 59.1622 cv
243.027 59.755 243.969 60.5494 244.866 61.6359 cv
245.946 62.9436 246.629 64.9705 246.02 66.6018 cv
245.911 66.8925 245.823 67.3486 245.622 67.5928 cv
245.161 66.5642 li
245.053 66.2401 244.967 65.9063 244.852 65.5852 cv
244.753 65.3097 244.519 65.0876 244.451 64.8025 cv
243.353 64.748 242.368 65.2042 241.497 65.8513 cv
240.36 66.6954 239.467 67.5858 238.76 68.8282 cv
238.423 69.4188 238.107 70.012 237.738 70.5852 cv
237.591 70.8151 237.431 71.038 237.285 71.2682 cv
236.898 71.8787 236.047 72.3707 235.361 72.5552 cv
234.824 72.699 234.063 72.6956 233.633 73.1007 cv
233.182 73.5254 233.026 73.8434 232.295 73.6865 cv
230.988 73.4066 230.2 71.0851 229.799 69.9968 cv
229.329 68.7194 229.118 67.3551 229.16 65.9956 cv
cp
.0156863 .215686 .454902 rgb
f
228.826 96.3116 mo
228.424 97.7278 228.013 99.1443 227.581 100.556 cv
227.384 100.569 li
225.467 100.668 223.675 100.286 222.1 99.3793 cv
221.317 98.9257 220.619 98.3611 220.007 97.6936 cv
220.106 97.0647 220.204 96.4357 220.311 95.811 cv
220.662 93.701 221.038 91.6003 221.501 89.512 cv
221.826 88.0531 222.13 86.4915 222.784 85.135 cv
222.862 84.9764 222.951 84.8265 223.05 84.694 cv
223.76 83.757 225.009 83.4532 226.139 84.0096 cv
227.213 84.5402 227.906 85.6227 228.385 86.7222 cv
229.695 89.7219 229.708 93.2134 228.826 96.3116 cv
cp
.870588 .882353 .933333 rgb
f
227.494 74.7571 mo
227.484 75.9425 227.423 77.127 227.21 78.3051 cv
226.987 79.541 226.39 80.9165 226.485 82.1814 cv
227.182 81.8224 228.386 81.6112 228.941 82.3206 cv
229.817 83.4407 229.991 85.4697 230.229 86.8185 cv
230.449 88.0643 230.523 89.3301 230.702 90.5817 cv
230.982 92.5421 232.641 93.3892 234.467 93.5651 cv
236.848 93.7944 237.635 93.111 238.124 90.833 cv
238.511 89.0286 238.195 87.1447 237.576 85.4301 cv
236.757 83.1611 235.187 81.4038 234.165 79.2404 cv
233.615 78.076 233.157 76.3754 233.731 75.0673 cv
234.002 74.449 234.003 74.3384 234.165 73.6399 cv
234.35 72.8407 234.417 71.9996 234.385 71.1805 cv
234.347 70.2345 233.971 69.348 233.972 68.3915 cv
233.973 67.7107 233.766 67.1002 233.5 66.4894 cv
233.236 65.8864 233.175 65.1882 232.912 64.5704 cv
232.386 63.3341 230.683 60.7754 230.683 60.7754 cv
230.245 61.4017 li
229.88 61.9564 229.435 62.4316 229.135 63.0239 cv
228.445 64.3873 228.126 65.7771 227.819 67.2579 cv
227.307 69.7324 227.515 72.2476 227.494 74.7571 cv
cp
.0156863 .215686 .454902 rgb
f
244.192 71.6138 mo
244.099 72.0013 243.907 72.3564 243.667 72.6476 cv
243.175 73.2441 241.975 73.7311 241.556 72.756 cv
241.195 71.9136 241.462 70.6776 242.231 70.3152 cv
242.763 70.0647 243.585 69.9468 243.984 70.1321 cv
244.382 70.3174 244.307 71.1295 244.192 71.6138 cv
cp
244.025 69.6495 mo
243.151 69.4025 241.659 69.8007 241.247 70.7087 cv
240.874 71.5295 240.924 73.1595 241.778 73.5851 cv
242.701 74.0442 243.75 73.3864 244.21 72.473 cv
244.519 71.8639 245.01 69.9281 244.025 69.6495 cv
cp
.105882 .0823529 .117647 rgb
f
247.326 70.4603 mo
247.228 70.8163 246.517 72.6847 245.807 71.6963 cv
245.593 71.3978 244.934 69.5626 246.746 68.9902 cv
247.775 68.665 247.473 69.9308 247.326 70.4603 cv
cp
246.977 68.5682 mo
246.404 68.7946 245.534 69.2456 245.338 69.8949 cv
245.337 69.8971 li
245.336 69.9014 li
245.31 69.9929 245.297 70.0884 245.301 70.1877 cv
245.242 70.8993 245.345 72.0623 246.065 72.2173 cv
247.102 72.4402 247.612 70.8241 247.745 70.0953 cv
247.856 69.4828 247.982 68.1703 246.977 68.5682 cv
cp
f
245.867 69.1855 mo
245.645 69.3212 244.635 69.821 243.986 69.6495 cv
244.286 70.1576 li
244.369 70.1899 245.3 69.8971 245.552 69.7916 cv
245.79 69.6923 245.867 69.1855 245.867 69.1855 cv
cp
f
241.377 70.6146 mo
240.234 70.4349 238.993 70.5939 237.833 70.5645 cv
236.511 70.5308 235.189 70.4967 233.877 70.6876 cv
233.265 70.7766 232.427 70.8474 232.089 71.4609 cv
231.695 72.1741 232.133 73.1582 232.548 73.7272 cv
232.702 73.938 233.052 73.7471 232.906 73.5186 cv
232.591 73.0269 232.796 71.6345 233.226 71.2474 cv
233.517 70.9857 234.576 71.0225 234.964 70.99 cv
235.743 70.9257 236.528 70.9381 237.309 70.9503 cv
238.606 70.9701 239.944 71.0293 241.319 70.9692 cv
241.377 70.6146 li
cp
f
233.023 69.6948 mo
231.634 69.6067 231.289 71.3335 232.248 72.6619 cv
232.528 73.0493 233.021 73.3928 233.387 73.7008 cv
235.885 75.8115 236.501 73.5146 235.708 72.7953 cv
233.862 71.1261 234.772 69.8059 233.023 69.6948 cv
cp
.945098 .737255 .643137 rgb
f
233.925 72.8511 mo
233.765 72.7054 232.177 71.7776 233.253 71.1365 cv
233.551 70.9589 233.885 71.219 233.932 71.5352 cv
233.957 71.6993 233.906 71.8674 233.931 72.0316 cv
233.946 72.1279 233.987 72.2195 234.039 72.3029 cv
234.18 72.5314 234.661 72.75 234.568 73.0852 cv
234.487 73.382 234.017 72.9348 233.925 72.8511 cv
cp
.898039 .627451 .490196 rgb
f
332.936 339.686 mo
332.936 344.806 li
332.891 360.705 322.44 376.579 301.565 388.711 cv
259.55 413.127 191.223 413.127 148.933 388.711 cv
127.649 376.423 117.019 360.294 117.064 344.19 cv
117.064 339.07 li
117.019 355.175 127.649 371.304 148.932 383.592 cv
191.223 408.008 259.55 408.008 301.565 383.591 cv
322.44 371.46 332.891 355.585 332.936 339.686 cv
cp
.662745 .694118 .831373 rgb
f
gsave
332.936 339.686 mo
332.936 344.806 li
332.891 360.705 322.44 376.579 301.565 388.711 cv
259.55 413.127 191.223 413.127 148.933 388.711 cv
127.649 376.423 117.019 360.294 117.064 344.19 cv
117.064 339.07 li
117.019 355.175 127.649 371.304 148.932 383.592 cv
191.223 408.008 259.55 408.008 301.565 383.591 cv
322.44 371.46 332.891 355.585 332.936 339.686 cv
clp
332.936 339.686 mo
332.936 344.806 li
332.891 360.705 322.44 376.579 301.565 388.711 cv
293.293 393.518 284.001 397.379 274.088 400.294 cv
274.088 395.174 li
284.001 392.259 293.292 388.398 301.565 383.591 cv
322.44 371.46 332.891 355.585 332.936 339.686 cv
cp
f
274.088 395.174 mo
274.088 400.294 li
259.566 404.563 243.713 406.801 227.784 407.008 cv
227.784 401.888 li
243.712 401.681 259.566 399.443 274.088 395.174 cv
cp
.760784 .784314 .890196 rgb
f
227.784 401.888 mo
227.784 407.008 li
199.361 407.377 170.699 401.278 148.933 388.711 cv
147.87 388.097 146.833 387.474 145.823 386.842 cv
145.823 381.722 li
146.833 382.354 147.869 382.978 148.932 383.592 cv
170.698 396.158 199.361 402.257 227.784 401.888 cv
cp
.843137 .85098 .92549 rgb
f
145.823 381.722 mo
145.823 386.842 li
134.53 379.769 126.56 371.558 121.918 362.883 cv
121.918 357.764 li
126.56 366.439 134.53 374.649 145.823 381.722 cv
cp
.760784 .784314 .890196 rgb
f
121.918 357.764 mo
121.918 362.883 li
118.665 356.803 117.047 350.494 117.064 344.19 cv
117.064 339.07 li
117.047 345.375 118.665 351.683 121.918 357.764 cv
cp
f
grestore
301.077 295.175 mo
343.367 319.592 343.581 359.175 301.565 383.591 cv
259.55 408.008 191.223 408.008 148.932 383.592 cv
106.643 359.176 106.41 319.593 148.426 295.176 cv
190.441 270.759 258.787 270.759 301.077 295.175 cv
cp
.905882 .909804 .92549 rgb
f
291.513 305.448 mo
328.486 324.191 328.673 354.575 291.939 373.318 cv
255.206 392.061 195.469 392.061 158.496 373.318 cv
121.522 354.576 121.319 324.192 158.052 305.449 cv
194.786 286.707 254.539 286.707 291.513 305.448 cv
cp
.843137 .85098 .92549 rgb
f
329.943 321.872 mo
329.843 341.654 li
329.799 357.113 319.638 372.548 299.342 384.343 cv
258.491 408.083 192.058 408.083 150.94 384.343 cv
130.247 372.396 119.911 356.714 119.955 341.056 cv
120.054 321.273 li
120.01 336.931 130.346 352.613 151.04 364.56 cv
192.158 388.3 258.591 388.3 299.441 364.559 cv
319.738 352.765 329.899 337.33 329.943 321.872 cv
cp
.188235 .392157 .780392 rgb
f
gsave
329.943 321.872 mo
329.843 341.654 li
329.799 357.113 319.638 372.548 299.342 384.343 cv
258.491 408.083 192.058 408.083 150.94 384.343 cv
130.247 372.396 119.911 356.714 119.955 341.056 cv
120.054 321.273 li
120.011 336.931 130.346 352.613 151.04 364.56 cv
192.158 388.3 258.591 388.3 299.441 364.559 cv
319.738 352.765 329.899 337.33 329.943 321.872 cv
clp
329.943 321.872 mo
329.843 341.654 li
329.799 357.113 319.638 372.548 299.342 384.343 cv
291.299 389.017 282.264 392.771 272.626 395.604 cv
272.726 375.821 li
282.364 372.988 291.398 369.234 299.441 364.559 cv
319.738 352.765 329.899 337.33 329.943 321.872 cv
cp
.109804 .305882 .658824 rgb
f
272.726 375.821 mo
272.626 395.604 li
258.507 399.755 243.093 401.931 227.605 402.132 cv
227.705 382.349 li
243.192 382.148 258.606 379.972 272.726 375.821 cv
cp
.188235 .392157 .780392 rgb
f
227.705 382.349 mo
227.605 402.132 li
199.971 402.491 172.102 396.561 150.94 384.343 cv
149.906 383.746 148.898 383.14 147.917 382.525 cv
148.016 362.742 li
148.998 363.357 150.006 363.963 151.04 364.56 cv
172.202 376.778 200.071 382.708 227.705 382.349 cv
cp
.0745098 .568627 .933333 rgb
f
148.016 362.742 mo
147.917 382.525 li
136.936 375.649 129.187 367.666 124.674 359.231 cv
124.774 339.448 li
129.287 347.883 137.036 355.866 148.016 362.742 cv
cp
.188235 .392157 .780392 rgb
f
124.774 339.448 mo
124.674 359.231 li
121.511 353.319 119.938 347.186 119.955 341.056 cv
120.054 321.273 li
120.037 327.403 121.611 333.536 124.774 339.448 cv
cp
.109804 .305882 .658824 rgb
f
grestore
298.967 278.594 mo
340.085 302.334 340.292 340.82 299.441 364.559 cv
258.591 388.3 192.158 388.3 151.04 364.56 cv
109.922 340.821 109.696 302.335 150.547 278.595 cv
191.398 254.856 257.849 254.855 298.967 278.594 cv
cp
f
332.936 314.966 mo
332.936 320.086 li
332.891 335.984 322.44 351.859 301.565 363.991 cv
259.55 388.407 191.223 388.407 148.933 363.991 cv
127.649 351.703 117.019 335.574 117.064 319.469 cv
117.064 314.35 li
117.019 330.454 127.649 346.583 148.932 358.871 cv
191.223 383.288 259.55 383.288 301.565 358.871 cv
322.44 346.74 332.891 330.864 332.936 314.966 cv
cp
.662745 .694118 .831373 rgb
f
gsave
332.936 314.966 mo
332.936 320.086 li
332.891 335.984 322.44 351.859 301.565 363.991 cv
259.55 388.407 191.223 388.407 148.933 363.991 cv
127.649 351.703 117.019 335.574 117.064 319.469 cv
117.064 314.35 li
117.019 330.454 127.649 346.583 148.932 358.871 cv
191.223 383.288 259.55 383.288 301.565 358.871 cv
322.44 346.739 332.891 330.864 332.936 314.966 cv
clp
332.936 314.966 mo
332.936 320.086 li
332.891 335.984 322.44 351.859 301.565 363.991 cv
293.293 368.798 284.001 372.659 274.088 375.573 cv
274.088 370.453 li
284.001 367.539 293.292 363.678 301.565 358.871 cv
322.44 346.74 332.891 330.864 332.936 314.966 cv
cp
f
274.088 370.453 mo
274.088 375.573 li
259.566 379.842 243.713 382.081 227.784 382.287 cv
227.784 377.167 li
243.712 376.961 259.566 374.723 274.088 370.453 cv
cp
.760784 .784314 .890196 rgb
f
227.784 377.167 mo
227.784 382.287 li
199.361 382.656 170.699 376.557 148.933 363.991 cv
147.87 363.377 146.833 362.754 145.823 362.121 cv
145.823 357.002 li
146.833 357.634 147.869 358.257 148.932 358.871 cv
170.698 371.438 199.361 377.536 227.784 377.167 cv
cp
.843137 .85098 .92549 rgb
f
145.823 357.002 mo
145.823 362.121 li
134.53 355.049 126.56 346.838 121.918 338.163 cv
121.918 333.043 li
126.56 341.718 134.53 349.929 145.823 357.002 cv
cp
.760784 .784314 .890196 rgb
f
121.918 333.043 mo
121.918 338.163 li
118.665 332.083 117.047 325.774 117.064 319.469 cv
117.064 314.35 li
117.047 320.654 118.665 326.963 121.918 333.043 cv
cp
f
grestore
301.077 270.455 mo
343.367 294.871 343.581 334.454 301.565 358.871 cv
259.55 383.288 191.223 383.288 148.932 358.871 cv
106.643 334.455 106.41 294.872 148.426 270.456 cv
190.441 246.039 258.787 246.039 301.077 270.455 cv
cp
.905882 .909804 .92549 rgb
f
224.685 260.03 mo
200.147 260.03 175.64 265.44 157.02 276.26 cv
139.322 286.546 129.587 300.132 129.607 314.518 cv
129.627 329.012 139.523 342.701 157.472 353.064 cv
194.952 374.704 255.738 374.704 292.971 353.066 cv
310.675 342.778 320.414 329.187 320.393 314.797 cv
320.373 300.306 310.48 286.621 292.537 276.262 cv
273.794 265.441 249.224 260.03 224.685 260.03 cv
cp
225.315 372.186 mo
200.246 372.186 175.151 366.66 156.004 355.606 cv
137.111 344.698 126.694 330.108 126.672 314.523 cv
126.65 299.046 136.904 284.556 155.546 273.723 cv
193.596 251.61 255.708 251.609 294.004 273.72 cv
312.892 284.625 323.306 299.212 323.329 314.794 cv
323.35 330.274 313.093 344.767 294.447 355.603 cv
275.424 366.659 250.383 372.186 225.315 372.186 cv
cp
.0745098 .568627 .933333 rgb
f
143.372 285.243 mo
147.161 310.357 li
162.087 319.031 li
162.03 296.086 li
143.372 285.243 li
cp
.760784 .784314 .890196 rgb
f
180.802 285.243 mo
177.013 310.357 li
162.087 319.031 li
162.03 296.086 li
180.802 285.243 li
cp
.662745 .694118 .831373 rgb
f
143.372 285.243 mo
162.03 296.086 li
180.81 285.243 li
162.152 274.4 li
143.372 285.243 li
cp
.905882 .909804 .92549 rgb
f
177.632 285.236 mo
176.821 285.706 li
175.863 286.263 li
173.258 287.765 li
173.176 287.818 li
173.023 287.908 li
172.017 288.483 li
171.907 288.547 li
171.209 288.947 li
168.63 290.44 li
168.428 290.556 li
167.62 291.03 li
167.405 291.155 li
167.352 291.182 li
166.952 291.41 li
166.654 291.583 li
166.418 291.715 li
166.22 291.834 li
165.928 291.993 li
165.875 292.019 li
165.862 292.019 li
165.67 292.132 li
165.359 292.314 li
164.237 292.966 li
163.883 293.172 li
163.826 293.204 li
162.072 294.224 li
162.042 294.241 li
161.585 293.969 li
161.552 293.95 li
161.417 293.876 li
161.377 293.857 li
159.969 293.032 li
159.658 292.854 li
158.344 292.102 li
158.086 291.95 li
157.122 291.384 li
156.937 291.275 li
156.692 291.132 li
156.235 290.864 li
155.225 290.278 li
155.113 290.212 li
151.561 288.15 li
150.247 287.388 li
149.034 286.686 li
147.661 285.885 li
146.548 285.236 li
147.489 284.693 li
148.224 284.266 li
150.23 283.111 li
151.163 282.574 li
151.438 282.412 li
153.279 281.353 li
153.438 281.26 li
154.5 280.634 li
154.649 280.552 li
155.232 280.224 li
155.857 279.863 li
157.215 279.075 li
158.642 278.251 li
158.705 278.214 li
159.741 277.615 li
159.797 277.582 li
159.873 277.536 li
160.681 277.072 li
161.191 276.777 li
161.284 276.724 li
161.377 276.672 li
161.698 276.486 li
162.138 276.231 li
162.257 276.298 li
164.035 277.33 li
164.412 277.549 li
164.594 277.655 li
165.237 278.029 li
165.385 278.115 li
166.008 278.479 li
166.14 278.559 li
166.885 278.999 li
167.163 279.158 li
167.448 279.323 li
167.485 279.343 li
167.802 279.532 li
169.16 280.313 li
169.372 280.436 li
170.52 281.104 li
171.46 281.651 li
171.888 281.899 li
172.304 282.141 li
172.364 282.177 li
172.844 282.458 li
173.407 282.783 li
173.407 282.786 li
173.593 282.892 li
176.234 284.425 li
177.002 284.872 li
177.632 285.236 li
cp
.0431373 .0705882 .164706 rgb
f
154.875 272.498 mo
150.896 267.189 146.426 262.023 144.057 256.064 cv
142.411 251.924 141.862 247.551 141.986 243.238 cv
142.051 241.007 142.294 238.788 142.65 236.589 cv
142.949 234.746 143.004 231.913 144.083 230.354 cv
148.373 232.873 152.672 237.358 154.856 241.416 cv
156.478 244.427 158.141 247.305 158.934 250.574 cv
159.745 253.918 159.924 257.338 159.899 260.723 cv
159.868 264.866 159.557 269.004 159.836 273.154 cv
159.964 275.072 160.192 277.05 160.493 278.945 cv
160.79 280.81 161.895 282.577 162.601 284.373 cv
162.797 284.868 164.351 288.741 162.827 287.626 cv
161.814 286.885 161.607 283.99 161.145 282.867 cv
160.418 281.101 159.503 279.392 158.484 277.734 cv
157.382 275.939 156.154 274.204 154.875 272.498 cv
cp
.0156863 .180392 .545098 rgb
f
164.143 281.62 mo
166.295 279.259 169.149 277.597 172.186 276.606 cv
177.477 274.878 181.958 276.586 186.509 279.358 cv
190.555 281.823 192.071 288.273 191.803 292.656 cv
191.596 296.045 190.36 299.35 188.356 302.084 cv
186.982 303.958 183.914 308.149 182.702 303.957 cv
181.922 301.259 181.824 298.419 181.581 295.621 cv
181.338 292.823 180.922 289.967 179.583 287.498 cv
177.85 284.304 175.268 283.05 171.825 282.93 cv
169.269 282.841 166.588 282.782 164.306 283.938 cv
163.457 284.368 162.706 285.012 162.14 285.777 cv
161.718 286.35 161.45 287.562 160.886 287.755 cv
161.045 285.575 162.706 283.196 164.143 281.62 cv
cp
.254902 .478431 .862745 rgb
f
158.732 273.567 mo
157.967 272.076 157.162 270.833 156.743 269.168 cv
155.89 265.773 156.107 262.192 156.994 258.86 cv
158.294 253.973 160.927 249.545 163.531 245.183 cv
165.086 242.578 166.641 239.974 168.195 237.369 cv
167.234 238.327 167.747 239.908 168.244 241.172 cv
170.776 247.615 171.429 254.688 170.11 261.378 cv
169.694 263.485 169.083 265.552 168.292 267.551 cv
167.461 269.646 166.186 271.487 165.262 273.518 cv
164.044 276.194 162.897 279.09 162.348 281.984 cv
162.112 283.228 162.135 284.484 161.877 285.752 cv
161.788 286.191 160.638 289.693 160.819 289.852 cv
160.266 289.365 160.384 288.528 160.516 287.831 cv
161.368 283.316 160.929 277.888 158.782 273.664 cv
158.732 273.567 li
cp
.188235 .392157 .780392 rgb
f
162.63 286.814 mo
162.556 286.575 162.477 286.338 162.385 286.104 cv
161.775 284.556 160.818 283.207 160.132 281.71 cv
158.729 278.648 157.556 275.57 155.744 272.671 cv
152.738 267.862 148.568 263.556 143.239 261.268 cv
137.079 258.622 130.04 258.892 123.449 257.483 cv
125.001 257.999 126.323 259.139 127.38 260.381 cv
128.677 261.905 129.707 263.639 131.133 265.052 cv
133.824 267.718 137.626 268.985 141.083 270.647 cv
146.3 273.155 150.898 276.684 155.453 280.187 cv
157.963 282.116 160.104 284.272 161.737 286.814 cv
162.63 286.814 li
cp
.0745098 .568627 .933333 rgb
f
175.722 286.038 mo
172.841 282.831 166.997 281.218 163.555 284.442 cv
163.167 284.806 162.821 285.216 162.533 285.663 cv
162.46 285.775 161.924 287.058 162.048 287.058 cv
162.151 287.058 162.254 287.057 162.357 287.063 cv
162.486 286.085 164.49 285.409 165.297 285.271 cv
166.412 285.081 167.59 285.28 168.581 285.827 cv
170.303 286.776 170.342 289.02 170.18 290.776 cv
170 292.716 169.314 294.566 168.79 296.442 cv
168.01 299.239 167.585 302.18 167.989 305.056 cv
168.393 307.932 169.688 310.749 171.906 312.624 cv
170.672 310.99 170.614 308.699 171.257 306.755 cv
171.9 304.811 173.151 303.136 174.399 301.512 cv
175.647 299.889 176.929 298.246 177.652 296.33 cv
178.948 292.896 178.174 288.769 175.722 286.038 cv
cp
f
169.208 266.766 mo
171.453 263.367 174.2 260.252 177.573 257.969 cv
180.945 255.686 184.978 254.273 189.048 254.4 cv
193.593 254.541 199.623 256.881 201.6 261.229 cv
202.717 263.684 203.361 266.352 203.51 269.044 cv
203.55 269.775 202.645 276.399 202.645 276.399 cv
199.152 273.795 195.619 271.169 191.623 269.437 cv
187.627 267.704 183.064 266.923 178.884 268.148 cv
175.607 269.109 172.77 271.241 170.464 273.76 cv
166.917 277.636 163.573 282.398 162.03 287.422 cv
162.463 280.156 165.217 272.807 169.208 266.766 cv
cp
.0156863 .180392 .545098 rgb
f
143.942 272.223 mo
141.01 271.206 137.788 270.729 134.86 271.758 cv
131.307 273.007 128.666 276.334 127.184 280.002 cv
125.702 283.668 125.218 287.692 124.75 291.654 cv
127.675 290.011 130.494 288.155 133.182 286.102 cv
136.01 283.942 138.841 281.494 142.259 280.816 cv
146.614 279.953 150.504 282.102 154.352 283.82 cv
157.915 285.411 160.901 288.473 162.463 292.252 cv
161.073 288.887 159.742 284.514 157.141 281.967 cv
154.644 279.52 152.332 276.832 149.406 274.917 cv
147.692 273.795 145.854 272.887 143.942 272.223 cv
cp
.109804 .305882 .658824 rgb
f
145.333 289.525 mo
144.109 291.804 143.877 294.512 144.206 297.078 cv
144.535 299.645 145.388 302.11 146.236 304.555 cv
147.68 308.716 149.125 312.878 150.569 317.04 cv
150.447 314.325 149.513 311.724 148.921 309.072 cv
148.329 306.421 148.106 303.523 149.323 301.094 cv
150.839 298.067 154.228 296.47 157.506 295.624 cv
159.662 295.068 162.263 294.63 163.832 292.892 cv
165.472 291.075 165.307 288.061 164.173 285.993 cv
162.074 282.168 155.153 283.154 151.833 284.331 cv
149.166 285.277 146.695 286.988 145.333 289.525 cv
cp
.188235 .392157 .780392 rgb
f
250.232 282.321 mo
253.333 280.519 li
292.855 303.336 li
289.754 305.139 li
250.232 282.321 li
cp
.223529 .192157 .243137 rgb
f
248.818 229.268 mo
251.919 227.466 li
253.481 228.368 li
250.38 230.17 li
248.818 229.268 li
cp
.196078 .164706 .211765 rgb
f
250.38 230.17 mo
253.481 228.368 li
253.333 280.519 li
250.232 282.32 li
250.38 230.17 li
f
291.461 253.888 mo
294.563 252.086 li
294.409 306.032 li
291.308 307.834 li
291.461 253.888 li
cp
f
289.902 252.988 mo
293.003 251.186 li
294.563 252.086 li
291.461 253.888 li
289.902 252.988 li
cp
f
291.461 253.888 mo
291.308 307.834 li
248.665 283.214 li
248.818 229.268 li
250.38 230.17 li
250.232 282.32 li
289.754 305.139 li
289.902 252.988 li
291.461 253.888 li
.137255 .105882 .14902 rgb
f
173.547 308.949 mo
172.617 308.409 li
172.607 304.823 li
173.537 305.363 li
173.547 308.949 li
cp
f
173.537 305.363 mo
172.607 304.823 li
249.181 260.612 li
250.112 261.152 li
173.537 305.363 li
cp
.223529 .192157 .243137 rgb
f
250.112 261.152 mo
250.122 264.739 li
173.547 308.949 li
173.537 305.363 li
250.112 261.152 li
cp
.196078 .164706 .211765 rgb
f
173.445 326.563 mo
176.546 324.761 li
216.068 347.579 li
212.967 349.381 li
173.445 326.563 li
cp
f
172.031 273.51 mo
175.132 271.708 li
176.695 272.61 li
173.593 274.412 li
172.031 273.51 li
cp
f
173.593 274.412 mo
176.695 272.61 li
176.546 324.761 li
173.445 326.563 li
173.593 274.412 li
cp
f
214.674 298.13 mo
217.776 296.328 li
217.623 350.274 li
214.521 352.076 li
214.674 298.13 li
cp
f
213.115 297.23 mo
216.216 295.428 li
217.776 296.328 li
214.674 298.13 li
213.115 297.23 li
cp
f
214.674 298.13 mo
214.521 352.076 li
171.878 327.456 li
172.031 273.51 li
173.593 274.412 li
173.445 326.563 li
212.967 349.381 li
213.115 297.23 li
214.674 298.13 li
cp
.137255 .105882 .14902 rgb
f
252.288 232.792 mo
250.96 232.02 li
228.795 291.05 li
230.123 291.822 li
252.288 232.792 li
.505882 .411765 .443137 rgb
f
255.224 231.097 mo
253.896 230.325 li
250.96 232.02 li
252.288 232.792 li
255.224 231.097 li
cp
.584314 .498039 .529412 rgb
f
252.288 232.792 mo
230.123 291.822 li
233.059 290.126 li
255.224 231.097 li
252.288 232.792 li
.364706 .301961 .341176 rgb
f
232.928 243.969 mo
231.6 243.197 li
228.664 244.892 li
229.992 245.664 li
232.928 243.969 li
cp
.584314 .498039 .529412 rgb
f
229.992 245.664 mo
228.664 244.892 li
251.091 278.178 li
252.418 278.95 li
229.992 245.664 li
cp
.239216 .196078 .223529 rgb
f
232.928 243.969 mo
229.992 245.664 li
252.418 278.95 li
255.355 277.254 li
232.928 243.969 li
cp
.364706 .301961 .341176 rgb
f
169.826 272.617 mo
169.837 276.457 li
217.673 304.256 li
217.662 300.417 li
169.826 272.617 li
cp
.760784 .784314 .890196 rgb
f
217.662 300.417 mo
217.673 304.256 li
298.426 257.19 li
298.415 253.351 li
217.662 300.417 li
cp
.662745 .694118 .831373 rgb
f
169.859 272.639 mo
217.695 300.438 li
298.448 253.373 li
250.612 225.573 li
169.859 272.639 li
.905882 .909804 .92549 rgb
f
262.581 252.816 mo
244.845 252.587 li
255.276 246.743 li
262.581 252.816 li
.709804 .67451 .780392 rgb
f
269.914 258.195 mo
269.765 258.788 li
230.667 281.122 li
230.815 280.528 li
269.914 258.195 li
cp
.807843 .827451 .909804 rgb
f
230.815 280.528 mo
230.667 281.122 li
215.381 268.839 li
215.54 267.372 li
230.815 280.528 li
cp
.560784 .603922 .823529 rgb
f
269.914 258.195 mo
230.815 280.528 li
215.54 267.372 li
254.639 245.038 li
269.914 258.195 li
cp
.890196 .890196 .890196 rgb
f
256.074 246.592 mo
255.976 246.988 li
253.889 248.18 li
253.988 247.784 li
256.074 246.592 li
cp
.760784 .784314 .890196 rgb
f
253.988 247.784 mo
253.889 248.18 li
252.781 247.225 li
252.879 246.83 li
253.988 247.784 li
cp
.560784 .603922 .823529 rgb
f
256.074 246.592 mo
253.988 247.784 li
252.879 246.83 li
254.966 245.638 li
256.074 246.592 li
cp
.807843 .827451 .909804 rgb
f
258.866 249.18 mo
258.768 249.575 li
256.681 250.767 li
256.78 250.372 li
258.866 249.18 li
cp
.760784 .784314 .890196 rgb
f
256.78 250.372 mo
256.681 250.767 li
254.65 249.019 li
254.749 248.623 li
256.78 250.372 li
cp
.560784 .603922 .823529 rgb
f
258.866 249.18 mo
256.78 250.372 li
254.749 248.623 li
256.836 247.431 li
258.866 249.18 li
cp
.807843 .827451 .909804 rgb
f
253.443 248.095 mo
253.344 248.491 li
251.257 249.683 li
251.356 249.288 li
253.443 248.095 li
cp
.760784 .784314 .890196 rgb
f
251.356 249.288 mo
251.257 249.683 li
250.149 248.729 li
250.248 248.333 li
251.356 249.288 li
cp
.560784 .603922 .823529 rgb
f
253.443 248.095 mo
251.356 249.288 li
250.248 248.333 li
252.334 247.141 li
253.443 248.095 li
cp
.807843 .827451 .909804 rgb
f
256.337 250.625 mo
256.238 251.02 li
254.152 252.212 li
254.25 251.817 li
256.337 250.625 li
cp
.760784 .784314 .890196 rgb
f
254.25 251.817 mo
254.152 252.212 li
252.121 250.463 li
252.22 250.068 li
254.25 251.817 li
cp
.560784 .603922 .823529 rgb
f
256.337 250.625 mo
254.25 251.817 li
252.22 250.068 li
254.306 248.875 li
256.337 250.625 li
cp
.807843 .827451 .909804 rgb
f
250.811 249.599 mo
250.712 249.994 li
248.625 251.186 li
248.724 250.791 li
250.811 249.599 li
cp
.760784 .784314 .890196 rgb
f
248.724 250.791 mo
248.625 251.186 li
247.517 250.232 li
247.615 249.836 li
248.724 250.791 li
cp
.560784 .603922 .823529 rgb
f
250.811 249.599 mo
248.724 250.791 li
247.615 249.836 li
249.702 248.644 li
250.811 249.599 li
cp
.807843 .827451 .909804 rgb
f
253.808 252.069 mo
253.709 252.465 li
251.622 253.657 li
251.721 253.262 li
253.808 252.069 li
cp
.760784 .784314 .890196 rgb
f
251.721 253.262 mo
251.622 253.657 li
249.592 251.908 li
249.69 251.513 li
251.721 253.262 li
cp
.560784 .603922 .823529 rgb
f
253.808 252.069 mo
251.721 253.262 li
249.69 251.513 li
251.777 250.321 li
253.808 252.069 li
cp
.807843 .827451 .909804 rgb
f
248.178 251.102 mo
248.08 251.498 li
245.993 252.69 li
246.092 252.294 li
248.178 251.102 li
cp
.760784 .784314 .890196 rgb
f
246.092 252.294 mo
245.993 252.69 li
244.885 251.736 li
244.983 251.34 li
246.092 252.294 li
cp
.560784 .603922 .823529 rgb
f
248.178 251.102 mo
246.092 252.294 li
244.983 251.34 li
247.07 250.148 li
248.178 251.102 li
cp
.807843 .827451 .909804 rgb
f
251.278 253.514 mo
251.179 253.91 li
249.093 255.102 li
249.191 254.706 li
251.278 253.514 li
cp
.760784 .784314 .890196 rgb
f
249.191 254.706 mo
249.093 255.102 li
247.062 253.353 li
247.161 252.958 li
249.191 254.706 li
cp
.560784 .603922 .823529 rgb
f
251.278 253.514 mo
249.191 254.706 li
247.161 252.958 li
249.248 251.766 li
251.278 253.514 li
cp
.807843 .827451 .909804 rgb
f
248.749 254.959 mo
248.65 255.355 li
246.563 256.547 li
246.662 256.151 li
248.749 254.959 li
cp
.760784 .784314 .890196 rgb
f
246.662 256.151 mo
246.563 256.547 li
244.532 254.798 li
244.631 254.402 li
246.662 256.151 li
cp
.560784 .603922 .823529 rgb
f
248.749 254.959 mo
246.662 256.151 li
244.631 254.402 li
246.718 253.21 li
248.749 254.959 li
cp
.807843 .827451 .909804 rgb
f
244.231 253.357 mo
244.133 253.752 li
242.046 254.945 li
242.144 254.549 li
244.231 253.357 li
cp
.760784 .784314 .890196 rgb
f
242.144 254.549 mo
242.046 254.945 li
240.938 253.99 li
241.037 253.595 li
242.144 254.549 li
cp
.560784 .603922 .823529 rgb
f
244.231 253.357 mo
242.144 254.549 li
241.037 253.595 li
243.123 252.402 li
244.231 253.357 li
cp
.807843 .827451 .909804 rgb
f
246.219 256.404 mo
246.12 256.8 li
244.034 257.992 li
244.132 257.596 li
246.219 256.404 li
cp
.760784 .784314 .890196 rgb
f
244.132 257.596 mo
244.034 257.992 li
242.003 256.243 li
242.102 255.847 li
244.132 257.596 li
cp
.560784 .603922 .823529 rgb
f
246.219 256.404 mo
244.132 257.596 li
242.102 255.847 li
244.188 254.655 li
246.219 256.404 li
cp
.807843 .827451 .909804 rgb
f
241.599 254.86 mo
241.5 255.256 li
239.414 256.448 li
239.512 256.052 li
241.599 254.86 li
cp
.760784 .784314 .890196 rgb
f
239.512 256.052 mo
239.414 256.448 li
238.305 255.494 li
238.404 255.098 li
239.512 256.052 li
cp
.560784 .603922 .823529 rgb
f
241.599 254.86 mo
239.512 256.052 li
238.404 255.098 li
240.491 253.906 li
241.599 254.86 li
cp
.807843 .827451 .909804 rgb
f
243.69 257.849 mo
243.591 258.244 li
241.504 259.437 li
241.603 259.041 li
243.69 257.849 li
cp
.760784 .784314 .890196 rgb
f
241.603 259.041 mo
241.504 259.437 li
239.474 257.688 li
239.573 257.292 li
241.603 259.041 li
cp
.560784 .603922 .823529 rgb
f
243.69 257.849 mo
241.603 259.041 li
239.573 257.292 li
241.659 256.1 li
243.69 257.849 li
cp
.807843 .827451 .909804 rgb
f
238.967 256.364 mo
238.869 256.76 li
236.782 257.951 li
236.88 257.556 li
238.967 256.364 li
cp
.760784 .784314 .890196 rgb
f
236.88 257.556 mo
236.782 257.951 li
235.674 256.997 li
235.772 256.601 li
236.88 257.556 li
cp
.560784 .603922 .823529 rgb
f
238.967 256.364 mo
236.88 257.556 li
235.772 256.601 li
237.859 255.41 li
238.967 256.364 li
cp
.807843 .827451 .909804 rgb
f
241.16 259.294 mo
241.062 259.69 li
238.975 260.882 li
239.073 260.486 li
241.16 259.294 li
cp
.760784 .784314 .890196 rgb
f
239.073 260.486 mo
238.975 260.882 li
236.944 259.132 li
237.043 258.737 li
239.073 260.486 li
cp
.560784 .603922 .823529 rgb
f
241.16 259.294 mo
239.073 260.486 li
237.043 258.737 li
239.13 257.545 li
241.16 259.294 li
cp
.807843 .827451 .909804 rgb
f
236.335 257.867 mo
236.237 258.263 li
234.15 259.455 li
234.249 259.059 li
236.335 257.867 li
cp
.760784 .784314 .890196 rgb
f
234.249 259.059 mo
234.15 259.455 li
233.042 258.5 li
233.14 258.105 li
234.249 259.059 li
cp
.560784 .603922 .823529 rgb
f
236.335 257.867 mo
234.249 259.059 li
233.14 258.105 li
235.227 256.913 li
236.335 257.867 li
cp
.807843 .827451 .909804 rgb
f
238.631 260.739 mo
238.532 261.134 li
236.445 262.326 li
236.544 261.931 li
238.631 260.739 li
cp
.760784 .784314 .890196 rgb
f
236.544 261.931 mo
236.445 262.326 li
234.415 260.578 li
234.513 260.182 li
236.544 261.931 li
cp
.560784 .603922 .823529 rgb
f
238.631 260.739 mo
236.544 261.931 li
234.513 260.182 li
236.6 258.99 li
238.631 260.739 li
cp
.807843 .827451 .909804 rgb
f
232.388 260.122 mo
232.29 260.517 li
230.202 261.709 li
230.301 261.314 li
232.388 260.122 li
cp
.760784 .784314 .890196 rgb
f
230.301 261.314 mo
230.202 261.709 li
229.094 260.755 li
229.193 260.36 li
230.301 261.314 li
cp
.560784 .603922 .823529 rgb
f
232.388 260.122 mo
230.301 261.314 li
229.193 260.36 li
231.28 259.167 li
232.388 260.122 li
cp
.807843 .827451 .909804 rgb
f
236.101 262.184 mo
236.002 262.579 li
233.916 263.771 li
234.014 263.376 li
236.101 262.184 li
cp
.760784 .784314 .890196 rgb
f
234.014 263.376 mo
233.916 263.771 li
231.885 262.022 li
231.984 261.627 li
234.014 263.376 li
cp
.560784 .603922 .823529 rgb
f
236.101 262.184 mo
234.014 263.376 li
231.984 261.627 li
234.071 260.435 li
236.101 262.184 li
cp
.807843 .827451 .909804 rgb
f
229.756 261.625 mo
229.658 262.021 li
227.571 263.213 li
227.669 262.818 li
229.756 261.625 li
cp
.760784 .784314 .890196 rgb
f
227.669 262.818 mo
227.571 263.213 li
226.463 262.258 li
226.561 261.863 li
227.669 262.818 li
cp
.560784 .603922 .823529 rgb
f
229.756 261.625 mo
227.669 262.818 li
226.561 261.863 li
228.648 260.671 li
229.756 261.625 li
cp
.807843 .827451 .909804 rgb
f
233.572 263.628 mo
233.474 264.024 li
231.386 265.216 li
231.485 264.821 li
233.572 263.628 li
cp
.760784 .784314 .890196 rgb
f
231.485 264.821 mo
231.386 265.216 li
229.356 263.467 li
229.454 263.071 li
231.485 264.821 li
cp
.560784 .603922 .823529 rgb
f
233.572 263.628 mo
231.485 264.821 li
229.454 263.071 li
231.541 261.88 li
233.572 263.628 li
cp
.807843 .827451 .909804 rgb
f
227.124 263.129 mo
227.026 263.524 li
224.938 264.717 li
225.037 264.321 li
227.124 263.129 li
cp
.760784 .784314 .890196 rgb
f
225.037 264.321 mo
224.938 264.717 li
223.831 263.762 li
223.929 263.367 li
225.037 264.321 li
cp
.560784 .603922 .823529 rgb
f
227.124 263.129 mo
225.037 264.321 li
223.929 263.367 li
226.016 262.175 li
227.124 263.129 li
cp
.807843 .827451 .909804 rgb
f
231.042 265.073 mo
230.944 265.469 li
228.857 266.661 li
228.956 266.265 li
231.042 265.073 li
cp
.760784 .784314 .890196 rgb
f
228.956 266.265 mo
228.857 266.661 li
226.826 264.912 li
226.925 264.516 li
228.956 266.265 li
cp
.560784 .603922 .823529 rgb
f
231.042 265.073 mo
228.956 266.265 li
226.925 264.516 li
229.012 263.324 li
231.042 265.073 li
cp
.807843 .827451 .909804 rgb
f
224.492 264.632 mo
224.393 265.028 li
222.306 266.22 li
222.405 265.824 li
224.492 264.632 li
cp
.760784 .784314 .890196 rgb
f
222.405 265.824 mo
222.306 266.22 li
221.198 265.266 li
221.297 264.87 li
222.405 265.824 li
cp
.560784 .603922 .823529 rgb
f
224.492 264.632 mo
222.405 265.824 li
221.297 264.87 li
223.384 263.678 li
224.492 264.632 li
cp
.807843 .827451 .909804 rgb
f
228.513 266.518 mo
228.414 266.914 li
226.327 268.106 li
226.426 267.71 li
228.513 266.518 li
cp
.760784 .784314 .890196 rgb
f
226.426 267.71 mo
226.327 268.106 li
224.297 266.357 li
224.396 265.962 li
226.426 267.71 li
cp
.560784 .603922 .823529 rgb
f
228.513 266.518 mo
226.426 267.71 li
224.396 265.962 li
226.482 264.769 li
228.513 266.518 li
cp
.807843 .827451 .909804 rgb
f
225.984 267.963 mo
225.885 268.359 li
223.798 269.551 li
223.896 269.155 li
225.984 267.963 li
cp
.760784 .784314 .890196 rgb
f
223.896 269.155 mo
223.798 269.551 li
221.768 267.802 li
221.866 267.406 li
223.896 269.155 li
cp
.560784 .603922 .823529 rgb
f
225.984 267.963 mo
223.896 269.155 li
221.866 267.406 li
223.953 266.214 li
225.984 267.963 li
cp
.807843 .827451 .909804 rgb
f
220.534 266.893 mo
220.436 267.289 li
218.349 268.481 li
218.447 268.085 li
220.534 266.893 li
cp
.760784 .784314 .890196 rgb
f
218.447 268.085 mo
218.349 268.481 li
217.241 267.526 li
217.339 267.131 li
218.447 268.085 li
cp
.560784 .603922 .823529 rgb
f
220.534 266.893 mo
218.447 268.085 li
217.339 267.131 li
219.426 265.939 li
220.534 266.893 li
cp
.807843 .827451 .909804 rgb
f
223.454 269.408 mo
223.355 269.803 li
221.268 270.996 li
221.367 270.6 li
223.454 269.408 li
cp
.760784 .784314 .890196 rgb
f
221.367 270.6 mo
221.268 270.996 li
219.238 269.246 li
219.336 268.851 li
221.367 270.6 li
cp
.560784 .603922 .823529 rgb
f
223.454 269.408 mo
221.367 270.6 li
219.336 268.851 li
221.423 267.659 li
223.454 269.408 li
cp
.807843 .827451 .909804 rgb
f
259.202 252.458 mo
259.104 252.854 li
257.839 253.577 li
257.938 253.181 li
259.202 252.458 li
cp
.760784 .784314 .890196 rgb
f
257.938 253.181 mo
257.839 253.577 li
255.808 251.828 li
255.907 251.432 li
257.938 253.181 li
cp
.560784 .603922 .823529 rgb
f
263.712 253.353 mo
263.613 253.748 li
261.526 254.941 li
261.625 254.545 li
263.712 253.353 li
cp
.760784 .784314 .890196 rgb
f
263.712 253.353 mo
261.625 254.545 li
259.202 252.458 li
257.938 253.181 li
255.907 251.432 li
259.259 249.517 li
259.969 250.13 li
261.289 251.267 li
263.712 253.353 li
cp
.807843 .827451 .909804 rgb
f
261.625 254.545 mo
261.526 254.941 li
259.104 252.854 li
259.202 252.458 li
261.625 254.545 li
cp
.560784 .603922 .823529 rgb
f
255.408 254.626 mo
255.309 255.021 li
253.279 253.272 li
253.377 252.877 li
255.408 254.626 li
cp
f
257.495 253.434 mo
257.396 253.829 li
255.309 255.021 li
255.408 254.626 li
257.495 253.434 li
cp
.760784 .784314 .890196 rgb
f
257.495 253.434 mo
255.408 254.626 li
253.377 252.877 li
255.465 251.685 li
257.495 253.434 li
cp
.807843 .827451 .909804 rgb
f
261.182 254.798 mo
261.083 255.193 li
258.997 256.385 li
259.095 255.99 li
261.182 254.798 li
cp
.760784 .784314 .890196 rgb
f
261.182 254.798 mo
259.095 255.99 li
257.065 254.241 li
259.152 253.049 li
261.182 254.798 li
cp
.807843 .827451 .909804 rgb
f
259.095 255.99 mo
258.997 256.385 li
256.966 254.637 li
257.065 254.241 li
259.095 255.99 li
cp
.560784 .603922 .823529 rgb
f
254.966 254.879 mo
254.867 255.274 li
252.78 256.466 li
252.879 256.071 li
254.966 254.879 li
cp
.760784 .784314 .890196 rgb
f
252.879 256.071 mo
252.78 256.466 li
250.749 254.717 li
250.848 254.322 li
252.879 256.071 li
cp
.560784 .603922 .823529 rgb
f
254.966 254.879 mo
252.879 256.071 li
250.848 254.322 li
252.935 253.129 li
254.966 254.879 li
cp
.807843 .827451 .909804 rgb
f
252.436 256.323 mo
252.337 256.719 li
250.251 257.911 li
250.349 257.516 li
252.436 256.323 li
cp
.760784 .784314 .890196 rgb
f
250.349 257.516 mo
250.251 257.911 li
248.22 256.162 li
248.319 255.767 li
250.349 257.516 li
cp
.560784 .603922 .823529 rgb
f
252.436 256.323 mo
250.349 257.516 li
248.319 255.767 li
250.405 254.574 li
252.436 256.323 li
cp
.807843 .827451 .909804 rgb
f
249.907 257.768 mo
249.808 258.164 li
247.721 259.356 li
247.82 258.96 li
249.907 257.768 li
cp
.760784 .784314 .890196 rgb
f
247.82 258.96 mo
247.721 259.356 li
245.69 257.607 li
245.789 257.211 li
247.82 258.96 li
cp
.560784 .603922 .823529 rgb
f
249.907 257.768 mo
247.82 258.96 li
245.789 257.211 li
247.876 256.02 li
249.907 257.768 li
cp
.807843 .827451 .909804 rgb
f
247.377 259.213 mo
247.279 259.609 li
245.192 260.801 li
245.29 260.406 li
247.377 259.213 li
cp
.760784 .784314 .890196 rgb
f
245.29 260.406 mo
245.192 260.801 li
243.161 259.052 li
243.26 258.656 li
245.29 260.406 li
cp
.560784 .603922 .823529 rgb
f
247.377 259.213 mo
245.29 260.406 li
243.26 258.656 li
245.347 257.464 li
247.377 259.213 li
cp
.807843 .827451 .909804 rgb
f
258.653 256.243 mo
258.554 256.638 li
256.467 257.83 li
256.566 257.435 li
258.653 256.243 li
cp
.760784 .784314 .890196 rgb
f
256.566 257.435 mo
256.467 257.83 li
254.437 256.082 li
254.535 255.686 li
256.566 257.435 li
cp
.560784 .603922 .823529 rgb
f
258.653 256.243 mo
256.566 257.435 li
254.535 255.686 li
256.622 254.494 li
258.653 256.243 li
cp
.807843 .827451 .909804 rgb
f
256.123 257.688 mo
256.025 258.083 li
253.938 259.275 li
254.036 258.88 li
256.123 257.688 li
cp
.760784 .784314 .890196 rgb
f
254.036 258.88 mo
253.938 259.275 li
251.907 257.526 li
252.006 257.131 li
254.036 258.88 li
cp
.560784 .603922 .823529 rgb
f
256.123 257.688 mo
254.036 258.88 li
252.006 257.131 li
254.093 255.939 li
256.123 257.688 li
cp
.807843 .827451 .909804 rgb
f
253.594 259.132 mo
253.495 259.528 li
251.408 260.72 li
251.507 260.325 li
253.594 259.132 li
cp
.760784 .784314 .890196 rgb
f
251.507 260.325 mo
251.408 260.72 li
249.378 258.971 li
249.477 258.576 li
251.507 260.325 li
cp
.560784 .603922 .823529 rgb
f
253.594 259.132 mo
251.507 260.325 li
249.477 258.576 li
251.563 257.383 li
253.594 259.132 li
cp
.807843 .827451 .909804 rgb
f
251.065 260.578 mo
250.966 260.973 li
248.879 262.165 li
248.978 261.769 li
251.065 260.578 li
cp
.760784 .784314 .890196 rgb
f
248.978 261.769 mo
248.879 262.165 li
246.848 260.416 li
246.947 260.021 li
248.978 261.769 li
cp
.560784 .603922 .823529 rgb
f
251.065 260.578 mo
248.978 261.769 li
246.947 260.021 li
249.034 258.828 li
251.065 260.578 li
cp
.807843 .827451 .909804 rgb
f
244.848 260.658 mo
244.749 261.054 li
242.662 262.246 li
242.761 261.85 li
244.848 260.658 li
cp
.760784 .784314 .890196 rgb
f
242.761 261.85 mo
242.662 262.246 li
240.632 260.497 li
240.73 260.101 li
242.761 261.85 li
cp
.560784 .603922 .823529 rgb
f
244.848 260.658 mo
242.761 261.85 li
240.73 260.101 li
242.817 258.909 li
244.848 260.658 li
cp
.807843 .827451 .909804 rgb
f
248.535 262.022 mo
248.436 262.418 li
246.35 263.61 li
246.448 263.214 li
248.535 262.022 li
cp
.760784 .784314 .890196 rgb
f
246.448 263.214 mo
246.35 263.61 li
244.319 261.861 li
244.417 261.465 li
246.448 263.214 li
cp
.560784 .603922 .823529 rgb
f
248.535 262.022 mo
246.448 263.214 li
244.417 261.465 li
246.504 260.273 li
248.535 262.022 li
cp
.807843 .827451 .909804 rgb
f
242.318 262.103 mo
242.219 262.499 li
240.132 263.691 li
240.231 263.295 li
242.318 262.103 li
cp
.760784 .784314 .890196 rgb
f
240.231 263.295 mo
240.132 263.691 li
238.102 261.941 li
238.201 261.546 li
240.231 263.295 li
cp
.560784 .603922 .823529 rgb
f
242.318 262.103 mo
240.231 263.295 li
238.201 261.546 li
240.288 260.354 li
242.318 262.103 li
cp
.807843 .827451 .909804 rgb
f
246.005 263.467 mo
245.907 263.862 li
243.82 265.055 li
243.919 264.66 li
246.005 263.467 li
cp
.760784 .784314 .890196 rgb
f
243.919 264.66 mo
243.82 265.055 li
241.79 263.306 li
241.888 262.91 li
243.919 264.66 li
cp
.560784 .603922 .823529 rgb
f
246.005 263.467 mo
243.919 264.66 li
241.888 262.91 li
243.975 261.718 li
246.005 263.467 li
cp
.807843 .827451 .909804 rgb
f
239.789 263.548 mo
239.69 263.943 li
237.603 265.135 li
237.702 264.74 li
239.789 263.548 li
cp
.760784 .784314 .890196 rgb
f
237.702 264.74 mo
237.603 265.135 li
235.573 263.387 li
235.671 262.991 li
237.702 264.74 li
cp
.560784 .603922 .823529 rgb
f
239.789 263.548 mo
237.702 264.74 li
235.671 262.991 li
237.758 261.799 li
239.789 263.548 li
cp
.807843 .827451 .909804 rgb
f
243.476 264.912 mo
243.377 265.307 li
241.291 266.5 li
241.389 266.104 li
243.476 264.912 li
cp
.760784 .784314 .890196 rgb
f
241.389 266.104 mo
241.291 266.5 li
239.26 264.751 li
239.359 264.355 li
241.389 266.104 li
cp
.560784 .603922 .823529 rgb
f
243.476 264.912 mo
241.389 266.104 li
239.359 264.355 li
241.446 263.163 li
243.476 264.912 li
cp
.807843 .827451 .909804 rgb
f
237.259 264.993 mo
237.161 265.388 li
235.074 266.58 li
235.172 266.185 li
237.259 264.993 li
cp
.760784 .784314 .890196 rgb
f
235.172 266.185 mo
235.074 266.58 li
233.043 264.831 li
233.142 264.436 li
235.172 266.185 li
cp
.560784 .603922 .823529 rgb
f
237.259 264.993 mo
235.172 266.185 li
233.142 264.436 li
235.229 263.244 li
237.259 264.993 li
cp
.807843 .827451 .909804 rgb
f
240.947 266.357 mo
240.848 266.753 li
238.761 267.944 li
238.86 267.549 li
240.947 266.357 li
cp
.760784 .784314 .890196 rgb
f
238.86 267.549 mo
238.761 267.944 li
236.731 266.196 li
236.829 265.8 li
238.86 267.549 li
cp
.560784 .603922 .823529 rgb
f
240.947 266.357 mo
238.86 267.549 li
236.829 265.8 li
238.916 264.608 li
240.947 266.357 li
cp
.807843 .827451 .909804 rgb
f
234.73 266.438 mo
234.631 266.833 li
232.544 268.025 li
232.643 267.63 li
234.73 266.438 li
cp
.760784 .784314 .890196 rgb
f
232.643 267.63 mo
232.544 268.025 li
230.513 266.276 li
230.612 265.881 li
232.643 267.63 li
cp
.560784 .603922 .823529 rgb
f
234.73 266.438 mo
232.643 267.63 li
230.612 265.881 li
232.699 264.689 li
234.73 266.438 li
cp
.807843 .827451 .909804 rgb
f
238.417 267.802 mo
238.318 268.197 li
236.231 269.389 li
236.33 268.994 li
238.417 267.802 li
cp
.760784 .784314 .890196 rgb
f
236.33 268.994 mo
236.231 269.389 li
234.201 267.641 li
234.3 267.245 li
236.33 268.994 li
cp
.560784 .603922 .823529 rgb
f
238.417 267.802 mo
236.33 268.994 li
234.3 267.245 li
236.386 266.053 li
238.417 267.802 li
cp
.807843 .827451 .909804 rgb
f
232.2 267.882 mo
232.102 268.278 li
230.015 269.47 li
230.114 269.075 li
232.2 267.882 li
cp
.760784 .784314 .890196 rgb
f
230.114 269.075 mo
230.015 269.47 li
227.984 267.721 li
228.083 267.326 li
230.114 269.075 li
cp
.560784 .603922 .823529 rgb
f
232.2 267.882 mo
230.114 269.075 li
228.083 267.326 li
230.17 266.133 li
232.2 267.882 li
cp
.807843 .827451 .909804 rgb
f
235.887 269.246 mo
235.789 269.642 li
233.702 270.834 li
233.801 270.439 li
235.887 269.246 li
cp
.760784 .784314 .890196 rgb
f
233.801 270.439 mo
233.702 270.834 li
231.672 269.085 li
231.77 268.69 li
233.801 270.439 li
cp
.560784 .603922 .823529 rgb
f
235.887 269.246 mo
233.801 270.439 li
231.77 268.69 li
233.857 267.498 li
235.887 269.246 li
cp
.807843 .827451 .909804 rgb
f
229.671 269.327 mo
229.572 269.723 li
223.691 273.082 li
223.79 272.687 li
229.671 269.327 li
cp
.760784 .784314 .890196 rgb
f
223.79 272.687 mo
223.691 273.082 li
221.66 271.333 li
221.759 270.938 li
223.79 272.687 li
cp
.560784 .603922 .823529 rgb
f
229.671 269.327 mo
223.79 272.687 li
221.759 270.938 li
227.64 267.578 li
229.671 269.327 li
cp
.807843 .827451 .909804 rgb
f
233.358 270.692 mo
233.26 271.087 li
231.173 272.279 li
231.271 271.884 li
233.358 270.692 li
cp
.760784 .784314 .890196 rgb
f
231.271 271.884 mo
231.173 272.279 li
229.142 270.53 li
229.241 270.135 li
231.271 271.884 li
cp
.560784 .603922 .823529 rgb
f
233.358 270.692 mo
231.271 271.884 li
229.241 270.135 li
231.328 268.943 li
233.358 270.692 li
cp
.807843 .827451 .909804 rgb
f
266.135 255.44 mo
266.036 255.835 li
262.684 257.75 li
262.783 257.354 li
266.135 255.44 li
cp
.760784 .784314 .890196 rgb
f
262.783 257.354 mo
262.684 257.75 li
260.654 256.001 li
260.752 255.605 li
262.783 257.354 li
cp
.560784 .603922 .823529 rgb
f
266.135 255.44 mo
262.783 257.354 li
260.752 255.605 li
264.104 253.691 li
266.135 255.44 li
cp
.807843 .827451 .909804 rgb
f
262.34 257.607 mo
262.242 258.002 li
260.155 259.195 li
260.253 258.799 li
262.34 257.607 li
cp
.760784 .784314 .890196 rgb
f
260.253 258.799 mo
260.155 259.195 li
258.124 257.446 li
258.223 257.05 li
260.253 258.799 li
cp
.560784 .603922 .823529 rgb
f
262.34 257.607 mo
260.253 258.799 li
258.223 257.05 li
260.31 255.858 li
262.34 257.607 li
cp
.807843 .827451 .909804 rgb
f
259.811 259.052 mo
259.712 259.447 li
257.625 260.64 li
257.724 260.244 li
259.811 259.052 li
cp
.760784 .784314 .890196 rgb
f
257.724 260.244 mo
257.625 260.64 li
255.594 258.891 li
255.693 258.495 li
257.724 260.244 li
cp
.560784 .603922 .823529 rgb
f
259.811 259.052 mo
257.724 260.244 li
255.693 258.495 li
257.781 257.303 li
259.811 259.052 li
cp
.807843 .827451 .909804 rgb
f
257.281 260.497 mo
257.183 260.892 li
255.096 262.084 li
255.195 261.689 li
257.281 260.497 li
cp
.760784 .784314 .890196 rgb
f
255.195 261.689 mo
255.096 262.084 li
253.065 260.336 li
253.164 259.94 li
255.195 261.689 li
cp
.560784 .603922 .823529 rgb
f
257.281 260.497 mo
255.195 261.689 li
253.164 259.94 li
255.251 258.748 li
257.281 260.497 li
cp
.807843 .827451 .909804 rgb
f
254.752 261.942 mo
254.653 262.337 li
252.566 263.529 li
252.665 263.134 li
254.752 261.942 li
cp
.760784 .784314 .890196 rgb
f
252.665 263.134 mo
252.566 263.529 li
250.536 261.78 li
250.634 261.385 li
252.665 263.134 li
cp
.560784 .603922 .823529 rgb
f
254.752 261.942 mo
252.665 263.134 li
250.634 261.385 li
252.721 260.193 li
254.752 261.942 li
cp
.807843 .827451 .909804 rgb
f
252.222 263.387 mo
252.124 263.782 li
250.037 264.974 li
250.135 264.579 li
252.222 263.387 li
cp
.760784 .784314 .890196 rgb
f
250.135 264.579 mo
250.037 264.974 li
248.006 263.225 li
248.105 262.83 li
250.135 264.579 li
cp
.560784 .603922 .823529 rgb
f
252.222 263.387 mo
250.135 264.579 li
248.105 262.83 li
250.192 261.638 li
252.222 263.387 li
cp
.807843 .827451 .909804 rgb
f
249.693 264.831 mo
249.594 265.227 li
247.508 266.419 li
247.606 266.023 li
249.693 264.831 li
cp
.760784 .784314 .890196 rgb
f
247.606 266.023 mo
247.508 266.419 li
245.477 264.67 li
245.576 264.275 li
247.606 266.023 li
cp
.560784 .603922 .823529 rgb
f
249.693 264.831 mo
247.606 266.023 li
245.576 264.275 li
247.662 263.082 li
249.693 264.831 li
cp
.807843 .827451 .909804 rgb
f
247.163 266.276 mo
247.065 266.672 li
244.978 267.864 li
245.077 267.468 li
247.163 266.276 li
cp
.760784 .784314 .890196 rgb
f
245.077 267.468 mo
244.978 267.864 li
242.947 266.115 li
243.046 265.719 li
245.077 267.468 li
cp
.560784 .603922 .823529 rgb
f
247.163 266.276 mo
245.077 267.468 li
243.046 265.719 li
245.133 264.527 li
247.163 266.276 li
cp
.807843 .827451 .909804 rgb
f
244.634 267.721 mo
244.535 268.117 li
242.448 269.309 li
242.547 268.913 li
244.634 267.721 li
cp
.760784 .784314 .890196 rgb
f
242.547 268.913 mo
242.448 269.309 li
240.418 267.56 li
240.516 267.164 li
242.547 268.913 li
cp
.560784 .603922 .823529 rgb
f
244.634 267.721 mo
242.547 268.913 li
240.516 267.164 li
242.604 265.972 li
244.634 267.721 li
cp
.807843 .827451 .909804 rgb
f
242.104 269.166 mo
242.006 269.561 li
239.919 270.754 li
240.018 270.358 li
242.104 269.166 li
cp
.760784 .784314 .890196 rgb
f
240.018 270.358 mo
239.919 270.754 li
237.889 269.005 li
237.987 268.609 li
240.018 270.358 li
cp
.560784 .603922 .823529 rgb
f
242.104 269.166 mo
240.018 270.358 li
237.987 268.609 li
240.074 267.417 li
242.104 269.166 li
cp
.807843 .827451 .909804 rgb
f
239.575 270.611 mo
239.476 271.006 li
237.389 272.198 li
237.488 271.803 li
239.575 270.611 li
cp
.760784 .784314 .890196 rgb
f
237.488 271.803 mo
237.389 272.198 li
235.359 270.45 li
235.458 270.054 li
237.488 271.803 li
cp
.560784 .603922 .823529 rgb
f
239.575 270.611 mo
237.488 271.803 li
235.458 270.054 li
237.544 268.862 li
239.575 270.611 li
cp
.807843 .827451 .909804 rgb
f
237.046 272.056 mo
236.947 272.452 li
234.86 273.643 li
234.959 273.248 li
237.046 272.056 li
cp
.760784 .784314 .890196 rgb
f
234.959 273.248 mo
234.86 273.643 li
232.829 271.895 li
232.928 271.499 li
234.959 273.248 li
cp
.560784 .603922 .823529 rgb
f
237.046 272.056 mo
234.959 273.248 li
232.928 271.499 li
235.015 270.307 li
237.046 272.056 li
cp
.807843 .827451 .909804 rgb
f
268.557 257.526 mo
268.459 257.922 li
263.842 260.559 li
263.941 260.163 li
268.557 257.526 li
cp
.760784 .784314 .890196 rgb
f
263.941 260.163 mo
263.842 260.559 li
261.812 258.81 li
261.91 258.415 li
263.941 260.163 li
cp
.560784 .603922 .823529 rgb
f
268.557 257.526 mo
263.941 260.163 li
261.91 258.415 li
266.526 255.778 li
268.557 257.526 li
cp
.807843 .827451 .909804 rgb
f
263.498 260.416 mo
263.399 260.812 li
261.313 262.004 li
261.411 261.608 li
263.498 260.416 li
cp
.760784 .784314 .890196 rgb
f
261.411 261.608 mo
261.313 262.004 li
259.282 260.255 li
259.381 259.859 li
261.411 261.608 li
cp
.560784 .603922 .823529 rgb
f
263.498 260.416 mo
261.411 261.608 li
259.381 259.859 li
261.468 258.667 li
263.498 260.416 li
cp
.807843 .827451 .909804 rgb
f
260.969 261.861 mo
260.87 262.257 li
258.783 263.449 li
258.882 263.053 li
260.969 261.861 li
cp
.760784 .784314 .890196 rgb
f
258.882 263.053 mo
258.783 263.449 li
256.753 261.7 li
256.851 261.304 li
258.882 263.053 li
cp
.560784 .603922 .823529 rgb
f
260.969 261.861 mo
258.882 263.053 li
256.851 261.304 li
258.938 260.112 li
260.969 261.861 li
cp
.807843 .827451 .909804 rgb
f
258.439 263.306 mo
258.34 263.701 li
241.077 273.563 li
241.176 273.167 li
258.439 263.306 li
cp
.760784 .784314 .890196 rgb
f
241.176 273.167 mo
241.077 273.563 li
239.046 271.814 li
239.145 271.418 li
241.176 273.167 li
cp
.560784 .603922 .823529 rgb
f
258.439 263.306 mo
241.176 273.167 li
239.145 271.418 li
256.409 261.557 li
258.439 263.306 li
cp
.807843 .827451 .909804 rgb
f
240.733 273.42 mo
240.634 273.816 li
238.547 275.008 li
238.646 274.612 li
240.733 273.42 li
cp
.760784 .784314 .890196 rgb
f
238.646 274.612 mo
238.547 275.008 li
236.517 273.259 li
236.615 272.863 li
238.646 274.612 li
cp
.560784 .603922 .823529 rgb
f
240.733 273.42 mo
238.646 274.612 li
236.615 272.863 li
238.702 271.671 li
240.733 273.42 li
cp
.807843 .827451 .909804 rgb
f
230.829 272.137 mo
230.73 272.532 li
226.114 275.169 li
226.212 274.773 li
230.829 272.137 li
cp
.760784 .784314 .890196 rgb
f
226.212 274.773 mo
226.114 275.169 li
224.083 273.42 li
224.182 273.024 li
226.212 274.773 li
cp
.560784 .603922 .823529 rgb
f
230.829 272.137 mo
226.212 274.773 li
224.182 273.024 li
228.798 270.387 li
230.829 272.137 li
cp
.807843 .827451 .909804 rgb
f
234.516 273.501 mo
234.417 273.896 li
232.331 275.088 li
232.429 274.693 li
234.516 273.501 li
cp
.760784 .784314 .890196 rgb
f
232.429 274.693 mo
232.331 275.088 li
230.3 273.339 li
230.399 272.944 li
232.429 274.693 li
cp
.560784 .603922 .823529 rgb
f
234.516 273.501 mo
232.429 274.693 li
230.399 272.944 li
232.486 271.752 li
234.516 273.501 li
cp
.807843 .827451 .909804 rgb
f
238.204 274.865 mo
238.104 275.26 li
236.018 276.453 li
236.116 276.057 li
238.204 274.865 li
cp
.760784 .784314 .890196 rgb
f
236.116 276.057 mo
236.018 276.453 li
233.987 274.703 li
234.086 274.308 li
236.116 276.057 li
cp
.560784 .603922 .823529 rgb
f
238.204 274.865 mo
236.116 276.057 li
234.086 274.308 li
236.173 273.116 li
238.204 274.865 li
cp
.807843 .827451 .909804 rgb
f
231.987 274.945 mo
231.888 275.341 li
228.536 277.255 li
228.635 276.86 li
231.987 274.945 li
cp
.760784 .784314 .890196 rgb
f
228.635 276.86 mo
228.536 277.255 li
226.506 275.507 li
226.605 275.111 li
228.635 276.86 li
cp
.560784 .603922 .823529 rgb
f
231.987 274.945 mo
228.635 276.86 li
226.605 275.111 li
229.956 273.196 li
231.987 274.945 li
cp
.807843 .827451 .909804 rgb
f
235.674 276.31 mo
235.575 276.705 li
230.959 279.342 li
231.058 278.947 li
235.674 276.31 li
cp
.760784 .784314 .890196 rgb
f
231.058 278.947 mo
230.959 279.342 li
228.928 277.593 li
229.027 277.197 li
231.058 278.947 li
cp
.560784 .603922 .823529 rgb
f
235.674 276.31 mo
231.058 278.947 li
229.027 277.197 li
233.643 274.561 li
235.674 276.31 li
cp
.807843 .827451 .909804 rgb
f
213.621 256.236 mo
226.676 248.649 li
224.415 244.124 li
211.359 251.711 li
213.621 256.236 li
cp
.196078 .164706 .211765 rgb
f
219.061 259.377 mo
232.117 251.79 li
226.676 248.649 li
213.621 256.236 li
219.061 259.377 li
cp
.223529 .192157 .243137 rgb
f
219.056 260.885 mo
232.112 253.298 li
232.117 251.79 li
219.061 259.377 li
219.056 260.885 li
cp
.137255 .105882 .14902 rgb
f
211.359 251.711 mo
224.415 244.124 li
224.47 224.54 li
211.414 232.127 li
211.359 251.711 li
cp
f
211.414 232.127 mo
224.47 224.54 li
223.155 223.781 li
210.099 231.368 li
211.414 232.127 li
cp
.223529 .192157 .243137 rgb
f
210.099 231.368 mo
210.042 251.489 li
212.991 257.384 li
219.056 260.885 li
219.061 259.377 li
213.621 256.236 li
211.359 251.711 li
211.414 232.127 li
210.099 231.368 li
cp
.105882 .0823529 .117647 rgb
f
243.476 180.891 mo
245.498 182.066 li
245.074 181.82 244.488 181.855 243.84 182.229 cv
241.818 181.055 li
242.466 180.68 243.053 180.645 243.476 180.891 cv
cp
.807843 .827451 .909804 rgb
f
gsave
243.476 180.891 mo
245.498 182.066 li
245.074 181.82 244.488 181.855 243.84 182.229 cv
241.818 181.055 li
242.466 180.68 243.053 180.645 243.476 180.891 cv
clp
243.84 182.229 mo
241.818 181.055 li
242.466 180.68 243.053 180.645 243.476 180.891 cv
245.498 182.066 li
245.074 181.82 244.488 181.855 243.84 182.229 cv
cp
f
grestore
186.57 261.228 mo
184.547 260.053 li
184.129 259.81 183.87 259.293 183.868 258.558 cv
185.89 259.733 li
185.892 260.468 186.151 260.985 186.57 261.228 cv
cp
f
gsave
186.57 261.228 mo
184.547 260.053 li
184.129 259.81 183.87 259.293 183.868 258.558 cv
185.89 259.733 li
185.892 260.468 186.151 260.985 186.57 261.228 cv
clp
186.57 261.228 mo
184.547 260.053 li
184.129 259.81 183.87 259.293 183.868 258.558 cv
185.89 259.733 li
185.892 260.468 186.151 260.985 186.57 261.228 cv
cp
f
grestore
185.89 259.733 mo
183.868 258.558 li
183.751 217.26 li
185.773 218.436 li
185.89 259.733 li
cp
f
188.095 214.414 mo
186.073 213.238 li
241.818 181.055 li
243.84 182.229 li
188.095 214.414 li
cp
f
185.773 218.436 mo
183.751 217.26 li
183.747 215.781 184.786 213.982 186.073 213.238 cv
188.095 214.414 li
186.808 215.157 185.769 216.956 185.773 218.436 cv
cp
f
gsave
185.773 218.436 mo
183.751 217.261 li
183.747 215.781 184.786 213.982 186.073 213.238 cv
188.095 214.414 li
186.808 215.157 185.768 216.956 185.773 218.436 cv
clp
185.773 218.436 mo
183.751 217.26 li
183.747 215.781 184.786 213.982 186.073 213.238 cv
188.095 214.414 li
186.808 215.157 185.769 216.956 185.773 218.436 cv
cp
f
grestore
243.84 182.229 mo
245.128 181.486 246.173 182.081 246.177 183.561 cv
246.294 224.859 li
246.299 226.338 245.26 228.137 243.972 228.881 cv
188.228 261.065 li
186.94 261.809 185.894 261.213 185.89 259.733 cv
185.773 218.436 li
185.769 216.956 186.808 215.157 188.095 214.414 cv
243.84 182.229 li
cp
.890196 .890196 .890196 rgb
f
187.127 256.906 mo
187.135 259.729 li
187.135 259.964 187.177 260.087 187.202 260.14 cv
187.259 260.135 187.393 260.11 187.605 259.987 cv
243.35 227.803 li
244.259 227.279 245.053 225.904 245.05 224.862 cv
245.046 223.464 li
187.127 256.906 li
cp
f
245.046 223.465 mo
187.128 256.904 li
187.125 255.983 li
187.018 218.432 li
187.015 217.39 187.809 216.015 188.718 215.49 cv
244.048 183.547 li
244.463 183.308 li
244.675 183.183 244.809 183.158 244.867 183.154 cv
244.891 183.208 244.931 183.33 244.934 183.564 cv
245.046 223.465 li
cp
.560784 .603922 .823529 rgb
f
244.161 223.051 mo
187.125 255.982 li
187.019 218.432 li
187.016 217.39 187.809 216.015 188.718 215.491 cv
244.047 183.547 li
244.161 223.051 li
cp
.188235 .392157 .780392 rgb
f
187.125 255.982 mo
187.019 218.432 li
187.016 217.39 187.809 216.015 188.718 215.491 cv
243.454 183.889 li
187.125 255.982 li
cp
.0745098 .568627 .933333 rgb
f
257.259 253.054 mo
257.187 253.031 li
256.961 252.943 li
255.286 252.404 251.133 251.308 250.737 253.013 cv
250.829 253.091 250.921 253.17 251.012 253.248 cv
249.263 254.261 250.593 254.583 249.712 255.399 cv
249.256 255.821 249.225 256.834 249.794 256.654 cv
249.414 257.275 249.711 257.858 251.103 257.528 cv
251.836 257.356 253.013 257.321 254.773 258.368 cv
254.702 258.483 255.45 259.059 254.285 259.052 cv
253.511 259.047 253.515 258.392 252.303 258.735 cv
251.846 258.863 251.762 259.257 252.077 259.506 cv
256.68 263.154 259.148 259.65 258.98 259.746 cv
258.866 259.813 259.204 259.619 259.304 259.55 cv
259.674 259.522 260.107 259.531 260.388 259.304 cv
260.772 258.995 261.044 258.435 261.216 257.985 cv
262.531 254.54 259.466 253.953 257.259 253.054 cv
cp
.945098 .709804 .6 rgb
f
261.613 254.034 mo
263.614 253.983 272.127 254.513 279.717 256.333 cv
284.491 257.478 287.25 259.894 286.312 262.988 cv
285.943 264.208 284.595 265.939 283.213 266.203 cv
281.495 266.532 268.038 261.805 259.713 260.501 cv
258.835 260.364 261.613 254.034 261.613 254.034 cv
cp
.560784 .603922 .823529 rgb
f
245.994 313.016 mo
245.659 313.115 245.323 313.314 244.979 313.642 cv
243.876 314.698 243.546 316.485 244.024 317.925 cv
244.462 319.253 245.664 320.146 246.827 320.9 cv
247.749 321.498 248.745 321.947 249.795 322.274 cv
251.105 322.68 253.439 323.15 255.182 324.353 cv
255.896 324.847 258.368 325.892 259.413 324.995 cv
261.524 323.183 261.578 320.167 260.333 318.501 cv
259.367 317.206 259.085 317.657 252.773 315.552 cv
251.19 315.026 249.657 314.276 248.196 313.471 cv
247.42 313.043 246.708 312.804 245.994 313.016 cv
cp
.105882 .0823529 .117647 rgb
f
259.719 314.286 mo
263.555 303.428 266.771 289.774 263.692 287.077 cv
262.564 286.089 261.077 285.639 259.592 285.505 cv
255.945 285.176 254.38 287.147 253.124 290.621 cv
252.528 292.275 250.427 303.501 249.064 310.802 cv
259.719 314.286 li
cp
.196078 .164706 .211765 rgb
f
225.997 328.179 mo
225.695 328.357 225.417 328.634 225.162 329.036 cv
224.339 330.33 224.444 332.145 225.25 333.426 cv
225.991 334.606 227.369 335.18 228.676 335.629 cv
229.714 335.984 230.787 336.177 231.883 336.237 cv
233.251 336.312 235.628 336.197 237.605 336.941 cv
238.417 337.245 241.064 337.657 241.865 336.531 cv
243.484 334.258 242.819 331.316 241.216 330.003 cv
239.971 328.983 239.805 329.489 233.178 328.987 cv
231.518 328.861 229.852 328.508 228.242 328.083 cv
227.387 327.858 226.639 327.799 225.997 328.179 cv
cp
.105882 .0823529 .117647 rgb
f
240.631 298.563 mo
239.9 300.411 236.875 314.451 235.392 321.242 cv
234.643 324.665 231.304 330.9 236.176 333.987 cv
237.18 334.623 238.421 334.838 239.604 334.622 cv
241.095 334.351 241.509 333.399 242.219 332.064 cv
247.335 322.453 255.324 299.15 251.29 295.373 cv
250.196 294.347 248.724 293.848 247.244 293.663 cv
243.614 293.209 241.99 295.129 240.631 298.563 cv
cp
.196078 .164706 .211765 rgb
f
283.084 319.4 mo
283.081 320.866 li
280.616 319.423 276.62 319.424 274.172 320.867 cv
274.176 319.4 li
276.625 317.958 280.62 317.957 283.084 319.4 cv
cp
.454902 .501961 .729412 rgb
f
gsave
283.084 319.4 mo
283.081 320.866 li
280.616 319.423 276.62 319.424 274.172 320.867 cv
274.176 319.4 li
276.625 317.957 280.62 317.957 283.084 319.4 cv
clp
274.657 319.145 mo
274.491 319.225 274.331 319.309 274.176 319.4 cv
274.172 320.867 li
274.328 320.775 274.49 320.69 274.657 320.609 cv
274.657 319.145 li
cp
f
grestore
274.176 319.4 mo
274.172 320.867 li
251.547 333.966 li
251.552 332.5 li
274.176 319.4 li
cp
f
249.719 336.564 mo
249.724 335.097 li
249.726 334.156 250.335 333.216 251.552 332.5 cv
251.547 333.966 li
250.331 334.682 249.722 335.622 249.719 336.564 cv
cp
f
gsave
249.719 336.564 mo
249.724 335.097 li
249.726 334.156 250.335 333.216 251.551 332.499 cv
251.547 333.966 li
250.331 334.682 249.722 335.622 249.719 336.564 cv
clp
251.552 332.5 mo
251.547 333.966 li
250.331 334.682 249.722 335.622 249.719 336.564 cv
249.724 335.097 li
249.726 334.156 250.335 333.216 251.552 332.5 cv
cp
f
grestore
249.323 339.07 mo
247.49 337.997 246.574 336.584 246.578 335.174 cv
246.573 336.64 li
246.57 338.051 247.486 339.462 249.319 340.536 cv
258.32 345.785 li
258.325 344.024 li
249.323 339.07 li
cp
f
251.552 332.5 mo
274.176 319.4 li
274.331 319.309 274.491 319.225 274.657 319.145 cv
274.657 317.064 li
273.707 317.326 272.818 317.686 272.036 318.147 cv
249.28 331.333 li
245.661 333.465 245.68 336.936 249.323 339.07 cv
249.323 339.07 258.159 343.939 258.325 344.024 cv
260.344 342.849 li
260.23 342.792 260.12 342.731 260.014 342.669 cv
251.58 337.731 li
249.116 336.289 249.103 333.942 251.552 332.5 cv
cp
.705882 .737255 .87451 rgb
f
258.325 344.024 mo
260.325 342.845 li
274.038 350.872 li
272.036 352.051 li
258.325 344.024 li
cp
f
276.723 351.141 mo
274.722 352.32 li
274.013 352.738 273.052 352.646 272.036 352.051 cv
274.038 350.872 li
275.052 351.467 276.014 351.558 276.723 351.141 cv
cp
.454902 .501961 .729412 rgb
f
gsave
276.723 351.141 mo
274.722 352.32 li
274.013 352.738 273.052 352.646 272.036 352.051 cv
274.038 350.872 li
275.052 351.467 276.014 351.558 276.723 351.141 cv
clp
274.387 351.059 mo
274.271 351.003 274.155 350.942 274.038 350.872 cv
272.036 352.051 li
272.154 352.12 272.271 352.182 272.386 352.238 cv
273.27 352.66 274.096 352.689 274.722 352.32 cv
276.723 351.141 li
276.096 351.51 275.271 351.481 274.387 351.059 cv
cp
.705882 .737255 .87451 rgb
f
grestore
277.792 353.008 mo
275.791 354.188 li
275.897 354.125 276 354.054 276.098 353.975 cv
277.107 353.16 277.528 351.57 277.257 349.612 cv
279.258 348.433 li
279.529 350.39 279.107 351.98 278.099 352.796 cv
278.001 352.875 277.898 352.946 277.792 353.008 cv
cp
.705882 .737255 .87451 rgb
f
gsave
277.792 353.008 mo
275.791 354.188 li
275.897 354.125 276 354.054 276.098 353.975 cv
277.107 353.16 277.528 351.57 277.257 349.612 cv
279.258 348.433 li
279.529 350.39 279.107 351.98 278.099 352.796 cv
278.001 352.875 277.898 352.946 277.792 353.008 cv
clp
279.313 348.946 mo
279.3 348.778 279.282 348.607 279.258 348.433 cv
277.257 349.612 li
277.281 349.786 277.3 349.957 277.313 350.125 cv
277.448 351.846 277.017 353.232 276.098 353.975 cv
276 354.054 275.897 354.125 275.791 354.188 cv
277.792 353.008 li
277.898 352.946 278.001 352.875 278.099 352.796 cv
279.018 352.053 279.448 350.667 279.313 348.946 cv
cp
f
grestore
247.212 314.444 mo
249.213 313.264 li
272.602 326.957 li
270.601 328.137 li
247.212 314.444 li
cp
.454902 .501961 .729412 rgb
f
275.79 336.239 mo
277.791 335.06 li
279.258 348.433 li
277.257 349.612 li
275.79 336.239 li
cp
.705882 .737255 .87451 rgb
f
270.601 328.137 mo
272.602 326.957 li
275.158 328.454 277.34 331.862 277.791 335.06 cv
275.79 336.239 li
275.34 333.041 273.158 329.634 270.601 328.137 cv
cp
f
gsave
270.601 328.137 mo
272.602 326.957 li
275.158 328.454 277.34 331.862 277.791 335.06 cv
275.79 336.239 li
275.34 333.041 273.158 329.634 270.601 328.137 cv
clp
270.601 328.137 mo
272.602 326.957 li
273.427 327.441 274.213 328.123 274.915 328.933 cv
272.914 330.112 li
272.213 329.302 271.427 328.619 270.601 328.137 cv
cp
f
272.914 330.112 mo
274.915 328.933 li
275.737 329.881 276.442 331.005 276.957 332.19 cv
274.957 333.368 li
274.441 332.184 273.735 331.061 272.914 330.112 cv
cp
f
274.957 333.368 mo
276.957 332.19 li
277.366 333.127 277.656 334.104 277.791 335.06 cv
275.79 336.239 li
275.655 335.282 275.365 334.306 274.957 333.368 cv
cp
f
grestore
270.601 328.137 mo
273.158 329.634 275.34 333.041 275.79 336.239 cv
277.257 349.612 li
277.528 351.57 277.107 353.16 276.098 353.975 cv
275.087 354.792 273.604 354.733 272.032 353.813 cv
258.32 345.785 li
258.325 344.024 li
272.036 352.051 li
273.161 352.709 274.219 352.752 274.941 352.168 cv
275.665 351.584 275.965 350.443 275.767 349.037 cv
274.299 335.666 li
273.973 333.386 272.418 330.963 270.596 329.896 cv
247.208 316.203 li
247.212 314.444 li
270.601 328.137 li
cp
.454902 .501961 .729412 rgb
f
276.399 323.059 mo
278.4 321.88 li
300.614 334.901 li
298.613 336.08 li
276.399 323.059 li
cp
.705882 .737255 .87451 rgb
f
303.3 335.17 mo
301.299 336.348 li
300.59 336.767 299.629 336.674 298.613 336.08 cv
300.614 334.901 li
301.629 335.496 302.591 335.587 303.3 335.17 cv
cp
.454902 .501961 .729412 rgb
f
gsave
303.3 335.17 mo
301.299 336.348 li
300.59 336.767 299.629 336.674 298.613 336.08 cv
300.614 334.901 li
301.629 335.496 302.591 335.587 303.3 335.17 cv
clp
300.964 335.087 mo
300.849 335.032 300.732 334.97 300.614 334.901 cv
298.613 336.08 li
298.731 336.149 298.847 336.212 298.963 336.266 cv
299.848 336.689 300.672 336.718 301.299 336.348 cv
303.3 335.17 li
302.673 335.539 301.849 335.51 300.964 335.087 cv
cp
.705882 .737255 .87451 rgb
f
grestore
304.369 337.037 mo
302.368 338.217 li
302.474 338.154 302.577 338.082 302.674 338.003 cv
303.684 337.188 304.105 335.598 303.835 333.64 cv
305.835 332.461 li
306.105 334.419 305.685 336.01 304.675 336.824 cv
304.578 336.903 304.474 336.974 304.369 337.037 cv
cp
.705882 .737255 .87451 rgb
f
gsave
304.369 337.037 mo
302.368 338.217 li
302.474 338.154 302.577 338.082 302.674 338.003 cv
303.684 337.188 304.105 335.598 303.835 333.64 cv
305.835 332.461 li
306.105 334.419 305.685 336.01 304.675 336.824 cv
304.578 336.903 304.474 336.974 304.369 337.037 cv
clp
305.891 332.974 mo
305.878 332.807 305.859 332.635 305.835 332.461 cv
303.835 333.64 li
303.858 333.814 303.877 333.986 303.89 334.153 cv
304.025 335.875 303.594 337.261 302.674 338.003 cv
302.577 338.082 302.474 338.154 302.368 338.217 cv
304.369 337.037 li
304.474 336.974 304.578 336.903 304.675 336.824 cv
305.595 336.082 306.026 334.696 305.891 332.974 cv
cp
f
grestore
273.79 298.472 mo
275.791 297.293 li
299.179 310.986 li
297.178 312.165 li
273.79 298.472 li
cp
.454902 .501961 .729412 rgb
f
302.367 320.269 mo
304.368 319.089 li
305.835 332.461 li
303.835 333.64 li
302.367 320.269 li
cp
.705882 .737255 .87451 rgb
f
297.178 312.165 mo
299.179 310.986 li
301.736 312.483 303.917 315.89 304.368 319.089 cv
302.367 320.269 li
301.916 317.069 299.735 313.662 297.178 312.165 cv
cp
f
gsave
297.178 312.165 mo
299.179 310.986 li
301.736 312.483 303.917 315.89 304.368 319.089 cv
302.367 320.269 li
301.916 317.069 299.735 313.662 297.178 312.165 cv
clp
297.178 312.165 mo
299.179 310.986 li
300.004 311.469 300.791 312.151 301.492 312.962 cv
299.491 314.141 li
298.79 313.331 298.004 312.649 297.178 312.165 cv
cp
.454902 .501961 .729412 rgb
f
299.491 314.141 mo
301.492 312.962 li
302.314 313.91 303.019 315.034 303.534 316.218 cv
301.534 317.397 li
301.018 316.213 300.313 315.09 299.491 314.141 cv
cp
.705882 .737255 .87451 rgb
f
301.534 317.397 mo
303.534 316.218 li
303.943 317.156 304.233 318.132 304.368 319.089 cv
302.367 320.269 li
302.232 319.311 301.943 318.335 301.534 317.397 cv
cp
f
grestore
297.178 312.165 mo
299.735 313.662 301.916 317.069 302.367 320.269 cv
303.835 333.64 li
304.105 335.598 303.684 337.188 302.674 338.003 cv
301.664 338.821 300.181 338.762 298.609 337.841 cv
276.395 324.819 li
276.399 323.059 li
298.613 336.08 li
299.737 336.738 300.796 336.78 301.518 336.197 cv
302.241 335.613 302.542 334.472 302.344 333.065 cv
300.876 319.694 li
300.549 317.416 298.995 314.991 297.173 313.925 cv
273.785 300.232 li
273.79 298.472 li
297.178 312.165 li
cp
.454902 .501961 .729412 rgb
f
247.212 311.202 mo
247.222 314.444 li
274.06 330.265 li
274.05 327.025 li
247.212 311.202 li
cp
.945098 .678431 0 rgb
f
247.212 311.202 mo
274.05 327.025 li
302.164 310.533 li
275.327 294.712 li
247.212 311.202 li
cp
.945098 .823529 .207843 rgb
f
278.471 292.172 mo
276.766 291.366 275.082 290.513 273.387 289.682 cv
270.115 288.079 266.777 286.589 263.228 285.739 cv
261.317 285.28 259.28 285.066 257.413 285.682 cv
253.104 287.099 253.036 291.99 254.934 295.487 cv
256.714 298.766 264.834 301.241 276.001 309.802 cv
276.981 310.553 277.945 311.325 278.95 312.042 cv
279.221 312.236 279.57 312.538 279.918 312.773 cv
280.759 306.266 281.386 299.758 281.957 293.16 cv
280.757 293.139 279.645 292.727 278.471 292.172 cv
cp
.196078 .164706 .211765 rgb
f
289.644 296.888 mo
288.096 295.066 285.601 294.267 283.233 294.391 cv
280.866 294.514 278.608 295.462 276.551 296.656 cv
275.409 297.319 274.302 298.067 273.065 298.52 cv
272.538 298.712 272.033 298.807 271.535 298.84 cv
271.509 305.462 271.42 312.001 271.118 318.555 cv
271.332 318.674 271.544 318.776 271.735 318.806 cv
272.164 318.873 272.789 318.497 273.184 318.325 cv
275.239 317.436 277.12 316.139 279.272 315.482 cv
279.613 315.379 279.958 315.292 280.308 315.226 cv
280.819 315.13 281.352 315.083 281.855 315.219 cv
282.141 315.296 282.408 315.43 282.672 315.564 cv
284.32 316.399 285.802 317.065 287.558 316.509 cv
297.532 313.352 293.506 301.435 289.644 296.888 cv
cp
.101961 .117647 .137255 rgb
f
288.178 305.693 mo
288.178 309.967 285.689 312.978 284.573 316.405 cv
285.532 316.731 286.495 316.846 287.558 316.509 cv
287.639 316.48 li
288.506 313.033 288.178 309.364 288.178 305.693 cv
cp
.196078 .164706 .211765 rgb
f
284.037 318.363 mo
283.418 318.962 282.735 319.497 281.989 319.924 cv
279.564 321.309 276.705 321.463 274.028 320.868 cv
272.58 320.546 271.179 320.022 269.841 319.383 cv
268.092 318.549 266.488 317.44 264.854 316.393 cv
253.021 308.809 244.725 307.028 242.681 303.911 cv
240.502 300.586 240.168 295.707 244.346 293.93 cv
246.156 293.159 248.204 293.2 250.145 293.495 cv
253.752 294.041 257.199 295.245 260.594 296.566 cv
262.35 297.251 264.098 297.958 265.865 298.617 cv
267.584 299.258 269.156 299.643 270.949 298.987 cv
272.186 298.533 273.293 297.786 274.435 297.123 cv
275.885 296.282 277.425 295.564 279.056 295.167 cv
279.864 294.97 280.358 295.09 281.138 295.347 cv
281.928 295.607 282.669 296.013 283.334 296.515 cv
288.381 300.322 289.891 312.685 284.037 318.363 cv
cp
f
290.542 293.866 mo
290.334 295.505 290.178 297.177 290.12 298.826 cv
290.198 297.168 290.337 295.513 290.542 293.866 cv
cp
.898039 .627451 .490196 rgb
f
292.337 295.473 mo
292.009 294.18 291.662 292.892 291.47 291.572 cv
291.13 289.233 292.306 281.097 292.666 279.775 cv
295.291 270.134 298.721 266.495 296.875 258.195 cv
296.364 255.897 293.414 252.782 285.347 255.5 cv
279.459 257.484 273.736 259.964 268.253 262.909 cv
266.261 263.979 265.245 265.152 264.83 267.453 cv
264.29 270.444 265.474 303.607 265.716 304.772 cv
267.453 313.077 288.548 315.945 293.815 306.316 cv
295.175 303.829 293.729 301.795 292.744 297.182 cv
292.622 296.609 292.481 296.041 292.337 295.473 cv
cp
.705882 .737255 .87451 rgb
f
289.043 258.603 mo
289.232 264.443 275.995 264.953 276.148 259.462 cv
276.359 251.808 276.821 250.931 280.405 249.746 cv
281.386 249.422 282.413 249.173 283.451 249.154 cv
287.234 249.088 287.308 249.709 287.619 251.029 cv
288.561 255.028 288.975 256.501 289.043 258.603 cv
cp
.945098 .709804 .6 rgb
f
288.586 255.182 mo
288.359 254.117 288.043 252.83 287.619 251.029 cv
287.308 249.709 287.234 249.088 283.451 249.154 cv
282.413 249.173 281.386 249.422 280.405 249.746 cv
277.023 250.864 276.421 251.715 276.186 258.242 cv
278.009 259.044 279.831 259.988 281.653 259.988 cv
284.672 259.478 287.049 257.667 288.586 255.182 cv
cp
f
270.784 237.286 mo
270.178 238.134 269.722 239.076 269.629 240.152 cv
269.424 242.549 270.516 244.931 270.15 247.32 cv
269.795 249.635 271.076 254.76 275.598 255.812 cv
277.885 256.344 282.27 255.28 283.655 254.499 cv
285.513 253.45 286.662 251.49 287.683 249.598 cv
296.052 234.083 276.604 229.13 270.784 237.286 cv
cp
f
289.409 233.177 mo
288.931 232.737 288.355 232.368 287.663 232.092 cv
287.453 232.009 287.23 231.933 287.075 231.767 cv
286.96 231.643 286.895 231.482 286.815 231.332 cv
286.457 230.664 285.797 230.217 285.12 229.888 cv
282.561 228.648 279.555 228.769 276.777 229.351 cv
275.839 229.548 274.902 229.797 274.047 230.235 cv
273.071 230.733 272.225 231.464 271.468 232.264 cv
270.063 233.75 268.419 236.021 268.638 238.204 cv
268.686 238.682 268.983 239.056 269.244 239.463 cv
269.433 239.759 269.699 239.995 269.932 240.258 cv
270.704 241.128 271.109 242.437 271.606 243.479 cv
271.821 243.93 272.058 244.406 272.485 244.658 cv
273.318 245.147 274.39 244.551 275.324 244.778 cv
275.87 244.91 276.319 245.318 276.625 245.794 cv
276.93 246.271 277.112 246.816 277.29 247.356 cv
277.57 248.202 277.643 248.93 277.802 249.78 cv
277.962 250.642 278.26 251.554 278.901 252.173 cv
280.337 253.562 282.924 253.318 284.653 252.814 cv
285.278 252.633 285.907 252.442 286.475 252.119 cv
287.787 251.374 288.631 250.022 289.417 248.723 cv
290.135 247.536 290.862 246.323 291.197 244.972 cv
291.387 244.211 291.446 243.422 291.505 242.639 cv
291.744 239.464 291.825 235.404 289.409 233.177 cv
cp
.196078 .164706 .211765 rgb
f
276.351 243.999 mo
278.135 243.877 278.588 246.122 277.364 247.857 cv
277.006 248.363 276.373 248.813 275.906 249.217 cv
272.709 251.977 271.906 248.99 272.922 248.05 cv
275.281 245.867 274.106 244.152 276.351 243.999 cv
cp
.945098 .709804 .6 rgb
f
275.811 247.411 mo
276.017 247.22 278.05 246.004 276.665 245.174 cv
276.282 244.945 275.854 245.285 275.795 245.697 cv
275.765 245.911 275.831 246.13 275.8 246.343 cv
275.781 246.47 275.728 246.589 275.663 246.697 cv
275.482 246.996 274.866 247.282 274.987 247.718 cv
275.093 248.104 275.694 247.52 275.811 247.411 cv
cp
.898039 .627451 .490196 rgb
f
272.03 273.419 mo
272.075 325.857 li
274.054 327.025 li
274.009 274.586 li
272.03 273.419 li
cp
.945098 .678431 0 rgb
f
274.009 274.586 mo
302.215 258.073 li
302.259 310.512 li
302.164 310.567 li
302.173 313.774 li
274.06 330.265 li
274.05 327.024 li
274.009 274.586 li
cp
f
272.03 273.419 mo
274.009 274.586 li
302.215 258.073 li
300.234 256.906 li
272.03 273.419 li
cp
.945098 .823529 .207843 rgb
f
239.03 266.186 mo
238.794 266.048 238.599 265.945 238.602 265.968 cv
238.729 266.844 238.856 267.72 238.983 268.595 cv
239.026 268.891 238.971 269.312 238.673 269.319 cv
238.519 269.323 238.396 269.198 238.296 269.081 cv
237.62 268.287 237.057 267.397 236.628 266.447 cv
236.399 265.939 236.132 265.345 235.589 265.22 cv
234.982 265.08 234.447 265.615 234.054 266.099 cv
233.439 266.853 232.855 267.711 233.09 268.727 cv
233.331 269.766 234.014 270.615 234.168 271.725 cv
233.05 271.169 232.627 270.342 232.14 269.257 cv
232.056 269.069 231.917 268.839 231.716 268.879 cv
231.597 268.903 231.517 269.024 231.5 269.144 cv
231.484 269.265 231.518 269.385 231.552 269.502 cv
231.896 270.697 232.385 271.537 233.123 272.543 cv
233.993 273.729 234.849 274.815 236.1 275.646 cv
236.618 275.991 239.088 277.356 240.315 278.44 cv
242.531 280.399 240.424 274.671 241.361 273.764 cv
241.579 273.553 243.043 274.935 243.096 274.599 cv
243.155 274.229 241.668 272.07 241.523 271.73 cv
241.029 270.568 240.761 269.29 240.361 268.093 cv
240.205 267.629 240.125 267.12 239.817 266.716 cv
239.752 266.631 239.354 266.375 239.03 266.186 cv
cp
.945098 .709804 .6 rgb
f
238.133 277.527 mo
238.062 276.974 242.003 271.928 243.429 273.717 cv
245.438 276.237 254.322 279.015 255.796 278.256 cv
258.757 276.73 259.533 274.547 260.76 271.592 cv
261.119 270.726 265.634 259.433 272.131 263.275 cv
272.398 263.433 272.688 263.549 272.921 263.757 cv
278.406 268.646 271.981 275.739 269.081 280.044 cv
267.818 281.917 263.108 286.427 259.274 287.761 cv
255.561 289.052 250.421 288.107 245.408 284.398 cv
243.594 283.056 238.385 279.507 238.133 277.527 cv
cp
.807843 .827451 .909804 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (2002.i039.018.P.m004.c33.remote management distant work isometric icons-15.eps)
%%CreationDate: 3/24/2021 11:55 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj26BfC8Z_Y&"#(gd*')=4c#R8leAH&5ZV$0dI2rZC+/%q=+=UpRGDJSWKZcFgBern(WCcF]Fu\WDf(/pX8_0X]2H/V!EMK
%,Wt?OM)F9J-fIYlB?_0OoB.4imQE'B#-E,UZh7e*)V!IGc$D*X[5.DI^"M+1A:>5-M7pb0Hr<MJ$S%G<pI)Sj-sj_OW?$/N03<aQ
%]icqo'0PNX7dj<ir43&M_#X8BC)<d0<G4E#g20q$N325*I%$'j$*EJqqJ[9VP[!NeTj=hQ4t^?se.1(t*sIXUrW!/W8@\.?_2!k`
%E*ha-g3V%4[hntr?;BDi.uF3/[^=Og*%#^Vj-W@:jiXgD5&2eMYM8I@DtlCcGR:D53B5+>*(5#/:4b7rR$\]FCD1+!P$4Zu@'e^g
%(7J=,i=s1Ia$I+1.C91O>#&1__<8Q/Dss=l"X'0"lqo^`3"5/!DN`1rk;tFj.J.8U9R=Xict/-n><2JmOa%WU8jUp&5LjQlQ2^k7
%;hb95VYRGp$(A&5jYeZ^X#=;uDQd@R.Y*iQlhO.=YsJRDl<i$#\Bqkog;(Z"8dFUhOcYV%lt**+>PJdQQb$dlrC0UFY.mgAonZ#)
%EM"RKP5#?M8X=<9l<3\p?S713h2[DGi"1'NJHS+9cJ<E)0?U[3+98("&SAQLBsV(01:852WW,h7,\?':^AYfL/cadH#;s,BQ^h[]
%,3%Q,pPs4\>cj6i=-3hAr%ee6;$35ce1]%Dh*9D%0LVgIJ5HcR0C/*o\V:4dq8Z/,R63X2FPt'7c$H:m;`h2_q8ZC5<'La'YcMGu
%d%;p<QIMQ#^WAgQYrq/s&4=eMh#VV5Y4aHGe/OO$Fh]m\*`NKS68P<!#RB-:ItLN(!*4;7lkm+e`YoMHgB`[R22^\J2u\UCOcSKq
%[9Ke>)a^qIRdKS:jq[g);lOl'[];?N_;E)=&Wa)HG4Dkf9[ijA7stI^eXI].V8WAd(\e)f5b4H*DAJ,F4?"AQT[:CUK+ZU*XUqc6
%cS!V,OLd"R1,FVVV0pZA1bQtj7(V&c>pbTtoh%4?JBu-$U7\EGnBG(ZJqD^XmFO0Wf4Qr]qBlCTVr*p%ftt3&blf-6dOZ.g\Pa:^
%FGO1_luVg4!&Coc5)[C=7mF"doh)bp%7cJf*.T<#Mj<5a8#mZK;KPDt[CAL^lMW-LPA.`CQ@AQZ8@J,1%K(mt;5`1Z]!>JB2UEC;
%**j<uJ\mN9H.3jtSUsRog8q]i5QC3ckuuT64`(s,AMAr[M5?QTpOrK$U$7mlef-gd*fN&C;_ZQDOY6V.a+lnZf_Y3#'Jg71+(64i
%*a_(0<*DF&o46h%_37[VduJ`ZGY$Qco8g8FVXQ9aGZqm-iUPmC!VB/7SV8Er:HmfL>^-N:*]t,X"qT#cG\"h?JDU>?_CHN%af6]n
%:Hn*[j(8T[*^!Cb9Ka@:!KU1jN:9rcl4N\col0Rpp%\$lZ>fnO%L1+'H0S9/&,pOjW1Z=:.9mq=0aAc:_!,Ep0lXB#+>BRfc?#]a
%k$0BHVI:p!iP7e`'jO:SHpC;)jJ=@54B+(LP^r&+bl7DC/3)fS^'dT.550d""8^J1+sQ@9;bkJ0Od)3,MGDSr-DRMjP].A=Nqsh_
%$nKni+$S+869X*d9Ki0Gd6lFD_W0R,(]hkA!/HB&XMRq?4g5cW5K'=I#Jk'Bi%XqY(jFqY4GW"Vah`Tt6]qPhr:pRh&K`&^"sAa&
%!XVfSj/_t8&r/Ga*hJl0"@mV9AckH2J0n?$l5HhU4KNg3"-6*.8alo!TB#+naT4<+$EM7:.3F$b?s<WV)*HCR:'Rp.:'"3Y?KU1f
%ap^$]d)q^M,:!NZ+Z_bg^+15gLqLe0FYc9m>`K?e(-m'JaG(9-5t!sh_t,tqS<3jO89#_r7</Dk_giF4_Jki'/C/@P:Dj_='J'N8
%N&,'Sc/rM!\[W0/R*3MFac(Mnp43h)".n#`a,`Ck<gpOBRVjTd"lTT*!6l'J5^W\#T`_6hj&6bhS"sLP0;87<'!rXsB.h,b0EQtC
%VuM'nF:2aE+>/>`V_/P)28LgH=Ut@h6Sdpg"CDq/@8tJ06\m6+d09IF0lRTdCtDWgm68HN]WTcl<H)Y*X:ZRg('_/>R004SX^\_2
%\ORenFf^i_W*uNYXW"(1nccE/"P%=M!QID`bNGCc$hEcJ5_nKH:4Q%6?q!naB61Ug54=#V!8X+LSXGfeVkDLXJpcYBcTh!*I]TJu
%)!+&V:b=K"Q@0=UN)@bN#UHE]!FhK!Oj/FGC;nu'QD5oIe:LXL3=AK(PVQhnkp`H^o3_\aAb[Mf]1b8`Yil,e&9fS==UqZ)%%[ln
%!(RqpH%d8u+,qG%,K*L66KJ((T3jLN$Tal1XTOgsH8Z6+3ToI/a!IDYR4COdVEo@f5b5N[eic?t*[:Ob+M`eNpn0e@P[-[QJA[!T
%?6[T/,1eU]M*/I9OTD##c]a8L=oH/6qR9/EPE%c)T#ZmSZKDhrJJ%Fe]]W^c7pGtS7\L^L7SoR>CB0@ilS3iOVXM+Lqst>0q"i7l
%!2BdjM$NI7$VSWp?t@(W9.Q>u.L1\WVZiS*YSN7>;mOP+8L^Q*.!L=o8&SC[8BsO))CGo]-OmBCK9Q\(2?n3bJHWQ7pq/A=).g1&
%OAl5nb<U)2OC&e0OU&:Z"c6!,>l,Z"J5O[V%()i9HIE&Wj?\i=6)1<ma,o3bF3k=0oE,+GiIL6a"-&EDpFQPdS5cX!;sk"(.d3bF
%8sPU7*>E4X'5H<c#W;HQV2P.-(Z%DM6X=pEc()Waro,[u4FSOr(^b]m$kK_45<Fl`SAGANMJmf+D/#!$UJ)Z?"(Mmn'5?d5?B3a`
%J+`ZaRS.Rl\\&\@kpT$C@^!&t4iT6oNF`s5GU?IJQqDJ(PTMg99]AHR,]fV%cl#;/8b4JiPs1R-D(K+GS"%UeL(hLo)^?asfMU]c
%.\K+(30+IRD!79HKrITH@hfZVW)uKX7r9A74Fk\!%#NQZ8Yc/Y5q'7#&CF`p$naCa2'+=bnHT6#MaJ&#Kh!e<3dcS%Pk$[fb%&[F
%1!XKopcg\sBIpNacpe)eE=+s!_rrSfaMBQ&#Yi_Yfq<%)&G\!]fRe>r"XqNF8!!u+7=`!)C)*Dk;CY_lR4+>P$3\CiMMu9!:njr]
%N%r^^5kdMn4J7n";.cqg&#rk<$-kjE1#h?3EdAKZ*KQY&Zl=eo`h;,nZl=L<UX*iE$-W]Xm`(hZnml5Tca8Zoi=S=>%P).qDIr6%
%q%@Q"N@D>+>FT;AN^[W!6NaA_VDamsChgkEVGe@.@m7:$eWF>uG!n-d%B27^+<;qhe8_9BWnOPK@F_5T)cpl_Q%:e><Z>0uZY>Ub
%;#(1.5<!ihSKgu,!Lk%lUP>L3(pDf3N".\=R9hZVRWk,B*FM@s(fAY(2frd=)-n[.<@3jD1`i)3f4-LIe63L^$e<Y]5cac\!u\F\
%%5r:(,fI]k2T2CX;GU!jp/CA-p=nDQomRmu4)eu\FnCGZDk?+7Pr<NhY(sb>2W1dJHb1rsV*P!N/JiDB[*\_*k+g2>dbiSI%6e#I
%[+ijr=f3:IQ4p=G1"C(UqYLs[bEYs]W2Ug`Z+^<@5Pu)mC&bsg/pt/3R(g&"=?hC'CDX[T^(i+<e*D@ke@lpN%D</"$Pm.HX\L`-
%QU1H,Z5j#cgMp-L_u]#h(i]C9h&uWO!Q'o>JWSSG9iW*uKi<1X.-4>8=Kp8MJ>oToiCI8%GaQdAmSYnc0nATS]c%EGC"%q+:@kPc
%$#7Fe4Eg@$A'ko!4qW=dGW9H/l@-!Dp_LdkEjYGV1eZ8*j2!c,["<Z]pt>a``mHSjr?hbRXa\bP[u8-tD?Rb@lA*>eE<t1FHW%YQ
%G`;s0)72Gi3*+aVN2^WJXk=`&k4)&!3$+tS,&86Zq2#XdCB_]Y=`4GCH7/tp\m;5'bK@5$]!9:bA$8H)E`DKaMnr=tq@j1/=9)'#
%?;s3^99km_&=;:]$K\@J?bgtG3)=?C6Fj&tAeE0[(C7>[b0`X+pV.<_SMpofW)R*SbH6$rk$miJ$jLc-Ot2GmD@t&D@_"oY[ts,]
%Z/"-TEcdm^\QHYk9J!YBjrg+N#K68TF6VUe:cZ*<Pj7.Uo`j5'`]Go,K3#UK%DJ+XnbQ@*B!hGG%AsQiJ$%Co#W-1Zc7hmK_d;r`
%6Dr?`(M`3ncqV",*(+sCER];KJpKQi$urY#BnC(_Sp3rBPh47->=!Uh1sE2*mjm%&;T^NR4lXlMU:RbpqrR=WV8m?MW5QdeRXUI[
%\JQV)X\SK#:^iAAKm3UjFC1u"T)o+u*nfujPFJ2o#Et#3@PAc%h5M*WR<l!c0%AlGFo@S^_<8`A0_]dd?41WR@/#p(%62q+j2=41
%Zq&$:'+9aJO,"mWNs3Nf0u3Qsi]b@J]j,@A`_-Z@rk;q`),]3II`"i?4`e(YE5R@EeF*gap'gr0I@T!Djd7q8&AqAWMBaEK',6TH
%VX8+8S38R9;sc8GH#[6]VOJ(5&lCeGd)j+#BU7D>eY!pq+*OM4isdQ]e6BoL\6hFngf%E_Hb(nk5DB#LZ`Q1.oZg''a'R-*#S<1U
%l0ZD*[/$N<DdC>Vb3)k%K'oAUB,EH=YOZ*VTUGM\Ah9*=Gu?H+F.0)[/*UXWr"ES8DK0Q(*mSW4aV\[AnPYZJ*/rO1P9P:ON*l64
%B6!']Q"7ja@:o4Dj3Zg&f0TBoJ$\!J>iJh\`%Y(f(ksTkf[Qt,Gu.h^km5kI_Qm!Es&&DB&%/5)+PnjHN+PSo-ZD]<G7"$Q=2E2@
%_>%-&2=7[jUO[Om:\Vp!Jet?^Vsea-=e+\eAdhHD?tRCIbkM>F_s1I#dLu;!_M$5]`*o\1YHsT(ds2^]X_((-`;jN8[lP"/m%@oB
%$aj/73=78$.r=6^W*Oa];XgMlCp)S6^?_srf\0lZX[]-`%.JVFpBlnJ1ca(f$l<ESD'gHtmWZu)Y5RYZr&Pm,okPP.e97?sNB$Sh
%.Rm0MG&5Y]^.*+*3\H&?JbMV_M<WT0ER&"<il*"EG\lZA5"8RcG,.;+0_9b<c?[WCV"8W''!GcB1-'s+TP(kXa![l_%Ybhcn%;f,
%`hA+O2CUTmQ1'DK_n<6\D:'smA#]pmF(4JN".W8Z)hW798V'_ff7H>JqYjrt;V\=n.FX<!SJ4o.H7aje.hmo4C1fs%7hhn8kD@/J
%0j*iP^SWU.5(i8^.8XJ5D,EpYa^6M'`Y5D^s.k0]"tIA!"27[4gb+)7"^9Q$U6.m<<j'FTSCQN)JiU?.D+uW4;5PP!.F(j<8fV5N
%-%3%s7%'qMCb3l#G$0lIo@488U+F#9E&MK/MXsf*&dOe,0g.=!M\<q8S<7!>=A1UN[4$*)4H&f1M\68^74lZV(?N<82N(b'.>r>g
%'VNZ_/P7RR3;#1ESn_-^!&H,HoqE5`RV+bu[4&;)D!IjGSn_-^!&H-'s!r;-B!J3[(+jGI?'D)GCgWbMX28X<M:oM2@Wi%I>?<Q$
%(!P5,KrLWlXL])-oG;.rB$l(HanRH*qO.,4ATRV-b;[(FAtdgoU=]0,YJicC6E`!5g-W!fKO2hZTk32cc'Q$X+AiqYD5#MZ\$ar,
%=dppSD5#Jq>4$fCX$q5c:+*9\4`)U(JV'NM=.ZB#^kEW]>`?TfN+/Gf+[uholJWWC,Zp!,4q7-mX;\fDhar*'TH"HaIg;6k9&[hT
%00Th)&V(YS/JJ:Yc(J5^HA$[s/oR/q$U`]/f/LphN?RCe.6'!4L4:Rc%s]'ZTq./H<2AuY5\i7H3gB/B/M9Cn>__f"O,B!<0,?L?
%$j8/.'?XiBHG\J`:;UT3YEOM:Do1u4hbEkgnU$:M9J-CWac.t&jr41'U#?.'Y4M3iKkI[)BRFELpu?qs^KAK?+h.,oIEuKiO3#A+
%Qtb/^`HnphDaAcXh\i;hISue4;A!FjF>Km"@V!BZilK6l"N;WU_X_FYS38R9'6KdT^bDjSW<WWG]'1nbDm'BM3]S#ac#W]e)RSO,
%O;YEcZ!HCh[uE=&.PkW\J(*M;F($>,E?jIt[%3UoTZ'L;`W#>mmJm1F/,9tX^XK3+(]1t*rSPTnn)DME(Akk)rSPTnmsjI_iXRY^
%2Ih&rM`ot:T'p.7GHp>Cf^kYs?%u8Qr4LJc1A)Q=#IQNRG3t8\1#%b^;Q5-f%q;A_ES6'VCIPmd1BrO202*p+MQ7VT@btYQdsGP1
%6O^l^BqBsh'Gmk-mSg:cVVNF6nX^u#'H<cl59[JVOA1"TCeh]CFcdhOAB5N(Z<tdu0jN@"RVX*['2OhV3+_]U)$I?An.L@J:lsds
%qW>8-]b7\2RmCbphCR02mV=KHB9TiG-Up!MW5)apZY,E7'D!kf%%%D%PcLAKYV-s^OY#7._J,HT=X>88;+FBg2C5C+NEr<\B9MXJ
%)9m4lAW_A-lJt=5&JW&sD#Ul,!u%\^Lr"3<nf&i`YJ2jC@V&T0qmumf`f0ub^9U;B/.sVNKmsnqQUTnFOa("S?5ABa3D-rO1lG,A
%Qn43=^FU!N;]L?@&hc18]M)'Nc;1"We0L-99Y`I5)5K:+BOZFNdbZCoZ:Gj-;DZSkAJ9&9#ak>/-K8:[0^Y3$`1b*.ZAJT(F#L4g
%9uO6>Rss\u)o'O*6G@dCTMQ\uDdO@%.5ia+DB'HO0eJ@E_DqPKE,4_JA:0"b1U_:C"4MYR^iT[i/oG$"gqGTo2GNS/*aKORp$[el
%WVKo3UaX6"</X]N'DDl`hl6NFRZNq%c5u#(,"oh\:/?l#hihQP3&&;G[T1jl]#A1EV7_8+h?qsb%F(O[;g$?RbjR&!rtf0qIm`&f
%$jNSg1@t?Rfo$,QmNOKS3qpX8kkB*H<o')+2^s+:H?"JG%-!O<KcMNEcC2pcJ.osFS=hq\%u<1Ti<9+qDB<;-g%,/6*eQ-:(c)`^
%/FjWVklAmeaCE/>@?JTtg.6G=A:BZ]=QD36NA?DS`ZgHu,C']Vd+X1U[8i.[C`_TBo4F]K/lZ0.bAk\1om:0\'+R5=OG^f_RV-B=
%JuNmmq`qf4Z&Tbn4&623-Q1tDQa9"/a>\aTSY0#B',^B7T+l+LqGFl[/e1PCp>e<>hf61>Mf(\k-RM_GnoZa0b>K<f(,n@2#''Jm
%)KLuq^;HaPO(5]b;m%+dS+UM9HDk_FJn,?EITkP(1kn2PH_5bJ;_aX55/hO3(3_&6">+q$dc?QU2n:j1G9q]u43b*,"ZU0RPCe_I
%:Z;N8'0NuE.nl=m<:.p?GqBZ*j13'Mk,I8h(,.OCn.c1q.51FQ"2a[HHZ`'Tl*-BAM[bA#gJDREF3A044!@&ob7#`WSOFlS-8Y0?
%?Lq7+Z\[]YZ/"E:AeE9>U:E]Lf+6+MRTi1$rR"jYkA_*YbsO<HLZMr!/ln@UGV02"Mf<PGc7QoD76%a^k8*%3S;20%T#/$?^s#J3
%\)tt%5Sjrekn!#RlLiRoZOk18/`O<dM!&6##r?rL_u+m"_sb4!@>_mhQ*5b.q0OD'pL>iDQ'fC7,pioQr$\aUF$[fVP0k"`=7m@\
%Dk'f7`N.7:DQ5W&`H(jr7]\F[X8Se+-VJ=Q9oACKIZO-FaAGWUAjq[LaETKi7<=gOr-&t79RW'[Y.uU$K*c;#QFb?s1LI_1m_:F$
%HjsYa?;obE*@FJCIq)@bp\ckuiSBCe@dpd&=sOG_rsP$B0D7>@*>Jsegpis4PCb8R]hGKU4>.D$\7"uQ?NdSt"\.j^V4AL9'`X)7
%kPV%f*oe<<TE9V^9Qs#':/"*&1"8eRT5q=QCO7l(3@T3;l']>X4MT'fb*J<RYT%LJG4g&36n*[mA(kSDS""VOBAj_%[:aHRn)U#W
%mi[@KD#qC;N-,#`M8:"GkhFYMrbg5$_2SH]^9V^8(/E7qFG^htd4\kJOceUjG)GE7Kg0JZau=>[(/E4#g&5h\'>oo=`K?Ie#ms<6
%DtIdHT,nj)ah\OD%`>Hbl%-[?DA\,Y=7j9n-O3#4=`.SIK32Jg0N/`BIR88TXlI&/lW20qK0jis#e;XL;f#R5h)NDOb0t5Jj3V4C
%*#HWb^C%HIhE](>-k"chqmLJ[1WYJ-)k9s,kP+2#fqHH)?,]KX`#RXm1LK%R4dY(![^]aHH)@ol-.1AgHY1oCS+2DnWWa4l`k;R4
%Tu5]>A"H!$Ke;>Y<PQNc0ACI^,\u\)el-h*252@5L:)[qcEfH%etuYGbkED*oA]HArY':8PbFM[,@bR30$.4RiIar)/K);Vb;9fM
%pA^oZY`k=N)89WjmV;(e%DU0'*m"lhc`'tP\<VRI3hFOLJ7lNN+O8SZc_NXN1Tm2r+c:9.E7UgujrN`4;qQ$7K4_jQS7)>+g*k`/
%SAh2i9OoMB,0$L=!r,LFoOC\c$#>`PVcGpM8Mr8!9U6A!-Sb(+p2n,_P@cUprfpW4U;\9*`5*\7a3?rQFWT_8'W-uTk:ZFIj+@P7
%TCo^^j#Id%ZmO434m>E#@h<c^a]kcC=[Y7LQ<tFSQG9?9ni*]/L0oOS0=Bh$Vn#t[r%]PJ`j"_"A\E6eUSp8/ekCEO\1#t'TD\N*
%bD,jelH]qi*VahcI?Osg-rm:>"c7?-e%/6>'l&G\TUFGNQ=,^45"t091PJGtI%fr"l$?U<=4Z?f:@WA?a6Up*Ufe6/dCYq+!8<P-
%+U#\`\84cm#YhghU]-;bdIfi@Ieg_W/CePYiJ$2A&B>TpqY-HT$Y=?-<NF^a7(<:Xk9Y)((0OI)hh&)]]!;I0>,hCq=\G1+6FiE/
%?1NaC&;YJXB6E]Z8*rY5lK5:hR4V]XQ&@e(2=">[ka.,%UU&c6SQG^<1#Ska4q*<k@*Ol2<-L0tM%kBOrUK%m:?";3p''0a")/Eq
%M%:]!7-RMBn.7g;s-@VOPeR>loMT5$:cMm(Pg75D6(usQ#ZnSMe4O4i0cC6R68&Ti%LA2nGD@$Lo$LiUlEsNfg`?Ydn&rJ%-'6\B
%K/r.a"pn'V]l""aDaA6TAA0f+#Q?SC&WS^B*&0Z3_)o3BK45'%UHc+m1cRnVb([-,.,0H]>q"H]ZMj15Q8f7`]25pDA\1dI$YB4)
%Q*'+hTkbIUG+i[f\osc_J"NnB!:>J8V>W-KClc`h7]!/%S]&6S%"0fET=4u?6%2B4jq*%gabA';Vg`Uk!P"<,j)SlP082'tAj\E\
%ZD"kGUB^jcM9aXDOZ`:2K_@^*'"$DE#34VmrjnF[*5_TTG#OYSIp?"kGl&"\Y4mQ5s#;D:_U?khqVDGJEEm;p'Yf3-1,#NNcn[/c
%%)+*\2@H@%!(]-H?>(-.'?,:X8&AJj9\_cqSA)cbV:.-PLfa6`#O*ib6Zh.#94/S*dDJo7WMR6)b8gl?d2sG.W1MNi37RtdmQL6N
%%\(9c3a47\Wdp%ETafYgGIhZ2OQH#YSt/hoLhsC-piuS2-$0X+/cVk[IaK^aFr0V<NnbYhGIhn2eiNb1BXTh>D@JsGr*X??<OeJu
%n"2Cs.e%W%DkKJ49"fHaN4n=ZXi,BgSI,ACb-_j5Gl.^Lckgrh-tp@pd)5o@gAP).`Qoc?j9GOqds.f>@r5X*abW=KM)3#nQ,:PM
%phBj,:'\Z]SAe7(?*@"SqYRBG]$W"#X,&YJj=icqrYKTr2#c:tJ%_HL''7^?pF5%h):7HH9"?oGC>9Jo9R73='C1E>TeZ];n)`!m
%mheqQ0g2F$I1r6W,]b7P$f>M,k?E>`;JasaJ<7o!G9&CR^9O#NkVZ$?<,9G8?;bh$)[k<NMa#WGIS:&UY0HJGL$,Po#%qF)3,e7E
%b892SD:N*u^GIfsKi4;L]JtmBf'.-)^tqf)3iYKX:]c^D(G*T+l,DF,RC#O:Sr<5A9o]t=F<q2baGXs\K=fp&SloK:a6%"iL"a"&
%l_sa-2>Kf1\8L<!)75"X[ifZ1r7t-/9'(6TXB[3`IrqSF"%)0)k6'"4VifU`e1Ne9M]d"9Dfcm5`".2\WSFI"%YIfqdP6$_&D0;/
%j=;?65qQd8e[-!P#h<u_TMmq$@_^B0FP;Sh6E;+`bQ"MW@Upen,3sMg05+XOHf^]f&m!8A)Wdd&"K&/#Y;GYC\=KTr.$_A7djV@7
%>$(Z>KhAo+:Pr2JhX6Oi[?F.(g@]F,62qK'M3^(5=1*AEWX`.AB\#O+%-^t#YRBh@EJB>?14G3gIr@R!-o?GgX`CgJ.7>l.#UM7e
%#!Ysu[a45mAgsFf#rb.Xb`EQ2UgG(%[P\Cd]Qt<Y=>%G:;.^e'T]s60o@WP8>o5:%@P9IiH0iTaGfC6K%.cu!L[B9P($FV',:^sO
%+!..@'`FEPO.TJ<B8+K:d-+G4,M;fq_ig4*"nc+q*DT`/S7d%sd"aYMHGo@/hEFe)68+Bu_M#j&d9[Cn!aC")?bT3j=)Un4PF'-N
%3IE7cfg.+)p9e);XZ3KVk(jG'?.*;r=-Pbgm-I9/%>s@`@*a?%H1#%N?Z4oLs#odMkG`&TnbVoR2Xr!d0jrco_hGOG2t7thJmpgW
%D6/%.Yu<.VIn,6L.T.X6*\+FL<N5Y06*l-qF=ZgSb8<B\1mO`;I=oXl7=^m3Fk>ea9#:YIA3>7HNo)>@<6&`P/Pr%@nI$mKaph`K
%9L\jgm!+'u+7P.Y*-E/*9Ilf[AJ4kU*_Ub0:Qf6F;0eG\a`f3L]=p3i'6t3S*Qj\]/eT<)=eQ;."."Q$::?u_*pcXUI<Y"r63U(Q
%:[_tXA&JjP4U*X66n@A&OD(VAI>\aWO_/+'&D1'T!ntc7DX]6V=K.OYfH(%ZNBl$&49_R*W['RuGC,]7:FlIN8&U/nL8M_8/B_/V
%oE_OT^5K@))Ito6J_UJ$5G0NfF=l"rjTNA(kiNl9UDpXijLr!q$iFqnr@TdOasb9#m!s@af1.eKruG&=!Tuag!4;9dOrfAYhT6cX
%Fgq)P[?>MAqON3ZkJJSP0[..b/CZ'BQL^G5HQW*d)pb@I(h^.Qjf[.G3[[e-.2b(b87VL.C:0i7Z!QQX:Be9QKj<#J-_g1.7a.OF
%aV^"Y3)nq:^AEX0O*ZK+):n2bbICFBWqpB6CAj.CX6C\=lLso,moS([**FObHu*6[ETkh\`l+534<@qErJ"]RGD_541L`So`[LmL
%_Kn.A?N3nf9<(8bQ&9^Mm!)fXpV1-`Joc2LoVmQD^>O:1dlXF.'D-OU("Cc2aO+9t=67F>@-22a*`upGC#CGa#UGmJFG>tV]RI:f
%40L"U(2Otb6X:=qWGteK8tM`]WLoe1F[EulX[Dte$dGa'[Jn&tF&m0[$g9BOdo+f/pTCCB$:'_(9@sup8@?\bbTU6oKnbE)%@X<I
%Xs?Yd/4G_`^k9\Hm\X>:*Zre=;6#5EXjl@6U/;gjWnnBSp)Ja+E6h4m;2Bs%AmXe+paeu@;B38;PKT-#8M5ekm)d\e2!GM4,3W14
%!eVjNi3gMl%5)kg#e<N^Npb_^/4C26A4,>)rHl&"#oF+.@juEk,EZhpPLUYiEVP!b8%i9%UY(XGiOsOK3+B,'\JBDEE;fa<Z%D8<
%!qJ'd>RFZrMcqt8-_ke=R7TK#*)lO3T9h(g1pL)N/Zh[clHW^^>R.gf9NHN<i.50kobrq*NJX$"E+%;E`B$pDB-TGr9?DJnrOs[(
%L\3b7Rt"RZrmM>G#Bj#U?-d0d\3Wi:OW;VsVN\+aE1N]YeFeaYBOa,Q)ZsfTfVfL6N6k\<;mFmlaii&1?*<fFZ%bLM"KN4T1!j>i
%NWMJ6Xe:C\j[dXTh-+7KkqE<Bh6[BI#f_\7_"$f4].63>_M4Ls;#9DFp$&1_L3Qt$@^Fo.f*>TL13b>0qDBMjTO[0(@.p\KClKWH
%Y<NW(2)0EdUMu4Y*&TT.r2.P-@eB)k,Y$t\8d<DbH**Vg<Q8]:h5SdaYLc7D54$ndS:r`_%AHl2_!S!d#'qLGE"^Q:*C]U$Z5-[Z
%0\nIp(C%C:TGk^8fF^eQD9QZ.(WS%Z!"RS$d'7^rJ06!PKe;X+ZnZi(KCsBW0lXe>DIS^qs1=E[9an&`%I2NWmXDJc>q`@'*R`?&
%a%2M0&8f$"FTu\V="nloB>og.Tf6!nd^.dYNm]ne7r&h7<KC$jKX1bD=sb?f*Rg_TQoeW&@uPD/+JN_l0JBH\H)F[_`EBd98Pc]_
%a4.,-!Aj6*]8_e0MUeZK[F@6bRSN511>MO_?gGrRpV#-k7NKE5A:RDlR<>j_6Pa(9nAX[ROZlsXB>&^2#)9elGfoaK$,K.!7aNO[
%pHP`qSNM5&=a7RTgq1>9QJQLCX^5mMe8@Fqhca<3O=;!/Xh4N(ZQ-`dZ2OO`j$!6LA,!/3HeZe?;<2e/:Yp.A^#M)Sm$I(XWcNB2
%o2G5=p=<uR[G?-pemY$7c.uSugZs,HIIZ[Sme.D*N\]]dO,M\%o"i;Q\TUX7?p^"#hqJ_2T=2(55,RTA[FJ6a^=u9I*47G$*qMIa
%I$WVP8Um^%3.YeLkK`\*JYV$9rjd:FlGHu.j%T$gn6)Ob2El"s?0+:gDmY\XQ0deL:4DGAko?Qtpr\(Mh="n#5G![QA\7MVj#hbC
%c<Q8$D@]3#hp3(oh65R;:EH%iJRHm-bbp@pFnkA'fBc7Hk>ln'I^tq/>.[_^Mg/GSF^Q-fbL0!;=(JM#17.WTF";CZ]>'MX\b^S_
%47hBQ4qi#Z5(<,$cK/ZC=Lc6*at($oh+Ko=l`:mjZ[DN=7etO);S$o;ab."`b$U^hma;!:#f-$)k4;4VVW""_5&R95`<XqY7sg`k
%UAEK:Z4Q?(F"c&pm^OcK)f@WG1&JWV"u%DG"QI@@8fQm9H3&igmQF`W>7K!qEDY1>]\C-/S_;]-F-9c#)'7q^mX3r:*fE_je&p72
%dYA9PG3>V=pMoRAJFo3n]Rsbj^eaa+)PZM:qJ)G%)$YLfg3)23GP8?.Krt7J>:]033"<n=5,hCY(RW3&]=gS^+"NED>NWDsPM?Q%
%5I6gUX@FN(a:<1Y>A*'fj4l-+5.PoK#!.%:[9<@snroe[\7-:n5L&OOcn#&W>f+PL'&9<RLY+,MWf>h,B298RZU*m`jmW#3@d5rM
%AL2];ro.^r:j?q<c-K_2ndk0%I@]*<U^sco8*-r/?U&F5^bfd%meBa+oK=k@c^hWtDpn8pC-S?hEcRTtJ)T^_kLFnqq98Y%(NB0E
%ZOhngH?V]$oX4N>[D2V.76\=gHD.TRENMY0=eOSA^05gQVXRT<oU*h=p?$AlG3\jJ]5o"&53,0e@>XN_H-6\?";8)6_;dhlpSE3Q
%jR^rdXHW["gJ`L(om&'["Whs!\rs5nTDIg&Mqf_#/MT*Z4Lo9N'V5l).&rm-5#%S3G89"OXY_q#kEjJ$,ZE">nU%QhpX>F78M<PX
%kKjb19D9CKR7i!RQ!;p9k.CNuEq$67Pg*(.KT*JOdT*sk^ti/=>[6Dp@^Gk+0I>S>PC>P44KH-Z)>s3WgtM%]5DUli<U_17e"i#u
%8h6QN*rFX_m^oMclW%48rLU_:k9)lIifL'[mlL?Q&+[mKQ-F]B]dG=kT74c^<*diNY2X^jQXqAcfCn)Mh32rQ]ie@AB%K7+*i?]Z
%9@\-\p84EB^3k8D`d"a$%a`;!emFU<rAF*gFa/B2!+,PI5L!8Q09,7%cCR7F`aQRR9<AhJDr*[a)BEF7naY8TDdPVQMu*Eop5E=L
%UgDq/[X.i,:E:L+W5pWW[4S62\on+Pl#s!iGIGq$99!t@l`%K1;>'Ag*u:Sa!S\5ah6(hMaXo[PHIB2`I@h]N0=Ab&/20&pej4ak
%g"^;4KDmL[@;32Lq2dZ6r&eIQoi%Kl\"7/od,jj<cj.2We*d+YC$MX<9Y6pscD]3bV7PJ6DVWhhM[JbG]<*IXR@4[?$?r$'m17ss
%Mkt.ur[F\7(N([uIs_1_OUo4?I10tHm:_u9O]HDY1srH0oB(t-Mi<)U$iII"+6]'8lZNIqO<1NdLON#/iO:ICh8OJRQtaD@@^"u\
%C78nGIuMJ>_`+/oQ*P!^H;1n12$tm$9qrk36fPD;dmq!oN2GN2e)9Qj=:,l#5O7a'_%)F%U&"1'o(qtOrYG-Pr<3,qOG[LGc+imb
%gEL\(<<NUHV=,M=[%i"@FchU2oMTHYI;_`:5"]pp+h+%HI)/]Trst/BWd6@nqfVqg9V^5FVnTm$@F2q9Mh47pAqr48pABc[TkH68
%4\"q\qcg[0\@VTY*FJ(629d7kBlFeB/4Lg[A*8Df<=BLkg>K2n[!ogL,r8sh7dk@Ad]*?In@3+3*)FoWp9BpQ0$/E2X3l\ilMc<m
%5pBea'44*eLpF%Ll\hGGG.9!4a"iXkqHFD6K[W9QG@/ehG`hf'bc&Tl!7j\>16&Uno6pM*!XSnTYWhi_f-bs53e$[pQJ[-&*((]b
%:87I":Y!7,?L6f=n%IJshg1YXZfVC')q'$4CNmUea^/hVgj+=1.=XD7c5!OshUf1fia]4d_=2CklAMa6W,N!:[GH^0/N%m[[erPj
%KEjT^Is$`W:H[dpfm`O#aj448%c:o+]_IqUJs8G.;MV[Hrq=a;jr$4hQ0kU+43`Wi/N-orQ.)kCchVneVsCgY5<tn<VNEC3*j;L;
%.Tq[_Q>ZQc+r`Yg4mT[ab(4lqn[l:chUu7V58)d@4U['Q0`^ntq>.XFgTD"TQGREQp%?#9^J_QqFJ-F9BCC<sG_m$C-jT#bK9mF;
%Mff7l7U8C>FC<o<+b.)g7PM-2Cd'XsG^]&'\4pn6Vj3%l79+Q1\I1N!]PSmrB7FK"V"k+[@JMJQCAYodoW*<\gWEN>Sj.A:!)uBS
%'ug-4q28d,kDLa10o(;b,0u>n<I6(L<-F=$qla?,gOkl.*pp+@=NmI9qO$l0Tc?0h=89`>'cXqFh=0A!;M4r7e#RfraP!UG9Rdc8
%\(13$`pGS>?eM5.HcOq_'#SNK0ZrNllDV#%!j>sYFc2#Np<!$o>J:DVNunRVY:DX\3C)G.h8rq$F__([I!TO1i+!B":8/Lp?gXs\
%TQ5!H6UBD@\D^B_MEJK#r?10HB;8G.3(U(44cqQskI5J]-,WSJrmSoCGOi:J#K;n^o;bd\fBV2b%oO*cT;Q$:C`ec#GL`$lWL\8-
%;QjCJ]tofcIW4ks1MErKGJmMEm(h:k,V)Ypqa%Q,C+Gm(ZiB<i@@E96o@qOPj_MH4GOe/HYj":'r/:Ya`]<cL4-@AR)sM!Lg.=Bo
%lKd$'*]e]DPk$b?XG%`9e$$l68k3[-ea;MdkKi]0QWGW7XqM(k<_G;(=,6VLl11rLK[ni63r;n25'aPVJ)bS2W!q8(s.\./U8tJo
%3hEHbT/Rj@2Onr]Df4YXl`Qp,pP]k`N!W;9=!gf+CrT&Pf?I6S(?<J.:lHQ$XIj.JXYNuBLU@ZN<91c*qM'rk%>]u?l4t4X/&n1X
%2"RH9\nnnIek=KobO5qpW>G$YP,@?9(GAG7;Uo-^/@]d@_YGQS2Y69q2GS&\>E=t/@A'rD-]cnLnG.N@;"a0_4^CW#\hN>F:&,te
%NLob'C\]]/qWZiA=T6:AmB>bM9;)[(%(Qmj0Y_rFOQ#Z$%D'WOXhQO`H8\BFIo%<&1#]_\kWjug]uEpQ4kEuYQBqu"TD$T+_.2.d
%h/g<#/$:j]V<F*B$<5u@eGb#ehn-5.p#PfElqXtd+jJlV9r;5[4Ldp&*j=X%DXK[d.+217W>Thd["3M0T&'4Hq[boP6e)?^p"%N`
%jic]]GE;<mGOE5hScd-`'mY!\qg<+'8\$rh/YLmWMgJO@)?0$Jo=IMZ"(nB;<Y&EFQ&#9"C@@6jNRRNtm5K7Dm;V>r+S3Q(hVQLe
%:mbk8agI_d*o(dZ5!7XV@tZ11j`U=3S=a_a+2$;0?Z.fecb=c"E"HtOrR_HNZh^m*iNH+lhE2K*MjsTl>rI=2b?$1^[diotZ^b7%
%^NVt<1,j?onfOK)gCGB6^Fu:d\].9d>$tS.0"$&tKYMr(H'rsLUlRgchFI1g#B6ZW*Wi1I^II!J1R+(+%%lIc7V_s6!$.4FW%U,[
%PlLSr.pL\<>mK$oo$a.6g%1uboh>2T>mC4$pJ\K?47tmuUhGCn[pLdHr4V]E2mpD_Ha18PDFE<$ZaR!4mH0kp5n1Mu&g'b"Zfh>N
%p"]G;ID6;hrg2c"A+0Xc]h?m/pE(U-H<DTeU=>fbFdEW^HEn2mQ,erq2i(-)X&SLH-2^-l:S)1E?a\6OCTV$rqs7'APPTNdcYQr.
%5.g^5h+@G.=/j#A;@gNY^H(."jL;G^aDsO!hmpG6E=uMmb=;)&V(r9LP9\6]'to-a%PHeYWr9]h;7<&sp8TX(`RAI5Dn`sCHl#](
%"0Iu,@>b("nApsngMbAu4-@?$oB2Z\o!#L0^%([:<Q&s6Iua?lHnAj:DF1o4RNf6VOfj:!llj2tb5,]=l*Eg&5bf0A[bo1jqp]@l
%=3pHJXl[1h?3<^3qjO\U5A&N8k1+<&B34Pe"1@AGJ^U=f^kY!Xc^l4;+WbaNWtA4aBmopWoNqOJMs]Yt:[RLo]pTkU[m&HlMe1Z`
%HCN6N5Ol<oAE+X$(^-^S[Hj*mqt<\9+meJLqt0El!;m>!lca59c21O$mUgo^Vf[Lkk[18?hI_DB:DcWE<k:"p\4u$I>[!Gp\Tn8%
%daKkKI5gOZ2#cQNHg>\3:/iXDG6G[Geg#um>-%,fj4?,S@V[W'Tuq<Z9VZp5V1-RNj+0\bG(-od/$^'e]p;nEJ?K2,EO;&;3kROF
%ePkX(6`'nN^Q?@Q=9>DC\_,P=n\DRShnKn!A:(iDct8XFKR%pB%H;b?90)')rY;ZgB.$c.f4<S%B8s+'o4f9d4g)?[l+?>?g4$C]
%a3(1?n"3)]"D6k-\g"TOW^t$DLiV:=&.^k$3Y"+"cF95cXO1:lhQpc@?)]YEpVlq?:5bM1ZeUtTocWPWRj#?A+B9in\>O<O2g_(E
%@=>VU?/>NaZ4>Aa-X:hU]i!86cP:BiNtCR2C?BU.n6*L2o(C\pXpV'cc`?g/6Zi?^G?q!F?GR]Hmp&a&*2a\5BPa:$<q[W:!"M5q
%NU$7_&*39"?'m[F*&KNH'@)'4]iE0-7ih7$d>iqh+Nj9,bfcOV=W*Tla0#)b=&G^W7&V.Y]iol?&^8Gknstalj6PE*q:!JI#DL8M
%gZ%Th/g[-ug:39ZQ="sPp*Sh6Y-p6@NVc_+qJ\GUp#E5Uj^'DGrM1;&Wm4@3Si&,E(.,"XpTFqM^^7)(S*-?8frp4t&$tSa2o7^i
%`As=Iq!.]Gi/Ac>o@k(slpmW,dWd\4.Pb%l^aNV%Gj'g2PHqT_3a1>Dg0?bAoh;-*1fs&!5#'/,jDAuRGor6$IB!HbH;uHb2m5H[
%OlAsp=m#9Bkr+9(\$rhQH(VAq?>SF-pRV1g6U*/0\=_O4r:h0m;XnM@+fet.T_.,KJJgXiU^epAUdl^IhJTfghqlYmGjYV,haoa2
%BieLAE:@0RT6=t:[QD'aH'H!Mr:\]VkH?Xjr:OJ._PDroo3;$b@EMDJKkec1-_o-o-K[:t^[c&Bgs2p/"B`ddN&W<;\'S,nh#4V2
%c%p8%9#]g";L!GJY,o1S:Z&m9>6ETde(sqomdfqt=XX7FA*4IT3$,$VBs"gi9GK:V"F&?YPaWfZlY@k5rRX]Ag=\nFe8mc?INhd'
%'dIi?4la6W^\1S2E;8iBW45p"m\bfg:/]-9`Gl]Brmg_/>l_TbdZ`f]9Rf5,S(2I].;.sX,EbStpe!d'3mKo?Y8=ZKhn;RYjQ[58
%GJB*`.&d[SUg_ob">[,e%Xb@"0t%&@)=G+C]L,ASSi+3m%CRJUYZWrbJ&)\?4nn&E53LP@\PI,s?\@cLHT.VtBE!5W_\](aG4U1m
%*B_*lhQ5mtI$pi*QC#dh[e"6&"ml2%lrW*Qm,];h=5SFu>C._Nde(I^Mm,JBe*9Be388c#^V2*YGm"`O&k$)2DXW8;-k@Dngmi4d
%4j&4)^Uk.f[r<H)rdtZ[%NE<4Q+>[&X^u]+R?Kfn^`fo\\s$KIOd8P-KD2G>#RYl5kWI?,AW0Jhmd)pR\n\N`lM'L94=dC)[nWa4
%pJq&Y7FIc+lHRXkj9hNoXJT`.DB7e&07>)o'Rs\dh`>tm$abPYIbNT1Is/mlhS)/UBS*ne*J*1.hK\HrJf+I$AXMG[BV(i7h"_ef
%C5Mba/%N>.+/Egd'kHR=Pq,%I#"-)<hmi!ec@*4g?^tLL%;U<F3W8$:eF@+TNN9F!oC]rCkOl1"IRB\%:Lr!%/\2!aoUb0'G)KU:
%@_N<@+Ib<&0<mXRY5@maCQ/hOHX'5dP<>i[)CLm58s!m*^(32m)1K;$rrsR;[XnlLFaWRYAq.QbTm\rZ9]f42>Hl_Y[*+G$OQnq#
%(uoSm[5u<JmAeTL-]@XmXkd'r\5U"3i'"i3h@oD;RJ+>se;ZdH>/76Vgj];ETo?P9V%5YQ8k50Cf:.VHF/3_nV),smPX"!)fBU>u
%B"]*nlecLSL;drKU^*2bhr#9)5t.Yo!VQkk#afjt%`"AZ2"YWGje+JW+G'^[bAHb6K3J.;(W%@3%dK>MaQ#&LIIk`ZXU#:8f]0V(
%rq_6j\0#dK!+C6Xb1,e]a0=-N0Fp;7?shPf-en2WAIt0rp#]78H@BcHFe1K!5;M&)!p8'gd3\cN\7t/]N;92QZXqsFMt23K1kMDk
%n\J)7:b.)\)0Maoc4f%[20rMbII.'kd>XcbE83!$)WQ-e!DRdap5Hk%rrj[CqJ*gg[8Fp#[Vm4CHkMs_.0nb4AN@I-ThZ;j^sn]:
%_Ao1B!"Yf/[h@ROK3G!L5Rj>6e.O2+bN_6kk>2^'Kbf-i2,a,dVI\\/9+;=0[e+o0"95<D&e.Z%$"1;/WtMfK4m3&uDaq:7hb-AE
%c>!D-%L8p5r/#S;#:]q7ZFUUAOJilcHU%#:.%h/c#gM'Tr7YCXn4kR9c@0pAdkdKhJ<)aqlM>dM602.A;nKn"8k9H>lBWr.jC5IN
%(jCA4LP1Fmc8]tB8BX!VLDU^i$nh8C'NOL2V#*p%O6M*Unt96$3=6S=cKMTT[d.q>>`Gn2d-7SZ.Y+H\pUH2]Ob6Z`8Aff(3CB?B
%YI+n'KjlK[S>oBRO&@2F-L(`RESie&iKC9ZdW+?nYrE"S.op<ga-W@^=fkN'[(8.EY$m0[D9)cKhPE#k:%V]o8H.Y@HS1*59e"VO
%3f8()&\+7"NL5IJZ>I>5j2]>_2^UqW!@YBCN9_De][6i/k]sNYa)<Kn3B'+^i,$0@SOAP&dubsrm<r&pG4:rOe62`S*#Gp,g@oq#
%K0>GYf,EN(Cg*G:_<3kVM@aF%9/fro7XI20g*a%u'D"Do)mRCX$#F\Y]H!LE]:#V9[oC&.l?,Z))%rqX5h7e6UTrV%+]O=2ihVIV
%qH9N*>PJde>Q5%%?,JW?cp!;r#&,'o?AkVjJMD8pgmn`RcKd2GECSeOG!4nN.M`6@WRO\[V><e3]JKq"14+:Ds$/s"!i\f2hF&2I
%E';L,I+_HUQhB.OYPZ/grm/Ye"t:JUYE%ms$dtK5+H.UOLStE3s6Q?Uq8\Z`ST'o/]/:>p_qG<#[#T>]DBs>m;s:>^&C)_HIi[D;
%L'p/`Dd$%GEqT/'T7:r,s3k>IQ1TloYS'paShKRpTH#0*16\4A61H2f;qI<(MtC7MGiieM@Xi0Za'CVQ>Sq5#onf<:Y2^k/@CsRR
%?$\'d;##07[?IDN64Rn"4?CdUOR]%Cr6IT6GJ?2!-^L&3DbkfcllPcS,]tN\8)5FUi$inmZ\HN`8Y8#W=s$ZZJ5_-A7hDUPU[?^)
%':;Z)dgRpWOpl7&eL7XCr*D#+m#r\.6E"%$dWYkQ[&[WP<UL?'r,5">pUm<"_=:gH$K6a9Wa/P+^d9I"lfLkd\WEg3IWaSFBKJ+6
%1<CLg9X@Db7bkiISf't9WG013RUe$*P=jj.1t1Y4GD@_u34;:d:f*MULaM7V8[RP'3iS0T+A%9_*o^17FDBkK#&>$48!jOKp5)6[
%IMm[2Tqb32pI%?UJ[-)h;#p>u,HujA1cF<6cZ^$k2#mgD*G4"S"iaH"_I;4VE^673A!6Yb%?N$`!++)"7*d3DSePoti%:WaF8Qe6
%8YOQ);*73p(;:giRXsV(C%gL-h:LbCpUqi7\1/:Ckr[>#0aSJi#EVOT^'AJ/2*/I?9)qV#I"AePJ1tg#!'&@.n>+64])i&V_Ug;g
%`;iHU)48L_X+`Ed:e"G0,0%%'.]>0K35?T*K^?Vo,/GEo7u!"T3XD,5TM?/t&Yt&I&Wd1+S^*M9RinGSP#KinJ4Oa\)]bVd%ZO-`
%7Z0m1;(a]'!u+'m(H_46@sU1rhl?b*ki$Yp!n@B2!hKPa9$q;Z&%&EQLUDD`8`k@k8r.(6>_D55XoXdm&I&NVW[ec4LdW]>P[J`5
%3jum"Sg/QLM=@>(Et&6Gga$lF70sJ963r_`)M&g,OV4%3d)82#-n9d95tcfmE[_>-EBR*GV4lpoY3RN6"4d[m_d>MlPV/.$)/u/n
%/Rp'N'j=$-I3#:p5cNaBcfP<s,)<*d,eqp!>^A4@2<ejb_U<gm$9am!,r\r!Y]a9<"&,d6O.j*B+99;7UXOdYTN3oUNoie8>j(uX
%[fLm)1_Lq*)1^Y3K@k>L![,M3Frq[&Y=J7^>>Wf4'.H7'0Eb9,!Nh?YUZ2nQF&43"0Sa3RLB1r$jZj+0.cCd!!l'6d'hXh1\rjbs
%(J-lEi0S)&pga-c3dXhU$$uYh>\&.4eILdm<&Z#cF,_gR3YT`r?lbId3_1q?WZ+I/4Q%^@2f06<T5(-a0V`B1cg<2:a75.p+m>>E
%WW5I1Zk`d=bjh0<<$V/BeEC`,1tQC`[+n,f]0IaabQ`"ubFoR(-Db\_pUUqF1-cn\+C_=)kbZoL*(/^&RKIt$`?8Ot*7$#kR#>'@
%*+:u;qU\5kVcX?I+3T^CoD!H+B"C#oJ>lE6&9%i?`_?Yt5ue"r^sTmj1.Uf"mLD'ueXn^D=qPjBLCmdX.kq6WQbKlFNj!:PBK\\9
%;(iKZODk=p[39)'A5YR]oJHk?U[(LX0]<t5QQVfk-o(u4d%.<W)8siL,DItUl)t:1Lk^l]]mT-Q!DA(D7'4a#)>W'\gJpRr7.?&V
%&Dog+o1Y)s_U&@T0tfR9[qLS++cQDa>.NidC&7t8g*Y.P^k#YpAPi_Fqh"!+F_C+ZCZ-KS)Lt3+-GJMqms@;#dk9&;BX0F/<P@S]
%7R/VJ/V/;iaoRr:j7dTU:C,e0"&:P0PY5MZ*N@YJ1'`%Z,B3-TKVaCl*2uNr0ks5:+:)#233g@>3<Ib4Q0=]<65e2K"I(6V\^WF*
%k=EiA*&WXM_@^&@=;Gn`,XS9h(d4k:PNbR%KoHXdaR0so%5?.[H.o`\jVh2.N#NG5&JZIj_/k"d8'pI=ULk?e%Fn`RD+jt_9$=f+
%0T@bOQ]rVOenP;aM;]E==T38"Z-:_<N7t*GS,c[^0Zs$809T^:Vc1QDVg;J6\H:5l!+9sM*).*X]3NB!SdIs6>kocc-pY`7.#:E!
%OJM2^^@I<#OB^%$+hVRD4_a.'d+Qb_+NB65k\P4o#a(/?VaP2b:bBIi9)BfPUukM<)$^_o`.UH#\/JUn&d9c60Ur+X6$;Z+m@N8j
%'a'p`f@;2K=A,#.Lb>eW0/:j^]/i?Z7L)m4dFo'G+?`/4BEVhEI:.oeBe9lu7&DO_QjW&YK*eb4f'2\&mj87uE"'DdEu6'?krk2%
%^!#pZ6e4C?`W6>_KXtT:*^Gj=KH!BlZmsd\5aJ(GYo^jI$fi>j)m)i^G;J))3YE=2)E_oN<Y^du27T5tZ!Eo?JjqFiPe5M3oo0PP
%*!kLAVh/@lV/Y@:0b,TeL]MX+]k.METo:9.B6J";;>*o89EP<T9H3PlZO1qN/A>j9"D$%Rdf>%07,9OZUS&:TcAY\PNQb!Z7!N1J
%9&MVkn528]`q3Nfg/9(`@sJ&G"qbbrTmn)GIk!!<hoaReM!(/!%X>_9[;H?1*k*1Vk`To1X^i:%#&hYhnM[+H12@t[7ZA^HR;G>_
%-k-hF_@cmdp.4n3'C2X-7#Ng^aU9\g+CS+3Knb\`+g`sIji3&W;24mgp]sX)(Q*s-o?^#_0;K+0a,Zf4+5K[cr9*:q2!4p:-7\\E
%<H0W<-nGqD8UN3cWG9`dULiJT3=(:(,\N-So[+A,3@I+N98TDQ+8Q#^nrr6=D`2\Y!!q3B7b6-b!/[?Y[2pEb(,aUJ??VPHIOU?C
%iM@279G)tYUG%&Q%2lrY2?VI8DrO^fcigHCS*Gr!c)p.5rj1/:kYLD3&4')N6E"W>6AXHCBHK?l:c"Y<I%qX?IKssc#V^CS)s/e%
%VV[:/$LOJrXPNsghB_bZgh\*H"9oTrCRc.A&9BLH"dna^no7/[nXqjHB":MX5H?]Z[8RKnK!WfhGS'c*^4I5\.SQuW=!4oh3S79a
%[<B5Z(sPJF*;Q%=KR(eQR2@Y+#1DiSF+pCU;j\"?2Gh8D-p"B>STuhB=]/&!)]C^_[]qK.R[K)`Bh")t0FZFC%8'c"Bf\n!_f(5V
%eL4_\2iS6_'=.n!8u,%mK)*9RWbUTujrj5KGYKbUi4$Yh7R.X^6t,LOEK1VaMY[Z'<erMSda?^dSJbn]L;7XGNC]<sZ_=s%0KLV<
%dRHknMNf<Rj*P456:.C;!'"`J6!kMP'C&\HiWsCO_&&cqCiDtXko7r-.3oE;n-RVLWfn?k$^61RcB+1d08-)uL&Jr&\E/?Xh\07+
%"X*)@(gBK=/Z6*UAJ9/<6E*HJJAe+;9S*asK2bM8,YFi(0KE:D1s\\J`(c_r*>&Xbq;(D>;.pXh"k8+kl8T[kR+dkK6GQ!pgBalk
%boGk0ofaNfeY0ng)MubL6^s1Yk.8esih.kkpc:]ZdWjbFYFhJBTr(\u3i@qk0\T_2kF-F,UC[R-D*@[G%^jD[icEi[lq@jn>^M8@
%>n=cg2*_R99fpFJ=YBGkZ@en;i>B(lCOCE6(M'jngnsX=KVd%d.5SQ,@(P&N%Y-CKkTT8uY.rqbe<QBm\aJ_oCO7)B2\$?SZA4DN
%BSV>r(Y7A$.\E`(,/fN*RA:*USSju2.=>p`cj/*0%QXbk.s8Y/le>[?lNfFX9V@M1b[`FL=p=E6I"N?[[=>&)W^X"e#Je!@[S'.0
%&a"gI-G[&gLRA0*TlEWNYil36k55X7$'94C2gW7b;edO/OEbY:S&RC+%JU1J1c"LPd+pu4AI%_'[Z/qb9OEQP'(VbR5r*D4N=$iY
%TO$SoN&J%APO6B&S/E!1%MLi70+:I$a)WB6#Jql(O:bQm(^:ma=8Q29pB23Q@A=7MRGj`h*J#mb6?p#nV4:"k,^S&CPR!I#0Ho0;
%nMlC0$W5hs>NAY`EAYY%Q;M<@6j;O7Dl-f5&,7!HAeQ37eT$S(Rhh%+N\MP(GtNn[%NMA%F[tOs>-HOf3XLM(Bg+jj>55NAKB^Hn
%J4^dtIKJ7ppBLW9FX1$9M.CB75mB>,8fr8FLrg9#M^-aOd\J#%Wd(ra*>P%mpPEK=%oXd7nTp#ugaF(H@IfT"jSsa1Pm.ahn8t*!
%ptFh)R-W\=;%bMY)?mi#_AHN;<akbMP/18D[44[+9']r`c/hu=Eo2iViQs8`VUFt&Pg"$,\O:;(0@\i3<-r'1.u)c!rZfDV/+XpW
%bT,aq:CP=6;"bk7M[c1a.L>9HZ6G=b9m+9DU"3Aa<#!s*"9$#`]3C>##JT&g`-+I@!".#`Y`572PsJ:.Fp*oQ80415&pibl\<^KE
%<l2aj.JG[6qBjRbNfF1Bl2X5!#,f]8U`R@I-D=&:L<;FNe.NM9,$bXr4FNkQ@@gVS-b4))`%I!&RuS47h#8EeGg#X8m7P&u_R-e)
%?C[pEJC$s#<h4b*9Y*QGIi-a'^I^:\(,E.uGJ[UH'5>-Ql1+0ANoO5"A:g;0.S-CQ"G`(C8[P';5sNhUN$=-sGI;@Ekr[M)NA-2$
%7#s#P#-LV2a_F/QF_@+=:::MTFXB@^JMAs^'h-I\_No(IHe7e!W:Wb/YH'+Ng@[--"5P<A7_^JK%dUS#3kLE!Z<"uEUR(rt-'jr]
%'!?an^5Ei7CusML&u0cWD@M?s@J$'D.62>K*+C]]&7t[7Oapp@f!ia+c(<,F7OQeK>^6oBW,Q^VR@D;bFb7k)k;,6U8sUf$a(`#F
%HcEAll'']b@RZ@NkS^;,1IT_>"S#/X"l[u7`ot7ho&-3(fR6)<M'^D-*q$nE&f)HQlLb3*.<A3Yc_mJ<3]s]T.ilY;]+i\hmt?O%
%4k/61lk=ubYr]hDFHkT5`R7;X7]:6Q!oN0a@=l%%9>+\DrR,4Nn#lH37)C?u9GdCfE9T/;gc_Bd%+#Ekhdk:X;oPXmC8>K9S#Kf'
%65H"U,-2-G-G9Mfl%2lN'\\YC/U+$Kn1KQ6+%b)F'Qd)OX%SZ;7dgTV=1&-CFsO&mB-_R'"L2A=<B4^R?l3jF_sIq9*tH<C5Z#aZ
%3rd0jX9QNdefXF8.6tmr`gP@Yi4kXB8DdN6APHF0n`uR%BN3=+jr.&61Y7f=kU(D[Hso*X+Uj'4BqbReM!bPc,d^Df$c/q(kFnfj
%Li5d+[ZM0Jm>etMBTn6ppjb6'1)I*3)SrK8eerY4p[;Sf`OGUCr\S/_^'pPoi>M5U*S6_^Ne\p^q,73Vor*k".7n2Q.CYe"rM1:J
%-m0"m=8n1Y7t9.PNWbQ&kSnMuR4#(+,?3rS1]`W,<'D$4(/r1P>omGV^bp"e`)Ne@oDR>08St"D(^s)D$M4rgR\<;SKRgWDmBcH3
%YaCq1ZjWilmA6i@24Xp$I\t&r05_B&7`PoF,4(_,5phtY=sVS/OO/_$$[PlE.e9W__-=W3(/glb@,As!6RP9qfiP.rCa<V*6DEMC
%ZD<l!2Fbp2h'ebV`HJ7E?m!Xc-VS/SLM>BHd=Z>4`nFfF2pi_U'<3X7O',Oa&gu$RdS?&<^\YN=(#K>Hkh3$Z"=.0$YoU/`$BH0P
%<*OenpOgkWAXmt""doN[1*b^PLOi3GJXG95bnf>$ppdAV5p]3s"P6O[$rc8JEFlE2F\HEi?!mf'T`@a?VPJ`NOeUM]p/M9`WU%H$
%R>I;N@#8kA_c32+!:qp1<L(O*!bsWMHrT*[(GOH2Kl%#o!d'"$l?XC3A>/^@YgI]G5&Q`).:uQHR95XJ^8aK;,Uh1LGCc.ndPj>0
%9hJ1*r"=3&_Q=[:!?u621l;9+OY?kNPm9uE)@Q[W1LL$P\8TEmC'bh*2nN_\R"0[J(atGR@Ts.#V$)DP<7#AE<>W5$/*.bogG!$P
%GR7D5"&eQ-SNiF-\KTBl[-(PJVAS%rPYs)C.\Z/G7D[A4.,$X[)_cj"]974\W@@)P!]q')TJSC`RDLGQYI7S1*mI`Z<9:8fCCb#8
%)[-l3NZbRY=JrA,3ou`45fhjef"2'PJ/_A&@=?-_7"QfMRs$A+80$[%!7?V.5(b8O),Le<'5dukdS!)W$<"tJ29^Z!juStY<QUl`
%>FmJ(PKGTE/RWC=9aN%F*c!+\\1;38D/eZ(2e$/d_];"o2]Gp?/+,:8+R)nb#<'05e-k'3=1SgHGd^"C@Q:.?G<uai>C]h]!0(`3
%K\@/;`SJmSPRH+[a#0+gW&Pfk28)89'\NO\+`1Sf5sbN\&AlGsoUZG1R>d[YNLDh;4Npr/qq@%og\j",%k)!6+tu(mhc#-dS%.:p
%@#p,[Ag_(f-?Wlq]360)$PVDi!(7@Q*,BUm.gQ5$KT"8fQ<>(L>4$W\%##NQ(4ob2@7#ZOn`IQ_(OE9fPuuX:Ha(j&7'r^MSCeEM
%/*Le*N1bkA%()r,RrD33iNKKRH</fEY-un&eWt,J$@'=oZTe&[8EW#r0p%upT0HS2kT[qN,;:c.LC6omQu=efd6<O6KYo[S&l7tI
%P'psK`(`gXFS+N321k.JSO'#)h$@306K'`doq7D6kY.^=]1aFi@o1^3"_*pd=?ru/#)QQ&VSH$mFP!pN#[_is.)hETbN,Ur5NHS*
%'TAbOHBo6fgk:@WT1WToE*L191,#H"d6<;N<i)9bY9G:%B$"k_p6!epqFISFL\oSQ5VQiM5i>pm+c>cs[cCOT`/J<Y-*g/AQjnJ#
%Q#dF.%&EAG:!3IrnL4U&8Ctul_j\TFC%hlB7Eb312E^""#uq7L$nlbqG*Qh7\n3!M-9D;(_8`-=WsP`I6k3D:8.;UDFSKnZD1(0+
%YsA.Te9t?!CQ+279C)J$8gb&:PI8\H?l:eRJP5>9Bf\=frs&p3W,`QVQ;[#+(u8QNUfN_X9se!fA+iLi1<e4tYe&5uc#i&rqdpoi
%PrW@*e]#dT]gqNAQd4'/YqL4Ea&e*TWZ-X$DXc_QCV>-4X&[%CM)hH>7l7?DOr`S#/"]\n.>dSJ*J'S63"cr\ok\:.dRdG\@YQ2C
%jqar)]N@,pF`_&EjLPCYJ`^o]!@aC)Nu6r&_Rd2(&+KYrMAu*'8;6=/M4!ou3aY2c=;A5'eog#_!LL&`Qag)Tq<I;])CaR(J,u`$
%<oR3pW1=:f?sSuh`HGig><k7eCgVD[c(RL].[:o4!%42'7L+,TXjAcUeZX3u`G-acT=aAb6T!AZlKDe<#.BYr[?YK/Bp(Yn'rc0U
%WU&1pL>#ibJHB8Z'iM37L!_jQV)9uZ/,Ba;WaB0J#DD6jS,N)T\OE[e)?OE5/i=g=aW64Bjhb1]D2Y2>N";o2=\'L*Nc$?3)RdU?
%:i1QaYZ>[>8QFd6Kgl\F1qWsI2EKB4V3M[jl@4Sb-dJi^EiaK%Uru*k^uDG^#18Lj&_FM.,"(t#3@kRIRI?$Sg@Q]p1*3%Df0Pg8
%<rNree7^0V^4f<i*1enKOjpY[mq?W>q'cMUNsikMWpnMG_=p@=\AC^7==:4L7A/G[Af[%).%(bdd:s/FSma>lEis1m:GCYA1G"uc
%\Ii3[ZcppZ^oRn49a4Pl)kLi7)=I$/hqSs4pHd'7-Eo<ATG![IA2)P[S^=p/R*j9@]Pp7$&T`r3d<.c7PP\dAY&k_mmFn?aU3#X9
%1J12I&1@BRcU''Q@8?QjU84qUc_qgYT3.'9df?Dqe0cZHl4Ddm%-1;4n;Xo4mE?u%]L,#!kEIqg`3]*<a6N.Jr0A,EGk0+44#hbg
%bQZ&9k1h:B*+?N9E8\BjZ+5iP1#XC[>%W@ghY%u5n,bBoR^)5u:rZelAU'E+L(P\3Ztk(4NAE33l"Cfeq:`obg%5R[,A(hnq0^uS
%;Do:X..15BlKL-p3bLsbcj5SNMj?bq>!(_b9+#,<?q<CaWZ;Y-7bh`3cgDe:YV4Mc''2_C3j,\RisGr.SpVbp/u$fIFp&OeXI5TC
%@le\n=N^M-4!<-"R,SZHX8K+P2LX/C&8d_dLMdEQ[1qT=p^#A))CO.W%%YPg;cG71>V#b/i8cQR<gds:KIVX3=rH(_hY]n:L2O/3
%lkW6pD._>>7<k-QZ\N8!?(0JDZq<BW`7--(0%Xb4plTQ3Ub+crLjU^g^]qZ_j,l%7:6+!S_/'V/fetsD6#B=QonhnT)@O`_3VBr)
%b8@@;L"2,!f@_2n`Z1O:XgI?rMJ3kpMj5dJjJL?!<5K-+2k+h^9`DR\h1c04_h)ffW,ru=lF7U@;WgR>8eRli,H)]p9duiTE3pcc
%;5%J6L1?7OA+IrGJq?/1cB&#g@tg$cJXH$_.N#Q<pmuEs&CZJ("N"D\UEW:5/+/GJRs:ub%^WDA8;=jScH@G)V9XI?flQKqRnALj
%oIZ6\.P62$\iX.Pj.[/bmGMK1@H2/m(Z0++W8_a'#%=NMHr]LV:!uI4(PEI\Kp49hrZp>FTj2V\h%?np/WRds3q>-1!"@?ml6&=f
%U?h'E>=UOAL9;9_N=)@+5D2W7o8n->KA%V"ajh$_&C$6&qGS+Y9V'!SM+3BmO<;UZ2rPL_$r!'2-'b>>0+W)?A"R"eZ*=EW_7Rg4
%o"X&MmlTO012#*])$l-La]'-[;l1tmBlIh()KR8,1]jEh^?(S]EKG?"Lgu"48`AYMN,M*iR-QDY$<2sDq<!+,E0XIE0Ffd'N<s1B
%A@$Y)*hVpbPO'$]DAB"0K[q2l31&8bo+&$kehJ'K%ldFUN0(ua<uM'WH(f<$ljXf!)3_d+76,NjaqYD*iJqhPAOomGG78:B5G$1K
%.O5g4,jF&.o2LVmDL"i`O5-cagj5m4'_]6FcdBi_]TIs$7P8i]Ju@X_e`74k37t>L8Sk`[dBGl+=4j!&W:3M+KM'Z8QdEgNKkKi5
%6J$htZblf5d+SP&4(Gs`$u$cC@+tk_WkE,,riK2S%]<o;aX*An:dNbTH50!iY6ck#U=pJsQm/sDIFQ@j"g,na?pNmCO<DGfSigar
%E.*(68ZIDEfLDug+K.3s&-QT15hB>cKA$BJX`Yc)Zmjm52[WcHU'<<O("J)C$j"eme>3MbPKYm]ZS[W%@>Nb'&;Y[sj2RmK1uL,r
%]>+-A@1FWcN%00k?WRi5&SUf71s^-)KgXnFblF][9VZ!X&HDoV"CLAP.a2Jg#S=HZ4kK8&D=[0=Ab\GH4#K?3p7rVE*B^t7^bZV_
%;mT%<d9s4U(aKR>Mk2sYM2f@dH=Q*RiDuIRC=@fuLV]R;DK)!9(7ki4e@q+Q(BcJ/PJb7##q;_,4n)="=G%*@engbaY!EqM-/.r2
%TN]C4.#IEK+@V-6Q].o,>!])`fb*@=?#5Gmg;.-PhB>AGe6J##qTV=E,t12&)+'$<`*@JAEIc0RTt]+W5&+)=V]V@EFfl#[3+q1^
%@c+S]G-"I^g`AuOH4(c'cT1ibR'Ht0a2R\()7l35dN3[W9TY4R&KTW)bK5je8l=k"J9`IbnNGicVbK=>o@,i%p=u)i4VR'9;uELd
%7ju:iGI?cX-Cd&MKh^e92ebn7-L@9cGZ`WG9i:"oDnH0>A5n:rl4q^[j]4fKP7L,]B59n8]01eFb^`R'PV[Y>&<bWRC[+%/htM!9
%'G[h)0h$#?]12=B$>-/4RU)8_-A"]O`.;P1MR!X;=i!eiL-(*RR=(63%W&,^Nm-gTbEt$eln%NV!B'OY>[=7AEamhu_F&mG@sqgB
%Qd+q!#2`As^@=?FFS@4ANJ*f""?[8/H5BhYK/6qdcjhnDGf5=;e/)^eb;Ud]T[@EG(+\HOHZ^I^Z)YJboT6.K_5*+aO9dXHR2Ac1
%1_^76[kdK@YmF2G)_^.>=(Nl/nk4?-<nM^&9MGo,a,PYPEMcDr*#\j9_SdeFqPXg@oE^'gB`NdNW5I5%PFOV`,#Q[tD2o%6c7/V3
%i=_N<^f@ujUcS2k*oNm[DQZ9OASg',=Q1ZAV\,B@UfE][_mC6EqMr6LO8@Ym5GYY&+^rc)\B?<MZ$ed02l,qtWc1dh-iLdtSfk2H
%H3mA6C[)5M@gfUu,hY9&JV%"\VN,<cJtHd.P8n`'7k$i<K6bEj[\/=phtf_noo(3&a)G%U8SpkhGqu;';)0iEQ*JO*R'"&@n5@;4
%j#MI>>%blE"WOm3`e%^ObVskh&@'?]Oo4r):Md-=->4tM_iV;Z79q*IH(LJ):0#O`>oSTg;rh&5#V,/2l0R)jT&H6JPN)";)Xq1C
%Q`s4@WkbX:.5:LfTe@ul^;kFbp5mui`9;krd2cCKQ.k14j4otJd34G\_g%5V*N@>:fg`1lh*d$k->^[9^SVI\XJ8cY-n8CHgC&p=
%0o"H-(i`K5,#ju>aVZar$UY;p1C)O:0SWt[&KCUc$GI5ld^'N?`N@UhBkK')./#c38sQ4FQ&3&K9I6(MXibAtd-1br`-3d,1.N'-
%icN\X1+Dj5$!.?6GppJ6>@qWR7_fH?knnPV2]m!C=\q21A!8$C>p9A1gpW]h6^92Vq)<nnGG6%Q',k!1T(GmF6.SYTR#!IG5g$SG
%]Ca34V6=!gS\a?!h&7JY?NRO0NWtbkE%GKT@Fit)M(sAZFS4n5WqWreT0KXiMFhq\]:E%hlOlE=JrY[oI>R(_>\Cg!Wc*=82f^5L
%ecob\p2!cFK@TgtEX6M225b1F*"SDlmAsaD[BE\pWZ<PELm\=^FO\q>-Yp;t5q9>_=((b?e\/',(oX/USSdJ7GKU%QKk$%pQ*8pE
%'rEjbcH5,?R-j)M]D$tI&10$MX\uk$_ao%=)mdGr8s66<A/T8RH]AmT_.V`@&#Itt_W.TMegdVF)&6kb\StI+"atPQ)];?7LnIrf
%O64dD"G8QYlL`sV<\09B97>a/L]/kBICK&K*/*7K,>Clq_+Fi=%b%)6UY8TXTqjXKN@o+/ERX,kFmMie8=bDVGR]_I2a^kZ@p?K)
%G)T-jpc]NUW>di.HV/!j9h)I)/kb`=IS?;N_h>\52Asi1Wss6teV14'^_tUE5`ME\'m"=o'pp7GRrGo$;CHs9%MWD@VKpt7JCGQk
%5tbp$5YpT\+_X9)9qN<rYV9#sK3*>'hk#J\p2XWT?-G*;H*F)C?%@`)B+eYf/WDeeKL0Qoo>/meNi<6F.$DFe,kZ9C%ZQ9VC)`R)
%^.?dS\+]e8mb/oLGgo^@n/cSCcLXo5pWE0G\@tlKO+3S?41rBufX%N$m>CEsnb=5,#Dhnh06?MX@rkQ``LS,m>#M#'CX+c9>@Osf
%_/%<gD#e;\@BW4GM7V.b!X0W,AepM"CE:DTl2n8EU(5eKV81P&C=?3>PKI,<+3WO.Z",DM1HW@33b55B)0N#=S1\F%e/?I2!`AkA
%=00`IUh,ddi3@_OhK[PE(WF^*"GaHWkVMtcBF[OY6sj^Mb,RVdlKHuHe?I0P_GA\;fa%b9GspgS&RY6dF"VPlP=@3&JK=kYc#n76
%AR$6n`2YQZ>N$%T[e?2kdX@\]Jp,aCI8qmf0,Lh/B9kN37u=gQM0I'L0'^=h@/<Ajf*PNT;lPC/i>7`+%:YC`:U3L1W'MYA9)eMV
%e.IPU@u=CGoUBr!`onQ&Cl[GU$u55M)_H%XU/'NZKT4L<9r/=o=sZY_IErt;=7I(J\Mq"Zj5Ffs=;*hBcY+dt*FfG\L6<E8@_K-H
%GBf1S,H^#>Fj2[ZhG^P\O^Z+rrNOr%PeIg4j;48qLoKa\HgiJHK7uGZ/$E$hDX4;eC[3gD&3NMLS%b+kCf$<l_6`H4SKq3j;7+Z&
%?Z:[0OEq&2]9W)g]Vk4d^aR,H^Hm_O.L=&5$;3<XXD;]Tf83p_nI8>Q(>,RGrT`X'A(=Bt(,EYgEcoSAF3!Q?FZR0MgJ*(s[S+4j
%BlZY@ACZF7D@H!eYpF75?t"UuNb^`n/pr"EO&R&&fZ43)g=QkLF%0_SM7is]kY&GuBBI',<9[<H==i4dp,f4#b.A.G<V*0JR-Eq)
%.p"j@d8+n[j1)Oq\j<K4BFGK`^!&_[T+&Q3@:t!aZk=Wn"d]+:p:dXtOtOB7h4Xep0*3<lg?3p1*6KoiV$@qb/;t1<AL!Vg&]W6)
%s*MdiH`n*FR??%kFk9SoNQ3g&a6onI34F>0Ffd.?!c0=3,%[WKWTTu$Wj^EI8]&#3]qWRVjJ*M#0%B7"R[=[F2pLPe&/"V48LFDX
%rX!GD:sMMeCBbc?-5udVH%*?38Ja3R,77h#EAWh!'Greh;Pk>nX/fM5\@Ae^KeD/XKPSoCoPc>oi)_12gtU*K%=e?>JZH,chf<'1
%H6kQg<[Cb#%^e/RE<\NWSUlV7IC.PJL_>)PiH@0BAF7W4[1kPALU08X+1G&#12>^)dqf#2!s\%2^k<8=$.UrU.VRhGH6D&NS*-n$
%bCW'3^[H:\O@Nbe<ID$iW_tMp"U^_4UOeXSkQ\$UIGJXg&]KA0e6Frg2H-=S649=-j>ZCAIN?B'$YsnX3J?f`s6rOR4IqYaaa5kn
%B?P>,J.G^#b0`rn[RMOR1E3lZp(1XXYhrt_Jg)W1=/"4\-MI0jgFUTXE>*s>dq5I:c<BLf0)Xdo+PVjrGE`5ke)R"DB;Kmc0Sob?
%Q]Q9.B%A\-g*]93ZG3#dan"clafblp4W31sfB@ZAcDL!f'P!W.24ese2&jC$m9\-FD44f3$m@*)n.0fP0(mH3F*tD;pT&JK^@)2/
%S[$tM9-hDu]=<4o)N;$h<<g:$)4$5?U61[.:GU.nfr_(Y'X4p%d"4!#LJ/nD(UHJ-(MkMcJjZ2-([N-[I;/o"eur)C@ALnKMrVD`
%G[YVt(MoraJcS'ZUuA;GVPKD;f)#$QN:l7c]r;mL^V(aHq1m5]2rJ/55A[E7Fo?d]'PAVO]+6$2AM=t(U3:3G6Vl!.pDrNbe&8'C
%Zpg?6b&<M']A!d6LLWIO^S8/caCZ($fLp!hW`alH)rXe@W>Y63\,`m;h(rW=@ZpOKS*j[fk(e)67d8g@eL&5jCoWl.i!:,)n0LEm
%2YKj9=;H]8'AkP^\h;.f<@Q[EPS2fY*U`?)UGR7Xka:snSO=`Qf;i=4DljpU-M4<:GGTIJm)RFtCE38$6^gK^?!42Sr(=C:\7Aut
%dQ,8I-L`9Bo-#*uV>q^"mAj?*R&$:13$f,gFqBuKn0"3=TEL50n0G[,abme&SiDRO?N)>sSeeM;k!-Gi7\YSKm!@l(k[Y>Rn,(aj
%BgjQ\VR4EkBoVtp'\fI57jXd^i'f$?_F[oJ5Z+,RK-/2j!_d,D:-&e+#bj9Z6r\)4HYcs'k?O<j24Fh"T!TVMB-rif&5+$#*hO1#
%`/'`3=VkVNH$bh#ZO/(&j*s)B%>Un&O2/<"8hSct!HoWfc\mSUP'?IbiFFcgg6oVSHIP@<7L6%p]L8Q!k8lNuhUEG],4da0<X?06
%"J"lK5Yq)/(kCY#Qjt90o7fO_2pDcJ=5(":Y!eUZni-\g4A!YiofgLK/O`M_cT]B`l#$;K7hu*kpDuB8ZrqjAn:bsq&bKmWl"1GC
%!b02Z\V*Be<s,JPWpP:$%p"FE3goAm$X8NQ">OU9-5Z9bCSs8oi-;?@kC>CYY!FXUaq.`T1cU/Mp<1/rfn]qdHk`G5V6.(2TFL!!
%H:)Sn?icpue7COC@Kn+mgEUEa"UQ1)NM5MMHO^7"CnFo@K?m`sUrFWp&FC,$9*A9lhDK@FrajcVXe<[*QYfZeN:[Q;V:06jH*T,n
%!RTmUa=.In*Z'B_5QGde#rtOW%K?WSr&>c$rA8HU"DXca!`p_jHo&0lghgoW2FD$$jDs(6G;r#HBLR8k;gr`R`jeoS6!H0HR8&Hp
%POsWh!5ed1_W(o$eEQ^FnkKo"HLFpWF(2ulLhuJ^G5PPe.FN"QG0,MW.M%WM;(Gf&,%Fu7MA];76E"CO!4[F)jLPfi`/@/""*V,h
%cr&&g7C/<&J<VhX?'H+L6V(V6Tp-lX7EhV;JGklWT#t@I"JL+VCfN1`!_B;@p!S#,[[um<C<h9QZ6ReL*L6BHM/)sSs7\#Ec;1>5
%nrotS0Z0^X=Yj5NEndiYZ?Ccl2THI#M5E5m;W`j<'=Q#[%o_iGPSp+JSPTce*id0QFMe\qJ*jfQ-`\[;S@u!,d>q,DN=_u1XNLk:
%:.GB>hkZ?Dot3t=+r6)Z3L=hS=a?#(2gG9FS5r;QJNC>5nY)Q>:Q"U@'jk-_rOip&Hjdpf^>R7=lfoB1L4+8jEtYc^&eIHg7_6I.
%DKDgcZIS<YOK<aa&hg2c6XMtE8NHrChQ=1eo+\JN"6RO[9X_;@(i65HM2o9[#GkrDXg$ju8(GCE67M$hJi9K,FW.GL,Lr7,ZXj!h
%Ggb:ETF;S^!.M(Q,R)p^'n8SiLBALPCbD6rZ5s]6,fIe2U%eZsIk`LQL[2$jC7E\\+VNMIIg8KlHQ5$O:)P2rQd@J@;(/n?X9"?P
%NnfF^)nsSXDJPiX^*'k_A"CNs_VU!s$R`KfH*g%+$6A.Qd5(C)>jXt;,Gl1eW9B8)9q.%9mdRaBmUPja45%S_%uKu:Bto<8KnS6a
%1%ML5.-Km`9m6jSJCa0B!78BLAh^g$MiNGZZDHq,)bBU'Jct$Q;]_VLU^td>Y%C:WE=.D6^XM<&H0@t/N&D"1Jcj@"L#%^dAGC+m
%lN3I68Q>j6K`FecU2#IoheYN-YelU:F$XF?rEhUBApILT4OFe"":SWBe*$fDfCB=o&?a3f?-j37ENaO6ng`$791eY9h6"P=<MfD8
%i8PK2VQT-6;(^o7OG>kn)"`]>-^aTEZ@$0'^;XT`3g+?RMdqh1[EF1S3.B/`kn@69LEEk^A:-q]jLSP`6CLO%9&*c>G))p=OBn8I
%V$'4+_+*n\kTnT`U,I+o"Y%XMMVmg11[pC3H:r'oN5KiPAhbc=!.>S_[W&a=JR7C_'5kDiI!/FDXUU8V72\?7m4(1oH3&0"IB@I3
%2&a,3%lC%[i<F)C?Pgjm,m7Q$L)qC*GRi\;(IV@?:/i?R6(s=TolFe4ZGb=..d\X2BJh&#SG'Tt/#F7_GEqe%p)6l^e(Tap/8Gb%
%c;V/To:$!7iuT('7W&\%Ag+mn9n"+gpoE$rHS$\Jhs@:k(1e"+qXX8GZ/0_h)6/jr>)K'PXc%me[1>u$HuKU6;q*=C:otE:k]0NA
%5RM3a;PqA+K2KqZ/R_D!Y<udKa3C.:#k0Yujb*[iaCts>[<VQ$Y>O8Y?5O\=c9qt[htL<4bBu'&9pX)(qn9fd2.:R0DsWJ_(9=V(
%f'X;e7/(c[L".cA/Brs.+RQ=#$`i@2aViI/jS`J^+lkc&3H;bbBYKdV1M;$O'9Y0%U@Z#c'q;3t<bU\c%T5nNY'J59bF=rt!b(K@
%'o$Jki?Q*7=4VPrRN#:kW%bM\=^kkB9SFcQ=!`&YqaKYt4WKR^clp0aV3QI/he&+s2p[VG2H6TDJu[_\,\Kt@'PC<dTbZ)iO;"-*
%7222#9ljhqh[4X1U2AWWL@@R"b$5h\'T4dE8o\DWFq"Ge8Nc#%$J".t9Lu(+.JK^"UeI.0gri'[Qf:9UDuoHR*-W#K0RB.N6iG/!
%E>5Y.Te/5l.Z79gBZ^J?AM7ndf[(+e9i\\a)V_C/Q\RRi,dKm"Gth+UUmok7/?&W9:E)9G(@0)eXl4Iq@fFp8&>etQa[Oa$F0.oK
%LQnQDbGV4)O%FNG'0KN_#@c6+P_eA,(+IF)DkF_u&7.e-KC/A48C1BH(5u^[,o7*+,OK5GRZ7<#k-\EpWUXNbad1,ae"\^pJ6uq)
%D,d,/1kI2L?bNg2Tp;PC4+2>YImTEl7;sTr+BOXL=KH04KTc#(PZFP?Pr+N^C$'O[AFUeuDkfOac$Ro_ns<%mJG=m(DQ4T*#2)CI
%dKMS6ZV#@%hUol)&k*Lm]9/B;D./Sd2>C<RgPBZJ2*U=$8#1&h<cHn?GVmDoDM4Lb%>XSU`1%McOrT/&1`$F]fcnL&A%)UN_%_[<
%+Q9Nj@:mQ8]5A[>A=J$2b0XZQU[ht$0ad`Y8;q3e_ZqljR7F_"?n3$Xr<EKr-as)q0i6AmTP:iP?c[Rl*O[n#6!0QZ\dlSpC^VbI
%/NN66]9P2?pZb(E\,$nE=!F7>fT=r$N9(lH;JeU+Y4U\imO$jX3/i_^PJ#t\=R@&j0EiSh[JPa8c@aBj?iH&R6(]g;U=m,=M+_K_
%+sY4G-k4/dHnQR2(O@\Zd!G>0/60FS;9lKFlu,?\8We8O"pBj-W@j\i\\V,OTT-g^O=k7DLJ86i*K(lce#F*)/90ek+YaK!L+@O>
%Am(alXo/t)MJ[ei7osVL,AGVDab@\S2sB$6?!+.R5E<M"Alqe!6/J$X4;#p!KA"RL5W-L;ar/C9\f;<jk?Dr2#%kuJ+;OI-[Ym4-
%U<mJCa]4\[%%GEu*Er^If%oY&*Y%0f1k!S6NluUjCJfL)j;"r/4*e+)UK_.W_8F%:.YAkF8>n`.rZ\M?RI@lnrPu%rb8KWf50W..
%E8OU=:a8[OeGhg9/D]Z-oK*Iu@*_!/+!UR=6fjZ>G"=P3I`RH5:kTC8b@:'f5r!$[a9)"[P93m>GP_Cog!0$Ra4@5N]j@=?WIh#u
%eU#k/.">@lLfa/1L0&"_,L,/bPpp?'qbhu.ZL2e0(IVL78n2Cg8ohDL=d_71m2h02S<eWHm+^S"7/F+Cab[+uFM!kq%TC)+.j3dZ
%j^.?gnU.3<>Helh)ak'C-t[RJG*f*=4Ak5EDHOXpc,V+WMUii"R4!2oRaobpV5DKsO>"h.j9CFFh?]8$kpptc`5SIOchHujh-CB8
%7pFC/Xc!/BXb%[H'6WhB%aDT`i:F'5g1A(Ic/sc`IG,>-fJGU1qk$!#;(]KkH1erQSu?tF=fi:2]'HaE.SanaEqB>?f0\*[g!g^u
%c#0A^gUA1='^j5qHJC1GonK-e*a=bQ(ngkmj-"dh8/&"E03N9QpMR<bop)b8Q-_M3Yu9l6C"=rTl_Y1m5T5e2KQG3c+]`8V05.?(
%UFY)haIpbn]Rb\HLMHX?]6kaSf"B<W>LKg0:kld[oSAGS"Mup+h&S38jafPdl9ii_Z>=)[#8qVcfkXo"I+\>@6M`#ciss6dek1YM
%pQFaSN_,'kLS4r93kS=D<JXg3<kZ]TgGEl99!H3kPEkh-ltS1o9HHBbb21#"V,&p&o'i<*,sEGE-#3WB)sKsf+29L5=A(el6OML:
%I^L/-MtsOpfa\`o=pGU%X)!`rT876.d=aNVHf:jDg)?aI"2S-Jl(gAJGKOrr6S>sWLsrK.g'sFEP7aO7#,GD<-@RT/;EgXH_p^Z0
%B.b'7O!k^ii_ohPJ7iVa(SH3CP/h*X$[ojX&>t(E,=`nn77!1Yjfh8]$%gbuMd%@P`lL-R@5Bq1abDha5rPqmcGcn'OE6!Ocs4X4
%F=dVXB]"Y1Q95KDOS,pY=qJ[&:T(O<FL([qh(n-:ig$mTVS/jf"=1h@`S+euR*NY)Q&sq\%Z,Co"%P=10"#Fa6.%CjXIHkIS9[A^
%:r,%'_u-D0RfU2H$#M].MGm_tA5JDH"lpd2,C";5Mr6l?EdS-GqfWb#>V&3>H_-rc&F+'E#<C5(,<@I.6&_76iQ@bu,Lf))@;j"1
%3QT=;g31%Y>A-Q?GI";.S`%4"*B/\[X#i>d\q?>\eI`JBUY)mrN('n<KY+mM*>Hn2]j]$VjkV@/O-eB&D3#38YMP-KL)U'V;S6jl
%Le`YSOVWO$Lr/;'s*JEpg#";7>k2nf:I]W[_L?/R>!O$T)T+5SP-YYVq*r*s-7Q=?@A_ZGM0(*t.%eR.ifo3S)+:B=7s,2Af_Hh9
%/0Hg?nGUlB3>464ZfJI&Hq_#%DWDtNJs*3/CDeo.+Dh7#^1i3>ILs:RaGo&*87@gYhTH3Qn&Te%UYrSS*3$J1^`kf#(S2ZT9e8\Z
%f[I\%bZpMU=MBg7A/pO)K3V^F1bCuGCqfoi2Aej%#4"mi#;<`%8#/uMLqYTd\/-p.)$?,"4?f<NJ`FFl[;Q9Gjn%J?>OlYH\0bGp
%_^qFS9NC\WXe'MSio('_d?_5[$qjWU;^84T(oK:4SJn1*M+]>XGF87(<`?Pp%><rP.s<YW(IGl$-U>=[j%RaD3-26QVH*1b4>V5Q
%'9TbolNl"e_\<`ViIZ_+M$%dCHQ:VN-#"g^K$!*\FpOf%@^>nCf3e0\91Wr8.H"K<=c=d5F!XVgqjW4>,(c.D)@SXiC[Bf#7e7+q
%-oj/#OD7#$Oc;s3Nfp6BS"LHSj$0[/\qm6k4A)0UiCKNYG[>cT%Ha8?qdgAHcad@)nTL=SVR(b(:L+g7`E?)tU!"V.[%QW'.#Sc)
%I\C\M.oKN8V+BU)_RQ'c/Vr(ph-j]4ZKs(7DE$4Z/)cFK9(3H(oZM;Z#,iZ@c8H%mRrEFlFk%bR_[o/`bO0oWjnpTYL@n1JiKm_c
%K]$Y[&+EF+i5fFGSAi<g$5#(hI6u)Bf.?,*X?rgREEZEC:EEB>TKXFt*R7k4%S,0>4dUQRr+L%h/Vh'!mdhi)YsQCe]G&i6h+BB\
%$3[W80FY!_KQ#S7S.40VjYBUqO59\ITGC^Q;Oap*:*720![TD!TG_MXg*1<For:_[d]TQ;:,q!#f4t0OII0:#Lm2kHqnUDBMNH3A
%Kt/k#Mj+gBU>d.W"T\/nKuMG_$[VH`pN7#_nI$>U-s7%o/T^Wd\r^[H-U+\5L<A+K*T#-JU?a*&lqO$cpXN_k]q9sr4'*gK+U\Em
%`DL)UO<A8,q1(Mg6BF(c].=%rq(>Y4H)W!'S=Q:Z"XNH4>%2efaX)hlX&iD7>W0&X;?;-gi@%3JS#OM[]=FoCgG2M)d?6-8p1[jl
%&FuhM9W4[2E)T<#<Cnf2T]eiNj:7G/*p'>U@bNH-P^fjaFAac`9uBuf$idB4gC@Uqmh-(@LX)U%C\G(#Um$Xj/Dg_aihqNeUDtEt
%erp@$%[7ciUo<?5,ZUhAWJ81go6;GOPe_$jJ1,cp_nE9lkpSr)9XTgL3AtUA2tRthF\$3F?+8:%ReB',K<#Y"q1.A>VMbUkWaJQO
%`e?%F<U8@T[e^J$7He%gJ-I"hTo-#;K8&mL$gNM\i?1NF]9MuC-)Xo*8Wdfa[":<FFZ==OKHuu+\(.`+Z77Vsp?$ui+YDYENb`n`
%`u]q[eacn]Aj?g[8F&QCcB-)4f5-VD'#KaB.Z7K9",bI9itNcKD]876N]se8r6qh0PH`ON`h[H,%>3fQU.D*hIG=]mho97Q6$lV2
%1ghb<DWLk%+LKFn0^tmAp@b4Ueq4r])T@]n)gTNX?UCj*?Wc)Da^BGm\]C3CJ+Lc@h[M*iBsg0bd:6=@[qY\'_P"3lM5r<\&kF[e
%:jj<+fl3P$.lhiFM>)YS`h;&QaoLQN95R\GnSc/:f?[JSrb8Xj:"UIu"%Ag!hKgJA`PI>5jR?$Gf-8n>LC:G"I86ZU<5R0FJ1Ch6
%iGpGUg5SEnGdLA=_cK*]V3KQr/3-s7-SiI5C60iEhbeH[V@nCTG(r"C:Ck27DV7<@ZD4fA-SL1$prsSB/**AE:#U.LX="p7\q`0;
%4<d$3h,D;tl-qPPn6l+iBH=0E+hCFTa4LoC[)$>b]3NI?A"@p;=un*9EIUCVcE9=g=6SBaB4k%_m;\AcT$`8t<7t8ECj!6)Z7<rc
%T[HsTGKeG5D'ShngHDS,FUM\h,$U=OPL]=1ae<cQD=r9,cdi/*_U;Ga6uM>NEhX+dFH-*FRI>;#.hT.p65Iq0/\d3BYh_GN'>o$k
%<E!64ag:h405u1\ZTDf-gH^0e\+aDP"FWI4kYX&@RPiMR:b?Fg#*aq8]=I@ZC9QHI3$+ds]94tjcF%LY&Sj`%oORd19iO:*r'U"7
%WkNM>SPrX#<U$X[^`8&a]SF5XYiMmIS3CT65b3H@Y(JMu5_k'$D*(9GQH!H%"_IWBb8A@]l,+DLc%d#aK'\-Faf3ZZA6Q>lNp];?
%a)#ZG.BPMdXq#W(@p+5EU\Jd7Q"e*O@!a8Jkpl(Br'[b<#nR?Q@`5=P?`f,?W)6UOHDE#o7hBjb:j66T&g.In,Sia_j'G:-;@RZg
%_5B/=[hblU^o$?[9?I'aUD$:9ZVGEBj,>c+M>sTe0/GC!B9Vh3,b5hnNFJkI"FH$T.($oFgZn>d=iHAHiF4ZaN9YG3O$[fqq8eWV
%!j':Sc\?7)3YgbfPVF*&r$Sfh!o"s(&'b$tH42.V;;Z,:D%Lm=/7/_*mHS?F.#2NX*JW0@bKL%"_U,#PB&UnM_)G+q_"d=;4?s7a
%;hdQ/XP":11IVBnB'tp8+0+lA@cU8]8T,f*X>SiHpqG+M*Ye2T"uBbNHs1Fq@B;ri@9\9E8dLFYJQ!WOeJ\T?*1i=*GES9VAdV;H
%RuA2!f2Tb_%CO<!Y]h9.2-:E\dI1K-;adcJI/rmG<a^N8I8cRR-1K#kgWHb+>RHtJks8Dre_j<G$MUj_+F,9nLR30ib6s01-oAjg
%#V/9;ppOeiF'Sc4p?%!tJ/qtFEf_N"@5\UKam&j3as(9f;nsc->As4g/D_AJQPeYEL?694-A=(*9^V&^cLlc87Z2p)7rRJ-R`;QQ
%(:9ma0"0et,-9NVkkgXZ[/p?jC?cdC0uIS:grk[#jaiL%ZIP9b!Z]F5I$Z(@ePo4dP_1A<q+JBH(IH1"3rE6&DT\j^hg@AaMCfbF
%:E0-[/hZUAD?0HqWN7nd7.iXLfs":o@^BFoMs;eX>4-(ER@ncQa3'Ed$Ea1=Z5f]aF#=jIP8af0L,=kYOMViQA8q3)Y&l6BmtAC(
%&l"oo]BhnpSHSaHLJ]10%XOnn^"d`LKQb71BU?Tp1SDXc$:0]ELWDd2Z<t`,-uY_`Hh(T@`kS]hfI,nI_)L7'478=!J!lD^\@?e[
%V,iDBc7/2^6dn/d9:HNk[mDo(H?A<QW)V<T"AtPr^4<Q`"YRZ8572s+Q_`:EnnCW3chI"]=EjqA'^RY[(k+g^]Coq(SF(>BEaV[-
%hoiL6p]+7#b/mPpKJ/Od-*IQCk.?,OE"48E^cjQsM4:*m[/DgiZWKF.XGsMl+?:oZi/g+ZbF@to/iZB/X)5/MT#_$8')Lj?R;Y#N
%!FA(B+fe=fm=dtfP4qZ)!^\P&`R_D:dVE806/Z0Qnn)/h"gs5"#pIu0YepY'%DP?YZ).0j!g%u1gEe1Mcl%SImlX_GoOs:P1mn!-
%oO5k"?"SJ$Z_BX(?SGSeE)'k_@;P5J!F/h"'gk8jcnr6>62YZ^CDeP*k$\mgfLUQBCJ-CZm]S0B"N/]M(Zmiah4tquE#s7+Y(Min
%Qp.;`PLO>;FRI7`E-b5[ETV/Q+`sal@tngp"9<r'Km@h=JhnZp4e0`i`N0n<'t$oG2r*kt/(`qYNQtsXnR%*S>RgXX4ch<Oj>h/Z
%<aCN,lMMNeSlA:]d3!8Wprtm?p3J)+44)fK4LX5?<5$!__Vin-PCGnZ,3?'Z=O4:.eRq*[pJ!1;4ILr]VkO[V\opI6M:A485BUTG
%khm%eb^"E@JJWeM<@(_P!OV;aI<q!M3GUO"3#Tea+5"c%KW7QKROJ8DpEIIAYR)9F:*6^:ZVr7_b>U_E#s`\\6k!r!7+=kiW4m7H
%_p])6mi\d\aW+QNdrhORRh)BS7BZfDfp(D[aN<)RJMh902ukp%DM8Z;5U%U?aAnd&@E???0cT"/o7YqR1s>OrL-JC=6EN/ckoDm=
%Xl/5/#kl!(f/t^3[Vg;9X]<h83.k8sAf=Ffl0s,P&qgQhU'otLm?Ldo&g10?)8iTDS^;l6K["`E+f'h5"RPj83]<Y,Ar_0;%,UCR
%aI$F#aoK5AlhYtM#>,N%f4J:2-dO2oA(idD+VVIi]4i@ADeU7?3m'O%%M*L7aGWbEKJht,3CDajn[s-KI+!WtOB]A[F,=?9b-Fkh
%6YJ.U&10b4Ylh&6r'<N0<@9reb9p/8-oA_.$EJU/>0[-bcW_Aa<r'2fA&(+qBgp<,C*O_ZW'k&<rEKUu1V0Y&ec5!q:3^P-hRO7(
%2EY!29357%+gY/7n6=iHX%MlRI.5sZ&>6DiDQj]sSSr!>'T$aG7$1W/"$X2uIQT;W@7">"N0(NLJtj=Yr]CH7Fg]s8,9>$>[9FR_
%\Bp#`;?nh%hePcFgIXZ\OkH"-;]daN#u_VkoMH)j\`>uA%"u-SKeiI>DeHo"R]Bjj_i_XfaEOJ8=dr:2/!ehj5B!d=?)R_lGlWOu
%c.5b;&oIZc1e_2,ofeRHqKe#Z78FH.q/5#.Pm"3W0.Qr?8?DXg"iq-GN<Vq/bS16JCpR87'J/mama:@+`l(<5Zq4B1K9H(C(Df(b
%qi)"1""IkDb0bU8K!V5"3;ro3Gq#OkZ[Z-&]B[I?a5J.2=[nKR436B;fr@&GZqj)R0NiCR4k]CPF*&2uEaru-_!]BlR/#!t8WWIc
%L'a^,%e=$GdcXgpE19s$"ejJ>;OHh"%LY<,+oLT@6Jq27FS?2"rAtVACb&2BbY"B,03rb#>#YQme*)suKf&bCkRE]%'+'B<?4C==
%j<[8+N)9^dd:4)t7*nE`Z'>gVRRL_"nM&$)?Dg2[\e5&eZAnO3,u8]L;)jF`HSk6^lCR(l[1+-N+(u@6qAS9U@6r=8.PZLYR!(Lt
%'9GQSH!#*'Io=d*EooDI]s(HD_Ylm#TGmsg3,M`e<n)o-Zn^0El8CY97/$9X<r)6C(\6Fiq'Yc@&8%!t@tE:R#[u%NWb)N6*T+)(
%A&[O40XSr9;k#%niPM&nF]Hh4r5=2fhtL=hT%k7]oqJ,-VYM'ap\%H+knm0Y#trOIOiW2V+NVa2ol__,+_mh`o(:VJKLsncj>,Rl
%2YUf4K*GEhd1EKS.lh#Na6W9R/nVe\8U0IRGVRtI,<,g6Ikc");>>d<E1:jubibc!q-#siVsJS<1WSYpZH/@)r%<ar'gU@pm?LVq
%&*0Ht/a=GImpt,[3\9rOPh2DnHpG]_'<Q``KFpeFIfJPf,%Ih#c]Sg).B8trr*5Pq8"D`YlFX\Zgcef-5UM)%5*oKJgfekaU.8<6
%RhuiFh?qk)5!Si;he0C3Y?#]8,TNgB^nF]EnKtHa^eb..P-*@hU1$C*@50gGXXDHrA18/>&.Fcn(BPLElSp4>LkDg<@o>\<`TSAl
%NiH(['$qZQ*IoY`'U\s1[oUC=gP!h!CsTNo%uERn"[@ks+n?'E!@4iEU1uHjf-r/o=tKRJCp@_JN&U(PJ8WR=.'*')Uuf8!&c<+7
%!abmu'p9U)YB0e7&qu",i$chWX+W=[4_>9Hd1861P%N)T:/Pt2/=*!U**^i16IZQkD+E-dRHoo_dNpBo(^:_`OG(2IZU%"IUi=F:
%ju40h;AL%p6l:m"jQO56:DnG]A^@b:i6p>l)ECdoehA(9FF=.O5E[MLiE<`.MWi3U]8>:PAsnF^Zb6LR.%1Z-E-2Q?%-<n3hV&2q
%I[Ru^3M8=9G%(*:*/-'*6m)P,.1)ApRpOeqAhsn_J5m1F,6NI+LX%O1AGpKiYU;YCH*;X1jIsNngHO,?Yd)ki7GOFX7+Rs"o,/oo
%37.cLP=G7)'R^guf<X7p`#hjRB[$QVj?,p\OW7t?e5[A!ON<eQLu9+Lg\UXZDORWjRjbD_`^ABV(+O\T,W=d33KYHBb*tM)JGqOI
%#&;A_)*TIO?\%=/p"2te[.>4%^6#&C.1=C6X)'<I/cb]\mHl9jl03jko*8Bt:,^kgFZ*GnX@Ith1KlmB0iuEhRoZ84Wlgo<Q1^ME
%_eX,H&@-6@(Fs7fY2K._dN?qq.h\CIQ">["ZHt\4Xo!Vt(<Br7.P,=KKl9iCkCnq0G+g&cB>rCU^i7OW?o2%0^Cek?WO(lOJLJF]
%me;u#[JdD=OKnoCU%QU/CpDH'(Kpft#hA0-s/HISIU$,lFN<L\3`_Ma;-nC(C1C-KM_<+rUiW,t1AQ\SEDLK,b7EL=EZ[p1_:i\u
%W=/ij-iBRHO+#%p#Pdk95s%=SVs/Y:W0.lS+qT]LgA)a[U/*t--ABO\Kk]+,9L7Ei&4@meT_\Nr&mYA$9M).gepU##Nr$o@CX.T>
%9'9W"(KR5*\']C-BKDSi6m+NaHal.L2c-L,KLH0B]!11`qS7o"[?.n.e?:/']L?CJ<=E>+0De,HEK9.gp<k4q@+n;4E%A5M\slM1
%1o-JAA[up3al+En7^?s+.b751+]HmilZto/b78'&=`eou;=TOKk_KlIJK[^e&^89\8cXKq^q"Nob9.Y9U<T*kZnl+L-f6Ppr=cOH
%(,X"NC2#pcVTh:F4#$dD<QQmhU+XRH7gi$W91?3c[C4q>M+W0fV.^l>9%l.j[3QH49+N`"I3782`%USD!#K6l+%]l0%If]#QT*<V
%,"OnF>eL[<35g6ok@M_hSAr;-STQpqV_7$/G#8'd.U0p@Lp&ZOr)l_)-kQ)ofUV=nA+6^r6-)AnqX=d]0U<1URmS*(&.7i#e.Q!(
%(=8OLhh;nt$%"V4N'L:T]RoTL"tG5,["&@C04bnVo"(Dej>RkQfC@btLdAoliJJNo,]8&eM!;FCOi6ia"g-&(Mk0HU2iJcud)U%N
%1oI(#Tp*'gooQgr,'iu-KK2Y*C0m3E'0:3/?FNG:C4lVBPtX)j<-)uO0#P0c=#:N$c,LLt-:6E%=hQS<;cKW[EdKSXP9=Ubm4>+L
%d+DGG1pH(lb*!Lo7FBg#k<U?n&I4d@&OKlZ3u(3*H7AG.R`"45*-cOF[1qZ,]N\"m>$&O.:3'/khpHZ)/F.=JMq09]O$_^iJu;ZR
%)5`NmW`Fad"3!Z<9@E?UR,3?3>F/egkK!$R6ScTl%"K3W?)5Bc_kTq%Rj<"4iL[#!gn;8,''dkR%ISG&rQ\2YR!/:6QW1A@,K&lh
%eH'Z8hY)S/3.1!AJZ<tUbApa;.\$6TdB4"%dBOAo)C@Pb;':27puJF!,kVd>X"3:'7NYd>bn\iPdYpGg+j[*d80=CX5p;TW]gr0g
%6,fb+k,H=6CrAA=Yuf`p5K]c-]0>C10J]B!.Hh_g!li-#BPs.]*d&M(3^OBi+]nB9AVSj;Eo9m.9a;fC/?%91<?$Va[HK"9i>#>/
%<>DfF/uZr(mY8582#L4WoH;A0'[=he8!SUdAn+C2"juqQoHCgW.o1A6_bRY^!;F(2;@W&>G422[T3TX%7g"j:L,&D:cTr<[%#Z^3
%4`&gA9j+1X@(LP>r(J4O<i!IgM63<i3hpA5fMu"^;o8j^<+C]cPdH2dH?@lN@6e08M[2Zc7IQQ'WP%7:S8H"A6>r$JX?.utAAT[-
%/#Q?hYj8<G!YhH2ATA[;-V%,mY$3&*I']_*Tr;0u2$*nCLd!nQaL+^94'PQI%Rk+/jp45'N'1mC)5XrW7nEm/kWu4+/S,sOWs#ju
%*g`RpBg=89Hg?4dKD','>UBY(XGR7=mad!p+murqY&[^tZUb)+cLSh@mRC8\Z"\h'RU%tXHbOlRpP^&R8M;YIHf2@mSH<7aWKa6'
%Vl:l1P$#EOB/AIfp6$Su$ugY"S`hm?0A,u`@/l+XUYt*nKrI"PnH,"[MJtgROInFeY<qajNYRk]3P$`H4Mc5.Yj3%oe1l;R>:FZD
%0f"m5pKb%>)o?"0>O_5idRW$/Gboc;(nmRca4ng<`E*psesT_>L:-jC=;4U?;IQcF8-a_lN(k4HoIrs+_r3B,4cs,lNQnK=+XJ+D
%gIk8n;K'_o)["Y.Af/D3XN=Lkil/c<mQIb:$4imN%!_91N8,1RZWgT]hWTuOMh9"'p>rPT+9q^>28o2<SXeC#oO=fUW<p@oDu3D8
%'%^T8-0V1D;U6e75Q4rm_uKf'lWu3G$;Om0"'?0OR_!'#d%r1PLg40MPh.7-,"4(Z[&u1>FV=D6Fh>kbo7"nHjq:eN,O`ZuBC53#
%U?KMX"X+\-nH33R\`SF\[=%@H:=[GJ-]olXdlhkCZeb4gC+Xfla=X8.DCLGlNR&ff?.CpZ*qY42n3D9;TfJ'c<]F##;=7eJ@94.V
%_=L<G1BRA+Jd-\uj/OgA1FeT&BWbjka@p)M+]`mX?OJ(dTsS!lMX%)I+LQ@R[.%ck>-CB4NX?>C(8]-C=IB`*WNTL;3X',!%$un+
%b=\_,s)R^jFF+q@V'pd&9,VN_En%*_W7Mc@BNA"q]?uVJB4#c:oMU&M3@.IW`c\M(q6;PR05G%r:F8qP?+O?[)a^R)SO!uj[)@2S
%%Ff>;it:a1\m5uDZH@e"dDD][MQg6c'CF*3]$I@P%=p^DYjZ0>^9M!_aAg0!oV1k5=Dep^]BSBCAsN.?9[7TL"]Bd*SXG0=YR>r&
%3+Rpt_.!$>1/WA+G82LFZ&G-=%u$H$<p?h.f>G!L'bZBr4WWfEO;G7jD\+o^&d6*po?)4WQR9;`c_3m`D'Q4hm@IkF,teuj<mYVZ
%+#[-^2Odf57R+OoKIi$D\Yk>?>h9G8KC$e9V>/&"q/oqRo\:X`!'2nT'45,aKAEX0`glN?+t>[M4/aBVEa@lJY%8?<pJAhFZ^j&$
%rTE6p4%KN0LO)i0nFY*9!c.jM$S4A$:sd*)#h(7\]ch_@3?e0dIBRh4d$,*99oBMf$QQrQS+*8nrA1nOX$@(^f5XS,(k`k5lTD&,
%/4)6F1H":e#[M!pkT]>#-BpYn>aMVWGU_1de6D[k,%?+G^Hl(.WUQ.HG7?t'CQA<0^HkNG$&)FrOY%je+<aMK>Nh+/"tYa9]PlbP
%,CVYp(Orp1CUiDsbZ,Xukdr7M.GpN2("$:@m$jV,:Xe>+gQ*kpe.s)[jLr[!*Zg>,qE;u2*gQ%Rfii/e::#Ne)4^9PJM9&H2E2\J
%&oSVf,'L,bCrn3ZMGAr0:[%Lg0XuX?%U"(`\Q8tONm5-s4efbhQJ:3Y)m&V+ND5f7@8Cp=bGo0-4Lu=8!f*inLdbkl;CjU+;m(W^
%ipd%$2r1FSnne6XPo,>%9=`^\kVhMLV]5'-_SF6mHh>e,!@0=F^"E[@0N7;G[ds=\hU%BFeRDLahrYIT[=3ZXP&6S:J"5Y7iF40H
%+58p6%7VII76,%"c?=1<eg#9`fXn'.5<Sl4PP=U`/dNZO!eR6,j?R#r43>n53P=CK)@D$%%GVE0T!Q!FTsq,%G]\k2J-m%l[6hop
%Kg!t?W!Tc@Ro@4&*b/Q9#LbbAHWkLrKI*BiHjp@cG;mnm:YL"`R7qN&NHlpA!JP($:_r"U)CgS0/*<3C7pr#?KtRUlq(7bqNK'+t
%WSZFs7-AM+mREqDN,UEfTQs,k:TEIW88Lh`S[<VDL^:KfZJ(,7KBoeD`*R<"?][c\1(eGU4g0!2AL(X9K]rD<Sn0Z:%@"fV.:Y#@
%]'Kl:374^sKT^1#NJKbP6rXJ_#K/<7lCZ^r$[&R(`!Oq=G@;gYYQ=,'p&lI$!K;?)GTiYPF.<i,n+5/X<1L80/Z,e)*Y&>2->F;$
%)WLSTRXnP]:_3Wmn,,8<=AE,X]-Fl/mp:W0(/;Wjj3[k.f,Wi[/aM9($KtE(riVkF29/4N%58_NN![\W7Obr6$b8R.'XEY"LXU2Z
%J@U.qMaFj=B7H!=Jf]`#QVeih,r6O44=mUEX-B/&Jj&qp3P[I.Dr=FE$fQ)]M*mTN0<])n3q/Wk\L\o5T1:`p>?'N@)A3)ed+4@C
%'119fCXlfYBGgWG)(Zp3m`*hHJ.QPc28:t*"3nWY0\RDV[hLbo.oTR#<$0iDCpVW!.1?I"+aL%Jc'nl%+m[_0]^.rl'nE*7[$h]C
%fJ%j`8K@AWBq<pF1gdO"GKjEpKUa]-j!V#4&#!G[d0_ngM(d_O^Yj4os8B[`-#^D%0d"K-cUJ!HL=W.j'2bUFCqBX:Z-2^6=R5=J
%]"EZR9)$P/j;eiGWC;$@%T:=9j8as#?TS[E?ACI$m`K2YUpBE;8(neJ5k]Q%4)Yhe<p)eDLupGj@U6OPqC[bV:geko'ljV]71)69
%'FS]-`\PMbAj<8PP#c)i@*8n1.9K-$:#U(V^=.9OgM[C6Mhgo\a)#F?G\o%tkF.;^(n/RfKrldTHM;l.mPHi3n,b,!H`BGJ%&j4.
%9a!=a[7P$o$B'4,b:ND)1j`SJ=E!?PkW0h(A7$]>[cYuk,<GUg"M'9%GD\9IjVme(Fbk0-'!L.X$)H@_=W.)5Bs%a&IG.#>J(#-r
%5A^%U;<6THJZVW;k$bKURVi8kQ!70T)JoCU,m`([KISSp7_rAddHdP?fE/=%V@/0Z+Wt^V/58CF)f]t.g<AF-5s:Z2Qn:PB95dm@
%!9C--jJ6D(ZZ3'Q]9Mtk^$j4^Bc1g5g=q,1q]dO@I5N3L@tb)TL0Aa>mOEuIJdEKM3X/*LbsI-cRi8_\'5IjB+*$b4T*n9qA'Zpi
%ULAE,%>LQO,JL!q,Q)773PM9Ds/*a$&*[X>6h5nXNp7G0k"RIQMAEt#Hu#*AX^PdX@rDjVoP$5Ok7\O-aVA/R<>dkbl-jCOFr+hj
%>*<A0'mECbW>`Vc!Otp-5RGD#oPe3omMRk/V^pgV"^)WD>]F^]P=HBT1r@I]^S*/L4'.HRK=<`>HK#R$;F`:YFpb8FMnhE;:[[%2
%5+MgSINZFbd3Nu<\F<LDIun14=^>KJcN?G(U9@tq7Qq*qOO.`m+=p$:f7Nk(/(o7T&Co9jSW1*AZfusj8Hd^O)+:NSK$d2"W+Vdn
%SdQ[X5b0\2FOu^.Y;ZH%W+cZkbUZ'olp35P[2D"Ml<C+c6qS5O3ZOCNq+dQik6J?h/=<c>Jgu,t!M$'CW5Ibp)L,Dc^82u.pcG+[
%mGaP:'>*;T!Us-qbo`\uN'7ll'LM8n@ePO:(RB=fkop5!c#Fmg"8U4(DR3TDP4K7`+.rj%?.)S%DV/Yp2)*P1[5lt#Pkmg/[`jK=
%=E$?)<rL_2S:>rhbjfep^/6Af=UQJSR[!^D8)"?o(`/c7=C?iM<f'c7.6cERJ&c1fcrVKR7b!tp=h*3tk'n5ticJU!%._M!<U_&>
%1jQ;LSa.^]$)d&DB.GTjSp2r^Z9q!Q9I(7aZ`obG?Y\DL(0jGZ#?5%cL8u6s5W(m)P?GsmAn8(3-$A]JFdsqL)i^X4TfR9*'"UPC
%^gM`NgtAjghmq,Qc.YKV.9?b%bd6O@,W4-*o"JjPnR$dM@1&I=C(%!qKpt]P2=0>jQE-p09ZT[V/puGSXtULs_slLD^7G=M$i=_A
%IHUSC?It`1[3DD%CK]0FFYZ:K;%L(7,Z;bI6*_l!Z?\/:9/R"J%([,BkQ7>k3.c)a:H3bB`Q1jb**%mK#5'Cc85tK!@*0i1VWfAs
%^e[en!GNtF!s[6UD'#pIGW>eTqjWB/[KCDj:cA5Zqtk3_"ga8[V`5hG'j'om@&PiCj%VA0XfP>DrCu&+kg&[b?lW*f=tEW1Tjr-Q
%3q)D'UF##0M:((f'fKR^i!ZD3]"hR]hN1oEleB#Ng6h<H(,(egUhOhu0=iqifK$Vn$efc=bsr,HY0'ir\/k"#PSYn</?XS56?KsR
%U\$EAfA5i9'Sh8K;8$t.QjF-.aJX^[,=lIoV9W@T^2]??Y+t0&ig,4W]9/u6*a_Cj/\%_nJ[bk`3Y3r_/qgeRjR%,/g7XRnWfI"/
%"3WcZ@5[6LJ(WfDLd;c(6#`air]iYms4EB;V'c:l+_:SjJA)esl[EA[ZpuRW9_INJ.bk8Ls+'f*pF)jr(t*rZc/%>R.*=NOobMno
%$Shpm`FE3$V.Tsind#;3/07rG/K3GX3_>;.:T;R"F\V&`>t=U[-4dR(W]9!/*gic9U[WUBUN&Io*[-=qK>o[Q_'R"#D?;fQPZn%X
%IhfA7X;3,s2rjq=>63%I`a]i:JsS]+QNk0ui0/Z"4:luXiFKDm7Tn;6$-bb3Do_bbqsdar?U/t6Z>13I8.3/%6m05mk2u0p<b'Be
%/Zk1mdOj7l!`U5?V3$Qsa'mWr);;^D8IaJUDfM)[nm#BIb>&iT']0JW:+o?-C5euCoYXqgY3l+pTr_p9+G?JK42P1Q3R67QaYu]U
%.k4b4GK#s$>r(6`"5Q:Dk`ea6,[8NGHRp*/><]J1]a_k'P_<H<"-Q!uc:%8K=kY?*pZT3K]cr3I<`o],SAOuh^$1[`5t]\!08\jK
%0qp;NCe97R[VD+*le$C%rZ9Wr1^tIkfr_&=n,Cmb+5tCq/b\jCQ4r9/9_&=*Rk)sQJIUq\>mS=WG;#(-E1mkhji-4Npno%<N[/ZZ
%U0hPg"ata8=s2+Z-%?1JTdX;R1#AF[4k&K.;2u7E%mp*P=eRMu[Y"c3V.h\gQZg`eSD6=L%MXs*-,\/]/*qd/!,YUG09=u>Z_:B3
%%7n/=22VCimaBd&5V:D\n;TK*.C0a@:]NZ;prt(@D=Y])#B(1d=SX_*U<WK7g<^Q+\A#F-q<!E`X)ueY*g.#&G@J<&N+9`-=RXCH
%Ld5+5FpD7.KY<]-gC)O?<,bsGi1C%XA1%`.h;':SXA>uOA=p+n`Lpf8_-*i@^sc?*"^/7#6t&ld*ooUg#VlfWd>PnPZ^2p51koJe
%EWAdZYSq(oZ*"nE(ZSd:Z,_k`"19:926qlc0MXrno`iIWDTl`fH^L&:^G%PeB(S#MO3TZ')Z,tW3DJCQ>SRUV(Mg+*E*/NYOPbOr
%`2CY\7q+u\$JE?84^&j@LSGUFU!4UE1$,"Y$_!t]Z28V:B*k!fkJu(n3C%3mCEh4H@U,R\KiNh3*\.od@;ilES*C\G*NI*PZpET7
%8?lk!Sl'(HTkuOVgA$li5?87%nf3=Y>FT2R&G&X)BlI0J]V(8-^4GsRD7uY*-Fq*B5j'8,d?1d0[haPgFt96B2fr2_\:ruR]>"mN
%bmGG_W[N)T$O&`_^mWpuRDU7'UJAWdVQLo8+$Rd('.Oq=HX"hAlJBP%;rO0EVdkJ5W)ud\4,A9C$a[<<.sf&!S<O;<VH=CqF:dre
%]%c&lLi(7,2s(/7T4o0PNZQrd]k"hlFkGKdT9R:V73A<S-72c88SL"1]U?u%_d2RC!XSg(0u8`_9e*cY]I-$Hc$!1mP>-,(MJ@S5
%&;K.C"tC.^.!eQrmN@EUP.W01p`B=K>Dq(fXmJ`m-1@9b3Q]WY/$N1Hbr$i:FY!b-%M3u$"7SfbLOU'U-YijYrb7tmBL&Fo'$bWH
%"3BaNNUOFGL=5MN>'P91&.i5\GTsDhV/>O-H_l2c]<`H[]BQ-MGuIU[\RLP8r>+@pf2^hpIADNJ;upQA"^##OG=@VON(TYl;%Mb1
%(?\2V2,)VFeP!#h^Z[^0<>.0?Ci%I/f;/<$a_B]<>%]!bOFe;lM?c/(]WJImES%gs^jp&t_S2GuN@>erXm't.V2V4_-QHA]CM`43
%)ZF[a9kf1jASSa<hSWb7aF:E%M+4T#\B_pA9SJTEYm+5$>H+_X^]kX&+d"(#&AVDYP2(\j%oCZbY_%9lVU=lo6e2iC-bTg<a!Ig)
%2R],eh[qJD-^(_?^CHHQ2E2s^T[BNF=adU^D7#;"5SDeea3'a%k#roXkT-dRhg?8:j>Iiq12R#'Pu]J5O((tE;7eql3C1-3l'p)f
%]"(OReB2a"cVE,1MQ:>k#NAZ4.BD*Aq^qQ\'ELWG:N;E$Rp&HRJNn7YV%"VN$JOR7)/UDZ`QauCj(>GHbgEIH;2Z;L$Gr60S1W4+
%mg@3UmX\oe;hBV=2(G/c5[`RmnM#r91#Ff&[45cqJdZ_"n,^'HKn5#LB5%8+O3Y>R^k>#9g]k6]f`.mQ,VkTN(u7Yc!Pl/W>Jqt"
%fKMC"A&5p<q[^=i8TMe?]4l3\>-BDK9M_^sQoqr@H;+ET6jHelTrVf\7H5Z+gWNqFJufSnoi2G6=JJ=7!8Bne]ScYH7@s7\JqQNA
%c=Og<0a";W-[gRJX_?<(bD*)&+h7pN?@$3(1(_$<MFbjdmIuj(QX,1[_KbK.gJ,Os<>>e^Pc,uG1L"%7&Qc'R9#VHrPMOip(_o%t
%.VXV27pO$f.),4.`P>>K3]89a#%jSM5hJG'R_Om8%k9[kgg#iP$#+3?Ms)1O.Tc*IG*63V2hX]k)Ye.1ITE_:Mc)epMENJeXQ%0\
%o,_d]+e=%"8?1s7b#*7o`GVl]i]A;@_#=eu))dW)e.5G$@jRR::r"Ed\pT1:@ZQ2;;aMXLbN?,KG.D!MbD`6f*.hp"Tt6;;>VQ"K
%\rRk_KPb1nl5LKBKCX'h)3q2\Z/MrTJdnY,@a=4hW4^k!EH,da%K8$oS]1'hl0q`PKJ#VI(&$e#b)@HdWsBja75'"''#kJFk+pFj
%7ZP$jhN7;c1CRd%_CU"0[:)X].P5b__bCSd"6)gg@foK(ptfl*NE0SHl<]FB4l(_cAp..dZ3m:n3kZ@RPp2.#/<_%YcpJ.ZCMIq^
%UL^i=d3B\1=N4TGSLEb6,<2ehN,32elU+WZV([9qk;-lB\T`MOlo&JY.#YH7N=0_h=ZP`'*dlN)555_aTs+K0#Jj\_*s.f:#W5RV
%W*Ck([53^gr/_s;H?`Pk<?Xl26:X1t4j>fGc.#T_10(`^U(.$P#m!1L'G7?lZAjPN5,k4iO6uVGW*cjZZ_:/T..177$4&Z9QeV&4
%-lsX,2\#McDPl?7$P/bs(5ueQ_n3F+Z3n%-h:%Ak_5`e%S^:Hff(M9/S#n?I@\o$g=RPl+UfN@#h53M<d#+Q"X*"roXYq=j@T<Nn
%30WLa[CnDtpJn[9UrRL\SgWjE]$&oI/D8f6T5Jk01TJ@cg:40H&@`X*Kim]UZruu374<C9PHVT-iZo*H?8F+[FE3)-W1KL<W.j`%
%B(>*GAfOEYUnVnTm.N)-%brq<b&_aX)Y,r]n7lF$<p^%CdR@[>4m%#9+([U*2!lI)';8#/=[VT."frXR';sNk'O_C\L1F:@"(S-f
%on$/o2Atfi\L[f>d$!!Q#;tq2.8;N!P&9ODc.);2N#(H25,[D:cJ>N,n6rZkD_OY-C9+%_NO_")`#cQ"iH?[M0Sd?Fe9OQX^[TZS
%X52C+@e5Y\EA;gITg8J\MZm_8'#F:18UE\Jm_RuKpgi_h@bDgfb"G`acCB[HbhcE"=)2+n]^dRdU'Nr6[ps[]@qGg[:&@(_*A:"j
%pfbQpnu@8H(p_fQ(S`fZeJk=#V*pY^:W)5T.BTOGbf+(&Be5NKq]:^B*e8okl=eE?`-.u#C=:f#;t`:O4&aVN)YheOrnV?+\fpIK
%N6MRpq,P_,h(L!gXm/;d?=C4/SbI<ojgoT>X(H1u'jI`I;/"0L4^<rr4u3MV^0r"EVrRl&H_Dt/=?QH7M,LE=f<MLI"U`FN8d2kj
%@;,/hR$0jHZ-&01AVIpG;M.T=AYG3RQ$FO]k%hJOOD"rU.W_B)dFJ]*.T0\o2J7L-Zg&1b2RVLi0EX&LdW]K^K10T7oU9c%gPb&?
%3&s&%^faUMS`@D$]pEm%:?ur:qWth`SXs*1m%knBC^bZdeJj#][`1XuhiqBt-VQ1*b&Nu5g!m;6q+,YMS'6Uj-#BQ=L%T%J^90*a
%;4L7:XlfS`QFR@,gO>d(d%'Mfm9;@[/W50^O\,];+O5DAUqUmBA\-n:;Uj:AK]Zb_Ah5F7YVnW!27N#kBktH2WhIC<.NXZ=@9JD7
%h2aOS?5Z<jWk&/aHeQa?p??Z7^>[2pm:*&5K3gqn==o+UQ;DuDr8==11Vmd!,P4Eaeu]>\a0Fc<:C>7.a0@8WB!1\8E?0Y*gLW1E
%M'V9AEmGJ[J9oW^c`k^oBO*g:$trI++!(8:KW+8la)V6E`SV98n<bF_K<R+M+JB&r,&3-Ee^Bmmd/D:+>:MAo8X$Hh8R`J_s/EM+
%*n.<Nq_e/g%bXm)gIFI8P48TuL6uhlRqSiica.CB"Z130VkH5q$RoC/lO+jX'8r4ZJfZITlR799&0^_m<qgM(3#TS!!-G^I.q4r$
%\q*t:=K$;O-![uN)$n[laK?>he\:8]fK&dc@c$5S=pER7n>jt_bZ&*e5PbrN$kC:%OCtHj1P^.$8HgOPadnJW#Hg6W=PC7;i.,DU
%GD\U,#?biHP7Q]=biYd]rQjlK%b&KS]^;&Gdp8+(jE.#qfb6=(s8LK)r\:P=5Q9?NgQ))J?\MAG/[ko6.M=V?L.u+)J:q6?XpBd6
%-3O_ne1*di"-J+N5$;CTk41,8jG;ONXDgA;""eQ+E9u2VItcDZT<68&=#jnaHUQp>"41&0*+NS%2:cS';N!8lM[FCs_d.^HYfjG%
%9uL*R0NK,:e@5Bhp)^A3Ph/X^XJ^m%=Cq^q=gnT)Kl]?9:7E57r7bka<kLr[h&q\cU"oW_!GI4AdHculekCHEp=S&"?'bD'&3S.W
%p>SE:3#e;&%-fja^Oe%#VeQFB:_>-jZai1lU?#Ha\il!C!)_?Mr8PS*XU=cVK01nHaY,`i!te1H2V>2Z(XCkZBGnP:`kdE2LK;M*
%EYpL=Gu(&-kNiq,jN51i[pks7%N(KGW0M=RJ5M9!TtdY>%&$^bXs?D7#PE*>fS%.B*9FS4ALCi4GR5!BR@M"3?NYC1dIQ_?prVd;
%:YpN1Om?6<N^+iq[dNiO/*Zu'@:XkO_%>deSm4Hd^308H9+&f40MTSp_i`,$e"fcg;C_S![S3=mrEoNs?U"G-DuOK-6@\U]J,-#"
%I/TuCrdQg>o<827^\m+Vs2/\]/oL]ah"=rjr'.mKO6kPbnEE/Ts7O,bftVrmiR;.`qQKoNI/8U_g]$_-T4[89KE(UOrp=sZD&YC>
%e>8=h)(oesgn,(YniWDa7MEb+@Y*5DSRJBeAQ<S/GEd=ahBQlA+/]W1Sq6`G$c4f[rqPJ4]D>;SKSRSf#`4**eSc$6E>)O%\:56M
%R0j:A(f7I\#gnadb&Cc9,"QnMeP4/Rs5LmkVc3*&qAQSXdCpZ\MC>7XZm+,CdXi/GcNQK4D&`tbDF6j+LW*/)V947M_$?b4WE(Ci
%j,G+Kd@@Jai'pfLgf=)-N*W,V\>f>8Au@,bR+B$1i/*`KV0NMZM@+"dp.SG\=NMCdjnuj)n73H/*nHmpaT;C1qpTc80t\U0n)1,0
%W;\2W?D0gp^!%:Z>IPH,U]=+ic$3c)h3:Be0N<&t;-rCYJt$)6<$RAm[%i46J`NAd>j0OVXG.#?K%iRa"op`jg\;03,@G,s2?0r*
%MSfc*gLum_,o<D2[58slW8<PA;'o>g9MDZBZJYA;1Zc3IHQ_8)\>%tbpBCC9EJIL-I[R`t;M)>jj:0Y-7L6Wq3EV3=*ecGb@as9[
%@8*"3+sClCW6&3hC`TD?FbDm+FQ)V]*SeRt/a4A%P+MH*ZN,1jV`;L/,/\&$bn$g"r6ig#7N;>Fq$C^4MdJ#L%\"sK'JdsmG1i1^
%X8d&t9E^\VonklV4@Q\dg98=FN5[qKP],;&KIG]M]/cWP[p]lGd'-8Gk0#7q[dR,(B1'8?r+6/IqUsR2M<[i?Y7(5DVW,n<[(%NY
%+7'0)>7n3Q&E$[k]%ihn=P<6W,H1!'*m8MdUTpJU%`%GQ([(LU2$:UbEq]-Xj<!.f5lT_1]p?bJbn)"U>CN-'<Fl?jM1.2J%^c=L
%Kod=7./\ciONE3=$$uAi"pr=GX,H?cY[F`X`TS^Rr9Eie^PCgR9"p$P_eZi&2ECn`$HB_GdP-0VW!hpFS8p[S'7+'7mpsRi?k8h<
%kMhNomI8@PCu43q%FAK#!E]eJ+?%N*S3)F@,"leZVsL8[Q&,"M4fO&(:".GTnhJD<;<Ns`TIhX_.9N!>rcJ"URXjj.LaQPPEUiE=
%^<.4NVFrCT<;NZ*P-Vb(2'2q^/naq.QZ(\YUds;&h0]%hF"LSV$E9OhN:Hd@rf]_F4_bh9":"KQ!U,(kQ+<(!k1RmoasKK2:mar6
%#*]*WG,%:3=\]EZ;cD\,;@"]11QMc*AlKHFM+^bsr%&nt)@W?@@lVgbZ\W4W=/&14DWuc3FWpD"aXhfjQfhACk2;hKm4N(Da9C;c
%K'!'h_e$AKRk)(Rd;48jR7$ef._\KN@/UB^H3c2EA;;!L?P)Z].2?68ABI(]6."69=*hi<<Y6ouDMhcB=nt5L1+AWN&_DjRe8Z?Z
%pEB6-J_@+McX@MU#&'X3LF_=<p0o\baeYT>M^UhlP9$1*n79A\;e(;\bn%FTJ#Ka,+*L<4-H0(G998.qd"6O]Lms0Y9BS@n-,i]"
%L1[OAU_rr%1YY#%8[4"V3Z*]$/+VdZcI]+n`&+R=Xk[OI-6i`p@i.o,Se2@kZO?/f&IX8D<=RZR7g\6ZlLd%[#$]jOif?<)OD5W)
%:-\Lg'4U:&XqP8[%+bfj5dJ1+Y7b<gcrS>0h5QaqHl1Y%DQ7BrA\iu$A>_F5>C[EN`%Z\&=/>,G+$.'1ZK!E?-cEHAQ]@\]V-e*R
%@`ZsZ5*$")9[@>7Q;=E"p<![rNU/PJVO=s=LfKV<\*K7qB4P8FHI,:8]OBhmN_6j0QOk[c*%BJG1&.h\3Bm8sPD#=<qDKFm0=f>_
%Ymcm@\O.u"Tm*H2o3:B9+a/(qkU"%H868$2c:@J4m_8HlhTMsq_l0TX\4MHmN_88!E0Ul"=WHsR*o%U1p\gLgnF2M]dUE&.EcJ4'
%R"&,YfBFt!6&tLZ+,175]Cc[00FCeeE]XSg>o</Rrc4Y/mttK&c1e],N@<:i?Em'm<D/ZM:9M01bo6e/6mI7g"cp8#(ofm(F4@aa
%&Xhf(^"\if#NUP,>Vctg>Q_ATF]hd2Isl=EdL8KY:4\TaI)DS7'<U$/i/D+^CSdE",8V.L8pZk\g\f!'.*0WmFlV;N0X)X2_D3Qd
%!M!VWX:h%FqQDcnj`b\!0a,Pc8s'up#hbrf6',.&//H1P/2"s)9)@HX1!cA;DQLd*U@6W"q$`_7Q3'f\m[Ec?N2?r<mX2]1B5;4n
%a4mC$$F2GKfl/^c'0r!qf#B=&f=I5T%jQWr+d=m;I+pIYleWRV.gU>s;@4&Q,)4##Y[FYJ6n)Z#[P.<F)+FEmV_1]-2rH'teQT5e
%=`R2JIR<;H1>r46gG>U@GW+m.i'X`q*mLF@I0^Kt/h??)RQ$H(L^q#%IZ2Nn4V?VRph(Hu/;0Gi(r"F9X\mq,YQB8Q"M4E_@Qh#a
%R:cCOUp9Mr32TO^[@Jo-C!AYB=!gmH^KR/6Q*cfGa3K<Va*_NnO4,$+J+X!tf4[BZ*5PhN4c'ZY]Z5_9ZOIIsL"#tV#BZPmD`9`Y
%\D4\Y9e0+Tn?G*+HLh'u<sED%;u&ZC8qJ^<"9Jd4cO3RpU=j-C1bU6FIrSeDFXP;S'D(#qaMSI.1=52A:d<\25l&(?,YpZCTHj((
%kO4`T6]0._!eGUCh.0eL]d#uWA4_"BK"u]lB(H3I..B=[I:73G`b@o]BlZ!-EPP,K[@CLp,pWUfNYW/6gIs<4!)Q"&muiEQTG1Ju
%@(7JD:L)`%So>%VLc5pA6=Z/",9A<eY=QZ+Nc:<--T\qW]`@]mAd0fo,q[6?KGi"Z0KDtTm0Y,Br3e=*0*Z/!Gm%f[jLOPq0^6.c
%]NFNlKm^3Qo9-RT\6?s(r#3\J+<C"_Ah1u%oZ[[F^S4F.16nQZ@K3"]!10BA)'R'G\HuJ$b5TtaD*:E2d;G_'A:q7C**^D#720/A
%1IQ0PCe6D'Z1P<gng0$A[#S/MZ+7uIJDR]p,nA#trF,81nCI<)M%6C/2eY+ld>TQ#0m$%/7rQ"%>=UI1JAe<)8?'j(M]S<dQJ=`,
%1"r=<YaPCA!6[B8+mnhS]S%osCSo:+^lu-D2HrstA1uaZ6IN!C-$Q#!mP?]e9:cQ;"5A&#b0K&_D3'jTqb?&e;jA30RO3f2'q1bc
%\0e?+9rNM!1La(Ulu5mf/@,S3EmK41[^L8]qUV9%']XV79==!R1+^a=r$Ul@cm0o!-"P\DH2jDq.QO!qU!Jct7@W\pf.;0r`oJF\
%-eBnmV`=a0P3.pGcV#mEL&sJpOL6T]#n=?ViejMFk1usb+X]R5jJ0"8E$A?8d_65i/C!9B3X_bnL4"qb=/p&/^n:>@_-^%4:"bG)
%A>3qUVHn$-XcV/>Mat8@@LT;0$)(-s:PZ[04hrM`E-%>)I$,iZP+Xq>PJ!Nd:=l[&Gr+qoa:XtHpSgqL);I'6/K&PpbNJ_)1uS0L
%F<EQn-0GX4W.6TJH(Fin<'ANdW,uK>F4['1X>5'[]"W^il]XR\ZF%QT\BEr$<K[k['o%+1;FgJ8[ONt4CZ"6MfN&0c4a-jgO0q8/
%3!(?I7]&#aSg3b>2$`j4G2L=dc`UO[7kQ"k:#pcZJ\!CsrK8bWgd?\aLL!*&Hj'#FL;d37;Z*>-1NJSd,t;uXi_e:e"a0[I"\NGh
%YT5tAVfE"*:5",[&(bMS$kV6mF<u-t.kTZml]*k#?YQ"7^@C&$HN!p?jomM!#osH3hhfUeodOK7$X,/dPlXeSbQO:VLm5O+$KTt6
%Q5F:BU7o@Q7J4`h(90%=?U&6q>N,@#7'.DP,(([.Jk?6]0Kh6KPD/)FRVOAd4L[1)'2H#2^^oCOK6T\\G#+f4`SsP0WF@b/0MMcs
%;.-9"[^"5Z4WHH^nlb<_8,m^?i/@N'VTCUPG;P,lrr.a09U*CVq;mjCD0mHcAT^u,YBA;W.)ob&%4`62n"V0nH6`PnG3NUa!X1Ke
%LBsQd#(hV%aJ!pJpp=6:eIu5P5\4kX:Be!/dh4?9%,#>qBLPYt'`GDTU3gcHhB;QC&CGlp4hKN>r3]7%0]ZjWAe0.geY0(ZT?XGX
%^q>e2(:ON0b&r,o7MipNi"f:E7;p!)N2<EV),kK?N*17qX6"pO=Q?+WK%nNH66\-@h))qjJ<9q>T50N!Y[*+)hCqi'DT"*S-iR@%
%MJBEHgb,Sa%qe7HYoBoH.?rE;)MF&m.aR>-BP:Grf>KCU_n`LA"BKd@i$!"<CaA;57s61tJ&LX(l=TqoMuWEC^=`,W$`N:;[P`M`
%@"9jm!OUjN4M70mI1fs@KONeI>5Z3Y70Bf[lWQ\akB*U?2g1J"6gAaL9n)_R5ngi+=sR%T6<Mcm#QoCK*('rBE[<M^QUO^UA&ARC
%L9WAPWfSI=3cipZ5RG5&(4,^dkGHOW%`^'O6(cA0VH''a?/JA^-aD&'iHMmNOU8+JOUnaj0X_UWeR\1Z?kWTR53)\l?p]la5ZUf'
%E9^0=!9dN\3Wq-lSGWiDkE3ZebB"0/3)gRB@E2mk+M4]k(mco3Q,E`"J9N?$HK-7qlrhGeC9rF3`9A\==G`_Mk&&6]T^?Vt"1?)L
%b#*Pa3$_GlP?@LrN2ms?icnpZeDZ-?n+ksu2n6,#W%_T6?S&V,8]ZnYQ&RI2__:0Q8&d)OO(f,6$a+R-UB_2G14d?'F>60T%+io9
%^e+/k#Ear0*4;'](?T@`Un$5\='pLCAEs)Vj7).8C0tE;)[[/+Dfl7"W/YL>nk]OA!4h_MRk8A&J7piHZ8k;$Q$R9'lU5s8GdJep
%(g4`_`FF.N\B9dtJe%%hQ=:`(Fc.GfmZHk)NL>[Q2j8Yj5uu;'.=#h,"iOkG>1I@UXcPp%O)3RF'hd!U#D^gZLt"E:.IYjM[-b)J
%;t`k2!%Ehm:q)m-IfnVTq1_kSXG5@JnZEf0Ol*^/_hHp9Cq%:!)a'YHMK:d4n861Z[G*Nj&t>-(&eKek]ZOh'7/m8%)B2Bj?NqAA
%#"1Z^S5oN(6k:/WZGL5^eKh7LqUjEV"u9\So+VY,!#OL6jZ,VK'2=k;nnj3`W-^A@W)K#ga_3k@kq\N<9]3MK?)O>Wnd80Zn]p0:
%=lUMcam?lYNkHGd?'c5G-!h\EaJCG1PR5_H@3/Q1Gtfold:NRp`#SMI!:Z'\+d9I`G,&b(W3F\*bj&\4@h\Dtjis>[!5_5hXSW>W
%"_20=8+KmYDuq!BYITF<I@?KlP/fNgJR$W\D:e&OgCB[Q(muN>@C@sYCtZ4TiX"Q7.ValhD!c!a[:KDtBOLgN^JpkF_dR<Y7"M_5
%9fPsM[JG8<URLEM5V:m:Yc!,<%G?QDT,tW;$buj]2abKMrhcSIrKsIYlqjJGd2p5+#UEB/WD15a/Ua#rS(N\`16PhL!'Y;O3HVIl
%"JB1Mg_tUJB"XsXB^fVRkM[[RQ(=ihI0>ig,0A&dFt$\_3gAFMbj\q["VRg_%kH"g;O.gWOVUfk4j/+ejBlt`C3*X%'=8s)(%gSl
%>&VE.oa['<QVH"$;hC8_2(?,UcA=4?i^q=aO1I3DdIK"of;"i+?&l[<aJT7^p":jK_#KQKju$6q;*=kDX$MID:VFa!B30I)`NHhM
%mTQY^cSrXG2sk%*Mmuh"=%kAM2_1n(4ttuep5LH>p_D#W-uM=E"XuP0#Q8Im1@e;PZu#DB4$K0Lg#$3##iH08>6umh203?1UJ)WU
%@U@MJWrrV!dqfYo*i8%^@>L)%_<[+t+FB,ad#nJbk6M]`KM:!/%U!T$#m3q20muT?o&'\%i&[O]aZHr62itbtXO6HW5*8K7X\CZk
%P]`u),_uhN$:(F&b\TX`7^aIa_b)ZTS%?34I+1b""&@6Iag%$+Tq`a/fbZJMZ^)Nc<d/r^1m@SE7;U];`ZUt"P9/Qb/I7GO"b<(:
%hoOKhKN,?gL]@kWihm'Jo!FS#Y\hEo4_!)'#T\G_XWRk=N)m%tf^S8hQ,O\:Pr"%,ZNtKo2!#LK_T?B-1MInORed4Jj$P=O#e1(I
%1rs?Vccp>*gJdpeMb\^D_uuu'<`6icg\e.nV0GfGlCQ+p<Eu5p9'l]SZ.h"08t%psK.)ALV^nE\kS\r(U8s\-d@;Buo'/9X;al<i
%-q]Y@Ra`KWRM7pE"RKM!</kc66,3ZjBof<F$&/U)J^dHDLRMog6<K4jJ\dX@*Yo$6(L>mSeq)F6&1^^:2oPaXa!0(RA[M)$+9slU
%DVuWd_XdfNO5s@Li7iAt=>XPo.3o[\HQ!=\'&PcRBT/K:L0(Mdlb?[D0m'rB@4(U0Hh2"WLmu4TkgHa<8UXSSi?t?)q)d9*9T=6l
%#UbD[4_Ep`M(IYh(1">3:f56<@=,kQ)!!P:gN)2Wgd9otk>so!r]kZLTQ5so>I*=V<O3gj3OPGl0=P0#O01gfT$2(#@YhpcRnr6O
%3s/d4mLs-b#p2HS`(b,cWEd+1+qCroa@NG&"1>R'&[Bogcjs&;FJ#s42[B;1.d1A\p&S@A8.KSZK]nuoAS,NJA#6MFUeAl8NABF\
%GK*ipTWf=Je@"]pK#(o"//^D3;#61@c8'fOoDflb*R3KtPYtW'9V;OpD."d!paOcW/B^O,5`jk-3P95FU-c]0?u/B[DrYWmfRjGm
%WGKCM[\`AGN9b/s(Do<0;DN@d^N`kpPr4;bX?%"(G#A7raGe%Q0Eud4AGNlg?]$MddMG6<W`^:e53l`8r^[`UaQH.oh6os]f`T"1
%,BjR4EV'FFq7`p2.U\o:qfjH)H1_XI)9!:7FEF3JKO5[H)$;TQ^fJTYmL&G='],uA)-68GJC8"H`2:\?[8iqb[!.:XfPWMrTBau7
%q;b*ZUK+`XF)itp%5h=#@g"D`(*69B)h(t:oo&AIBkB:;a>!d"%+\I</&APAXMQN+%>7juNCUM!4KJj\S*h4U)<`X]W5\g!gb);H
%JqSJ1^U[K3_:mn7E:R`M'ZNmLbhQV^)WZ?KP\d?XJRl6U7L`X9,IHYH^8NhaM01K33:nbU+5:aQ0H*h?j(l%^p;P*u,m/2;:-`d!
%/j%X'fa@QD>anDbX.8Rr01tNC$u^I`rr^Ks8d:Ao7,:M=L2hi^GC'\lO6u;LS-_S:i5nM[b[]-YXKi!b+0f2i%GSloa5R.sZa2<@
%"XhmI"fh\NVUfnoY_D)F0$D#DT"k6S$h[8mm*G_2?h(lP%$1F-3^EVdq%3'LVh7,3Q"U$4.h;3ts8HqEn,C:EIf%I+rA7]glKq"n
%QI4ZBTa(O@dn/Iq7EVd.koHgc>1UCFNhn](MJO43hSCjDJ./gDgAn3DDH6>^2fJ]5jDC3p4UjH_hUcd\GIgUtn'_)W^[WX1*?<\u
%Cj<ZU:'ToTI5f+9hg!<rE:R;$(DlAQn\3o%kNi!<Vtb.KhcQb2a89t7Va'a\$TR/R`)i0T%W@P>5f+PdZkl$7R3T4O%^.ia%V+6s
%RR=Q)c*%Z7s2M*a5!o7lknsA+:.FJd3uR46hg*tQ*$j/#5+FVQ-j=J/`h%h2P;jOiq!e^KO5oPYf>$iJSe$p(Il>5`/FhsY+8j?P
%/L9c4R@+3BRu:mfC'0;@,iYMWifR>rCN2(?^2Tn:\*gS0Pc[r2I`\X[c``XUIJ(Ai3AXs4+)e!b;&2C,J1\JDQu_P=r3:Zh6at+i
%^ga"oJ.UqG/'6/4JJn\7@SH6BJ_V3u&?A56mAo*-]+@(*GP(REli6HIG<KA!m$4*"mIJ+nTS"hVW0CAAN]2^1&</p`6./jW:YjbT
%d.?et+&5<s"7pVnDRc3qo)*,aRU:(j[Ys3Q56R;KXO`=$h>^k0:1+%pVX;J*oe6&,e?[pAnq@6s1se26$L^]g+4SdNDU&p/?Ac]2
%J6&ps(;#ic$B:'DdnLESabK/5Rc?Te)N;cgWsEI&LX>\]?iTg\l[F6ZLXQiEf:@tbs)L0Co:L;,j./>_?7j_k7<\2`;tRL:,WAQo
%rRKN/c(_MrL3Cgaa/J?lD'A4'^O?&bYN+jIq(JX5oHc[=UbpBQ0H^5:)_^:.QX*p&YOcg]Z6(/>mnYV\mY:Iq[<cpkcNeap.rX`G
%7q.BG:Fnn(_i!8P`ddNA!en$+ZH7jm"[?ZTjUh#.)Lr(prG@Cp?iJ&hs4Q<Y596?qbK0b_?2$]KrK0$F5Vu&5c^Ua7#SPNaCtW1b
%)l,[L$D+Hfm3o]?^\k38n8*2qo::j/)iK%u`q(;J:f3;Z8,-u:5-$BZ18frLf=L_GSQmKPeC+L=imd1:I^kBo69W!5&BG747lR$_
%R$M[J<fGZR-'(ZOPg+fqKEnB"\J^:Xb^ga;mc*+@c`K7$h_4>0ldM8gi3uB5.00\nqF#W"'?Sf/<Y/(q6$[(kOlXEJWQniMiaTVS
%1<)6=:.eHT$:[Jb0P3aggV6b6Q4RYcpeP[of[0$kURBsX%$>dQH_+7IOm!?E1AU6/o6)l$?QZr\%4A*.#WsD4$I@Fbo/2fY;Phn,
%JRs+7)#udh6gcJLc\)1;^E7^-an4rm$@'Dg,9BOrce1PO6l4XLr#ab=[mqN*Wl_:#;"Xq=k/Fpu\HHq+oWjL+o/]))1nq\2j:dWH
%#'Yj>BrC&PHiI;fm;4Hm<+t#u@M*?bD$[uf,7lpcj_;Lj/)9(1;9."p+4oVNGlUP7$u5[#?"p'kc=\f:B@NkES@9#OoH3Imo5U>H
%K?er>df&$"(%5:nT<Wn&ak8nd"+D(Hm5Anfk4,6Ffd;AT80-.a:`X5a>X"`L36Sa&8sVg!]R(A?LHg7fni,@Yhi4:P2O_esK:cWs
%+J<gt3qFQWd2J)s5pH3Daa1j=q0r5u/>h%M@Q!c4B*G--5+Ls^1E:i])LYD.MR5fFH7!*8mf4XmDu]k-S3Ql=X2D]Ck-d:&X=E+f
%\ufFUNHu]Vi^(BgFDu0F,50KaH,J04XK$PEbS<8p(Kk5'asdA0No!nk*nmC%aaAGa6q<A"HdB0%09'h(r/0%bc1>ePNI@)m3#4Ic
%W<!EpL$,G'"rP^KOH&=LQ+lA+AuSLCfOq6-RY>UEd%Sk"gB;r$:)!i;\$`).gR-tQ+*#>[8g6MaH2fgoh/3.'I3f,tC^pg7!j;ED
%+'VH`eKk9C01Hr$d4RHtbN5S*a(d7,05MaK=Z(+0aM'sRSHMc:1fnTU-_'_DP^2K20u8?=?k.qi1;3\uS!cdYja9Io1LQ*GTHeQg
%"gsb40)mB4j_\#ZmsW3*K^8`T7,<G3J>\lNWP7'Q2D;!I587rE+<EfY_g_%(\8rLs6m2qg\FAoms6e5*a\XTC%NWV26,63J)jGaB
%R=49D]eEH)3@E^6+["U4V^"6n!M/K>NQCUHd!>ZhZSp!r*9f\He'a%?im:l%Yb%l)7b=YcQY=3$UgJlh5=qE&T3;XUBOdW#fE/&.
%f*AL/s+g>d.$k`??3$$%I>@n89To.EUX$$o#8?c=:@=mZE]0Yun`t]ddNp#/Z``MaYtmRU\OC8S!WjLd":="$G]MjUODN,X=#;L/
%ZR-'+o^`[tR)m82GXpZ*rr&JDqlsC4)L=*U0H23?IjIme9:kb8RJJTBpX*;-*R`ULkUOm2nq`!Z[5toaA$::DZV.5>f9\(S?&tk!
%p$mid-fkCg72fr@b<_#"^NbnI>D<35-SKuL#PWBaQPYDdT!"^uQBi%1_.Wg"i*pRR`OL9lLH2dR[`QX9:.MKl3!Vs'"]nW>lPb6D
%D=XCH/7K(n`t!G5S:!rqG73G^\dbWdDE=4K>,=2^?K.P=iirC?IQQH%rS=+"PHeA!)L;XLL<ShV;ep?'1AjUj@AZ64\UC\^cA-L&
%"XXJORH=?$VkoW#4hpr-q9Wb5A'*4@((f;gXk]K0"Nf.oG?_VSW.[gEb1M?R=#WnZLu]_PFn>TVIsOo1Ed;BcghG?JK5U:RLc[3R
%.3*@pFZc+n%s*1AD3r]pSPI#-T'm0F*Y(>l5@qHSjR^PkkuccO^]]uj%Gj)PHBP8/;#qe3d^a5q^GC/i]T^klRZ<a-mJGf>q)oV=
%ji+J@K4VMHp8jMU-D/0oD;btj(Zt"XSDT+Vj`F%k;kSIt3*I,."_oOd.GNr/T3h_/H5FakNFe/86j4'OjM(=/OI"/\!H_2kY8Ujo
%s$B,i*nh['\UFGR5JHl%\\'b@_O(*)F$1Add5drJp0JR$q>K&4b2IcU=3cSC3X**Z;sA<iLf*sFdl,B>5.pAgMLg7%k>pd6j]138
%/2u(\;(X4uS+-eWgmXK^P*.%2S@n03^]/q55Es>a,6tAX&dWrY$;,m43?-sR"Z/o!4B!?`j?D9GV^"6nJS0JH4%]d[CsbEFPeHX]
%cRlXPj'FOp'qQi^'HR0k9eq;$[p=^T43K\5?ihc\-e'i!IIR+-Is1:8Ed;Zc?j?*NK`"9-WVAL7-@)/CBBmASh+)hRCdb07?ucr+
%Aqa/Oh"c$"b(i0lA?&A,14dY"9cBR1&1R@Q`Wr`K.@(K:Kt-#';0NOAU0:]Dbg#J2s2hqrb2pU9-h%ZSB06ntV6HYG8%7dHbo][k
%Vs;0ih$9G2F@<#_TL0WQ41-JMWHhdiDn]@<o\#3nDe&Aui0mmr%mc63hXZckkMgI7R,=VjVbGlUahrR%hnT3ITAGd:>[AEI!49B#
%WdqfWne-g>$+<4jGcj6Sl$]dAcA-L&"j_(e'IOZNXV+Yr_9^ad+8YneD8Kf*IFF6UV@X.VO$A.-U`@[T;ta0'6M)RB@8RpHTpM@`
%rnS[Rqk78$)ECQ8pG=6Oi>%ToQ?L2e:j&t-mJGLbR)Af7YFLU9F96PRSNm6HIEoC)l*oP"+8P,<\oG/2;^JWU3m_(f-S5FGOG`7C
%",#Db*l7k#q&!P.:>fj`qV_>@rp658jmqE`.iL45O)]4qdZX?BKGUS>%PQ&V7le6n\'+#t:8bng@!-Uh4&UjAF]H3TG595B(PJO-
%Q"C)kNKe-Rr,A)o>c5u;E(Dl+pZolA1)_)if-PM:me;3ODoZjCERYGKX6:e`4?oB4d"ctT%s4:X4IDt+Eb`oZak:W.#Hs%FVCBfs
%=q5PS\)&APq7L=(ONPif9mndb"@;=QgfE';0,]Gg;[9j`3(WU>N6<!f'$u*AT"k:'T@s+8>[ACrL36UGWbMf^a^^o_2WElu4e/O5
%Ec)t9QI?G:c@@P+Pa[Qm\SA6q`b,%nB6S`@g$&\ANi*fG9s/jin<L?8gl2#e62H4626$9n,M?f*%S0jr*l5C8rVJglG=/pR3-*sL
%)(J-$e8eda)RJk+#`@sR1\G1:m\@I92PSY,ck3D/rRoGQREJ3Oqjm;O:G1;=a-p>al<[`09oJ'iY-?+Cius73]7\d=o'D<n+FT<.
%:n>9!r?'kmZ!:TRHU<utd2741iHIVN;&2MOBON".eV?/tO1*6rOA;^hc=o+1CNhJ$lE#HWG59MJQZT=^muoa%=P>TV[g0-g<%*u.
%(hpOBQ9Y*bbIV:PoIUJJW4E5ADI<GCO73$L/h`5JDOte>+bldXng9sG!n%N`$uJ1uWXj/s+)R=m+e;AZmc;_HHN=?h9Wuc,D7=oR
%e!n-;e`*%URMJG(X4B&N4W/Y9-.#)6jpRHK:a!R6gam-k!<:SnnB]k`^\d&<17$+A@g@j.deQU[e0X"-5#u%Zam216nU7oO:5<pL
%""$M3T0/*fF8Ysbp<#lh]\@j4SR$NqOP@..FjH:iFU2h_P\HQ&Rpe,^Pb`l+]e+4A7>+,T$'"N:p$_nHSrDe%_U,bD-cCgXLnuO`
%PShr./e<B,L[JOL;9nUIc#Pk@dj`Y/>YA=W]!(bQce'fkq=JPs1T%5[6f_%S1o+\.el4aqPKN'VLCSH6p_X;CJ=\7kbP^=r^3T[h
%5J/@2\\'nDONn)6NP,WqA!>4qQSmH&R&Z3fH67!idh/.rJ1fm_BNDU'].0A$`b,%fB,;fr`H(.rFV8ZH.LIngPoFQ1d\[(#j7@62
%VT/Ut-(_\sg?6rgPBcZppO@GVa)ZH>kQ!h`g:;9uiGA(Qgc.^[Fe.@cf70$kqe3=+&*\0CF<_%2a2XfJ-*8-^m<?`D5/#^!;Pkgq
%d']/0\nA<XL"f!Js"5nETuQBf\`>&94[-(k?QZr[rL_sDZ!:TTHi+:!CY@02iOVaT!3,G<A:%af50EDD\6D^`F?0T:P;a^U#'El=
%rD2)u+8YU>P`cR7Ou88*SJK0UO\-G3?m;)0acUmfHdjCQ.F^;O;VV[.YCHSMpO4Z[Q\JhT*GQ<@gCQZTYiL(13Q[b;pNW]%bi*uW
%=\a`o3X**Y\';Kh&BD<V8\=(OTAGH]Idr9P1gsX\bYT-cCjU2]jiapP*:ip9/uk.(K!jV/\GCGGhZ*S9n,6?@09.%Q&D"q7NH'W]
%?clIs',Op.O/D3[*8a8uj`F%+1U,ZnWgb0jP'Ht?Hf[U:?BVS:)B8ek91ZnLmdlgc@dr"[Ej8)fm7`k?q^7!qa"#1iGo1RKmpH+_
%O7(+d/h[]_S"C>#6gLbdg>k8@#,QsQoANAkR%o#B=3a<X2?>.rgHFBRgJ0E"qDhdA6_E03\Ps)5D,VAP?[L\].p90Qofgh"&+q]=
%?&JO@E@;8/BHo,2"@<A7e[/pRQ"T"`0]M!Mch8/jG@mrC9C:T$g!`&Kj-(4)Ku8)d%f>iW$u)k&M%!n&67tbJf*o'_bJDJM>WoW?
%dT[iK`+Jt'fA4\X0),&lZC%rV*&aHE[CYQ^2i@5=J+/\(:SYR8ij.CgQ3Fp^9Ce$6a3;dQ(4LaQH"R"D#=n8qXX(PhrsWYo67/Z+
%W-g0`eT`.Rp8i\9WHVac&1o7>^(tS:IsCqJm,`83mh0)_Kl]6)CjXBK$>mUsAe#a6XT+kSq3hUjGRj=E0`gu#:2_j#GYdk-FK7"1
%(Eom3'STe6`DZ`]!HV@F\lo&99\V"3DR]I_Xr1m#Z'D2o:*#kY;-/a9ctB\_3hUL?NkK9X:n=,JO>&]`jT/K`M_oRogWMab41/h4
%B5o8q&'kpVXmO$@\L$7Y!IlfIKntlT9`R;Y%g"nk^;`d??IB%;l"i(t6uLS*(@*9H<TY22>K!jML-8<;--VaIQIf13/A#K0Q]q*7
%`Hn)\Ap`69l(F:kXUtKE%44oc0l+MgcGOaY6tdE3SC,C\cgh'fG%S;fB\I0RUreu09d:>66L1&'R'iFVT1*M?=L6[1V'%T];l4Tj
%@'N2<j95eXpu[P2A_-U!kEieId4h/SlF!j)DA[LC6,,oKGG?)c^T7gnWK1P"P5L$uN(feuRlXm*c`"3o$qqRf/<$RRe$r]]n\t*3
%/!i?p%N%l1<6N!jmkIn?n4Lc;hX^'fcXOmh`FQHQh>UdZf/(m5M8)bLr*,!!;_)\d8/C`*Eag/fA+^U49]tFML*Y;7OGXq90t&c7
%H8/<s*[??AQ[aCj^"plnhVQF@8I[O<2J+!aV(d3"UWTPeTDj$4VpX<VC"[B<b5s.NX)8L6!B]H*Ru,<EX"VK)Kgs"^N\R7J9J@;T
%%/D]t"md'A6k$S1)+t9a`7b+PZb78pEP;:fX7'XRQb.UJ(e@!o4BX`tHM=E&!60r%SFYrJeFupG[ThIki.\r7#<6+%pW,9*Q`!mA
%/qJEq>%Ib#"V2m+(RcP3$SW!_Y<ha[BIea'L6E/FC2-r,P1Amk+('M9pN!gVGOb\O0ucPVK.Q(_-NThboW+mkH5cH>PEtU%[Oe(T
%kL,/Z<#TOY^PT<[Zhc.Q3F5/EgmNVihK/ur`ltE8)Xhfp8L'!8/Q!Jcb*%V!Fh@LflgF.8/pB6\%&);AOg0LBbboIT:i>IDcM7#_
%RX6A0]++/9s5Le2BhdtDPA9tHjQ*;J()&2RTiBe1a(Y[j5G>#)+)a'd.n3n^HTb8)_94,SL0,)kFL1u,/+2e2/pI&MBrb9u?F9k&
%aQ\CT#nJ%t4Qk8DkjFkKCq$c_!OXt-#,W0PNMY4p0.p&&^Atsn%-/+&QEj],5Zm5-EUYG!nACpZ-o'X'_tCfXc&'F&S+Rk1IrG(%
%\[Qd>eFH3Bb_9J)J<Je*oOhgagh-A[;;X0DfktNIJf"F#dGX,K3VNAT#g6.^09ELV<jX&M15.]WpX.-5p3^CP23%X,27kfAc5+L'
%[niZ\JcNKRocILe2g`*jh0[&/#iY8F4N95'i]W2#E)6Fs<DTC'-do<XdZt'dlB".S';dgnaZ#BKB3&A5ln4iD.^@#Kfo+1C.+P9l
%R!I7d,,eHj#?h%Bo:M)d^<OpnO0?7+Hb%qdHGG>6@`t(ZB;#C"fg)BoJZeTVq.J+3;dn?sC!2)Es8@bEY."7b@m&QD9?U7L07^D]
%`$Ir#c"UVJJ!(1N%0UQnf-@S%4!oIS?o4XV=R*J3Y1J/NotB2)jmLt5hD>Ik[k0`HoQDU*D-8PHS+WCCJ'Z&E];7(eGUqCMOGsq9
%E4pWTEHu<t9oqO'Bmb'PUc8[J>37eV"im,=+Ot'`Y+V"hiq^i>$mNAgrpdDjFt8o+>L,Q2Lr?$YAYJjYO!t3HFY-!@g8t<2g3Y"p
%gDt,k^e6\Ic4iUJla>pq#g604/tfR%-*jU\,NWSr&c-0W#q-[Pnj]hB;4$<OF7T=H9\an]J(O!N^@pFOj`5S6''kNK=N)9F1"UH)
%6(%3\f22+ooq+^#cbsD,V(E']q"nB2n9S?G=hf[#4L>%LM.2hUl,gEZXQ/1D\i:)h<Z/;5Bt=Sj]V+cka3G&`@ck>#3SZ1cnCkM-
%b2r'B.n5M!C@>8$p_`J@3-e7WrbRmM(?I]CQ0jTT%!^aW.kfsIa"]"1h'M0N't406]/e=TUQU@r2ur/)lc2]=1]q0ob+sJ%?r'QG
%Mfhb[L:LLciRRXF-^T0!cY.TpggXXc72\OYKCiDa3FgRFB^M4\lo)6,5;2"o()hI7"@;i!P4Hh3/(QBL"C!QrVRDFsAFctYQlk0/
%_1r-q`,10;89"2-\N%@?@!AsV_lN3;0:0:t7u(Fu/EOtCeL8Jt3G?oMeT&a4B2RMaES55Db6$P>.1P;.VNU,RN8IuISlpON:p_0Q
%;Xl3(Ii(j#@dnY(1,HU4@Rn\[S2(;FoDZR2gmM2Tk'I!HfAG>r>jh$niB`.$gMqc]@2aBZ$ao\m;9tuLB<ni#dd@%%^m_M[%,N[u
%"P3GXatmgN(,mm@8mR"7bkYQs#K!9s9UN)T0QM6._5.<cT0B]HLa^mg1KBq;+(')-pN!gVG>,Vj<6FnhFlnmAhP020!L??^Pg0'N
%U:dD`ZJErp"Y]fPS/`m&`]1uV]t_'>[Jg4p]+Gf]O_&6$EuYQYHEu!oB;>@:]nokSorRc#hbTKII5tI1nb)X"0:0:t06dqo']'".
%"T"XaVhLtT=oW4.pIni#>M?B5Qh$TjeNS_VNdLU#`T=)l2i2Q-#*6Sg"R*Z`i5Wf;hjj5'$=T/l&'#D!3V%JgI)lAbc16q!^:/I"
%gtR/g07"0C>/J$a<)4?fR+lmp8SscC)XT[$QL1!H/E!WMgLU.VroGk,q>I/OWO3O+NL-M'^ap-2Nr157EK#nl9t-:p0$ECRUtJpV
%NF)081,RU`5JH^FmcAJ-lOg<DKU!"A*Wq^T&(/X/)mc0Bl=lLW9NJT+g9Q7NXAM(N#A*TRRJ$R-o$#77M9.oB@6/RcPE`-.SPQdl
%NY-t^>!Uk!bj%L__]kD<d(jqN;8-B8iK\VnQcn3uMtT&]e*'XKaBTOpf0POj\W9Zq4cB$*$HmTc>8Fl]ZQ]DS[C>jLN/Dt3EHu0`
%c%+5JR."n3[`g1m0KX5!q_=d!p=0#5;J0`Ikc%cI[\KoNcZR]AYQ++g]@kBhhVL]b@S+4tCL4=JE.:t>\tc^>oM]'ZMuK<*bB?N_
%(@Y??jlDej=]XJX/]?b=oiD6V6HIE7fnGH.6EW_<*1;&C%G$fc9temsC]IR2KIt?3J<QJa+'s@SHb%qd3nds]EuP:3EKPTjaR(I,
%M-9,glHc3;Vm<VadZt&+0<",31-?J`*.8K'H"u/0+1"$`KMgcTUgh^k:c1Qh9-e"!7[GW<ZG[Og+uQ]*Za1!QZi&kLm`ecbpN@%>
%^/P@@Tf#66Vj*";(07X"mIF&J]4\FTgX2;f<9YALd3T#J3516J4L==1'TT\b&J[Wl^uF/llJt0&=cgRHc)Y[DC3]j;+Ot4/#WTrs
%$;(,@rJ0"\c!E#HpKg)8=U5s$<kf77R[H`#X4:skrj-;,WOQcRZt7&]Im4_<Au8UY'5;`,ou4;X"cTAhjZJUF9Ks:pZUQEpm>[\_
%)I@[T!*Jm&'MO^X`rr7)ocIOhDte:_]D%6r!5sl<Glcf5"j]&/SEGiW)VmQ?Q0jlTpJ6KL5hH21VrCV<pD9'lem-_R8)bZ8Z7IFC
%].t<lEaD*E'(>tUG:h6lTWY]B^7(EL1OZV-j"'QB<\AT?NYI`hX[R/93:Q,N-]=^H^Rd1FBb^;8<-C@WmJk.Th,@PY)`.$Iha154
%>&t?D&iNU&.iXO:4D%WTpQ:L#*[*IcD9cIJkoS6G4r]%Aa"cH2HMtlch:oVJmd7\1*RNHZQ<*6\6&WI:r"/0Q<nZ\KrMS'"1ND)c
%C!-RXFe"RGJ^$h2^QH#gZi67>0hGh%VDcG5DF4$qEqFpa=TBIMJLkXgOfi[iI\F&+9N:/i;7p67iRN.YQcn3u=7ii(Trn"<F,qq\
%GHhOq4ge3p4cB0.9$;BN>8Fm@pPi>p]Th\#8]t%JDn!GQj1?)Yo/u)#@AcW]CDHoQS^'-VdE3WLTf:Q>'g/FB3EcCPeb=5?Qb.T?
%5Y=_a`u#?:O\ji\Y*f*N:0I6Hg3Y.ugF[8F5cp&,Z"(#\hca4^rmLAelAIj#bf13rcD@HPpE'8>E?QPR^l>Vq.Ye1GL#/<-hVI4C
%+aLd!j(n,.<\AT?%b0+UP59L?H:\[7SJiFP0&J;\1obmL.D$U;)=ZWMQVV#0dHl^Yq^j)TWAPJ4#cl`E_O9A."?Jm/6+>BW4on^&
%MRQp`JTVm*q34$EOj'/UocIO`Dte:_\+bh2qSB2G^f`''*=J+q(-!%UZhi-!n!UCr\$Y/qQ($Z%LXdnJVr(i\Slp7n8slZ#^#=[)
%@Tn(fZ!.M$ON0Hln"?EZKYF_<MntIJ2D4(#2#V1^LKE9cSQtT#]L#Y%rE%-(:p!>I#@$Dck'=tFB2RG?8_Iro]76jPX3TqV%bR:q
%(R1gu>D[&7:.W;Xe9WsS:3V8B?>;S@=%DrCoDDHjTX*dFiX9"ThNsU9YQ+BdHb5Wfh7[S62,eV[Wa1o-3"=<Z6G0m8rb5@+9Nnl/
%g2VX(*MVYfECI'>gttM%SlpCZ7KKf89ugdMS6Y@;"@eMmf'2=X_i*t<Ne6Yt$7m&S1-d$'<WM!XrpZr"fuiF5c:)$6[HF<d.^7\8
%YEUc'?6YTWS)p82FjEHe];$q_N8F&b3BXPC7$DO6.o3:XQmUD9:f[4Di-B1b22*s.^'$47?h,#F&30[m3;>3>I^]KTe_MkXpo8\Q
%Q-6kC@pn45;O$IHHj%ZJFg[pmY;4#.=oN,7pI&&j45+_*.P2^tRb-:T<W*lXb#>>n7YqTF>pj`u]R4\N7&oW&]C07g?l,\BESZTH
%<`en?[W&qR_^k0B<\F,)m\"q[[0m4?kbCUBGfgBppNH5-;;2aEg$WOsJ/A7]b_*<u0rC^/iVc4,RIq>E9V/;B"mGqJO'DbN4i@G:
%3-YUY"?!SA(KJi9>"OdWQR/W_lT`&MDYA+]\+`#TGaTE6`dFF=a'tfe&ElR.,i>^'/F%R/0)I5;=[9YQ@1@=YNXtrF`9!E[=3%cr
%6:)@pRq9IOAK1[!1"`6B3-)FZ\>W`QEEjqAEINcGhtI2R_"AC^^&5dKn*O..GB_p5J2s$p!E]Kh/_8p,QdId]r-%mK;;O*3g$WOs
%J/A62%uFsEXiK%W"Q*EaSlp7n%Vd\g*6!8-0Od2u,T`Z2**ja%C5-bO$'me?(-Qps.-K3/5&a<$f7/&,h<a6DGOOXg`-Cg[d#fA>
%jFnl=>#'A9/F%R/0)I5;=^Z?Yq0"rbkHXI?D]p`/XhR;BNlmid!^)Eus2)g"\U3MV+\#h$__fIE1tWrroYRMhK!Nl.p[ie1LY(G.
%?7pHr0$F+rF.NVoAtG<gmjOSTVgNe/h)uF:m?Vo8i6tO@<oi$:C_ccAoIV?MWDsae(Gfpj5T;1YTbn-?RFG>H0>:8=DDNS\WTe@C
%UGlt3i9q`Do_%d9YIQSr\_Q"d7cdJ-Xg9e0)&I=7EaH<NgXVocFjEHe\"hdYktLu=?Gsmh/Q_fIjlEE62N$!erO=OtQ:gXAS]'`,
%Rg[-cKOMo-BSBSEKJaKjF(_cbgZ^P4<e#A%^"pimm`mO&g>4*/;`1qjk[NlsrG+NhS8db-o_([P[QE1u_!(CMXGm5bdS^I'mep_Y
%WDs`:(MPK:6\l;u[2TI+d!Jm9_ZA:DVUACB3ZX$p,/5J?_of6um$E3He_P''Ec:7f\`+_IfBG?f!?W2BB<XF/9[m!A4cT$(#g7B]
%>7S<UPL=goRj_uf8,;5XbK@GqmXLn``B1i%5?.7sW-_=>GLboI.fS<TQYFK#$/8)p36_c/<f9e#J8%P/U8Me)oMH)@3Sk=EIN0ep
%eh(2W83Xc1jqJmh:^Xf1rH=&1Fhm]CO+GHD%!&uXh1O5IF.tU3,MtXb4ACEA"^U2&KGj!pOT,SB"oLkGI953Z.+^(*RW?X.`B9%5
%qHQH'..eQ^==?Amg@(D!VJjYe><[Ep=oLS[,OrF";Wu#[O@k3uggE!l>pLbJ)o;sP:%06uir)sXUWeg+Z)9J]IuR=[/,!*(>0S/<
%;(d=7[LF=mS?2`qr4,gcb<7]ah4a0KqYl:Y)Y#XsA`I0,ioBE<r?p'tgPoM,0d=^LW];:2.*fB8;/Unuc]S8LDN&<hlb=g"8i(X4
%HjSF\7VQVN>=+b"/$VD'HW>sUlE^2+]<;V,?5Y3t04r5mfr1[OQ&L_4:++c]d@'qn1#$@#G/iY2fDk-kIunIDs1F>dFZQsX%/BCo
%-+87R;lat-R,gdW)s,GkX`e:b$,H*+U(*]*W/mfDW08hro'F(W_ApZn\cV.CLAs0]"ko&%g@Rp`7iSm%YR2g*'s;lU\Y&Nls4;1#
%07W_O^Q?A4dp::!s3FIUkr3oZ^?*.Ac[d`V`IZ@Mk(2@_pO<r[ho.#AgGf!SLW5)[s&/j^IgGE`5K*'M?[_]&s##3!Rm5!oq!U+J
%&3g",ric@oO)H10FYrW4I/$^[r+?\;3m+JOB\M3Qc5Pn$q;nAjV<*=@j_/u`>])l!CrBr)KG>6s6hOAq(:flMWYSES]r5;[1U31K
%i"j_$M`%a:(G@Mt%mJ4^De2"kBlW!p]:\iQrUMk`o"30BV)ILr,jFH!9os82i/<f2f,r%npV=B$TQc$LMC;VDLNqV<jP(aPYENph
%-ikI(WZ)PtUM"<aa.Z^cNHjh>^T(_u?M1d/m?a$uIsoVTNO2r]oAr@k?:Z^R],38K:lL"[U-@qc-0!</[LZTVIQD,+ra%drqT?(O
%rkZ=O=hk^jSghg;h']tOV1'ZdH.6Wp-aWQj=0qYm$%'G"NO\n8:OT'X*+m[\9]uMPK('k>knoFnZJ5ESOnbq#qbc27(.a8n;-BOs
%W:A8kPsk;'`^$SVm+u4$-@V#@KdS_F';Sap<r84;JpM+c"O(k$m8!h`aC<!8lo(L\Tk?l+QAV83Vo'1::E4m1c9-q!4](e>DNoPR
%]H^:W&%g$VdpAs9kAGru/,$G5o'(hNDgj&s8?V/l7Ihp(<(D^d*1js8U!h;19Q4I-ALE58dHeZVDctCTLqV2Q%\jIX-;5pK@a*gu
%J+=>;k6@CXpaS#E`5^^PK+hHKrg!gI:HK@CW_Sq;cD'u`FgI8Fk!3*bTirahWj9<98@4C*W(pjRVZNGU5<*52#YI7gI)VhhQ*.=+
%XSfp/cK"+dDsMaCI^K\J;.7Gb#FT.3Wg0QtU:[][W/mRX((Ze8b5YdB/\C'-7AP/0)-Z)'h8j.mcAcsE`?66gc_8Ye:p-/DoJgm!
%4HTJ0r]&&slGVhA-kLH,IrW]"S=[Ue'kRr>Ih&le:<`%Y!:764JtGkhq(iP.UtTdT/[kcRe?ankb'4uMI/X*cs5a%g*e0X;(aNYI
%*(0Js9HBSJcHb\boLus0eEGK@L,5CA[+UjN0nQ!2Bfo=PU@_.>lQ_D$,JF)j[q6R?;Y6)'2n:QrMBQu<c<G.[a'bC,Wr*rbEB!6p
%r4;5,OTC-!Z"M-(\5g67'A<S=ment<l2gr-?gQlF(cYLcEYlo(Q%-,>^k)i=c2/6\Ho:9/kO$i:aAa.<,EgbO0*Q&t&>N#1"#8:9
%5!l/e3ZoQK55PDD,Dn7R/2mBBE!Ns$nOk\D%.i!h^EhKG:g66@RGjd"5*g^lW7ABXAh+dYA]kGVh@61lIk&#W!qJllm:!#m-,c2Q
%M:"O2U1.Xr:m^,kPUYJ(om,/@5[`:QFo!JMO)c,s'+3lP7?69LF8.)dJsW6@rgFZSqf,5^[TdS?oG'>+X'rG.?f)tiORW`<?CC-*
%3GkG-``No*<(FJ0X7J&T*,'D>L0:fj4u%,??;<dfcup*M<V1jf(l<iQhjeAC0_L&>O%:!aFofZUqTC_\U.$-"=:mmLT_VVO;^L#f
%f8uk.Pl;XXnJs[Qa0&.$9)<53fT(=M@fr??fn?Ncm_g#IneFuZ@0;OZhBj_6k]cEAnSA3,ZY"@*f'7LQ[==6%]B9#"BY*/HKZkOI
%31T37'DMQdi\N2r<-@0OeeGqhpd*m6g+5q'Tm`]bZd't<f2'20c5t)\3T3p<&L1\DQlf((q+r_mSb[pWfa?q=$P_f.lt]6uRQf\U
%CsBi[HaZVa91hjlZ82WfL$6Db$VXl4LbgXF[0JOUao-e"kI1(&<DP[jVbtWXVQl73?<eBu%k=K1-;5hOB-REg(6FV(];Z?R:-;k9
%!YqSj!;.e>8g<(S*GiCj!C;Rq,,jr=$QIN3.f`gj+g]dj<"pSpb(E&r#"Gn=kTKDU.W"D`dC]\Pi?@[-Q=p6nhGJIDop/5G3LQ8<
%/o@hCKgCn`BQHM=jU-X:WcLVYZMX"\(mQ+.'P8X=k#gjDp%:sd"eR14VuUfR3]_N0H%_LdlQX9%5X!j/60H`'&HH@l%>d-Sao39]
%:?qN^C)fX?;=i7!W#mL>8fU)&Yluh@(s4.HS@Ju2_3D1PS2fJ)o1g,p_uT@U=MktJGIe'&2g];QpeWNk*P%Gq3c@]J7<C-EFh*B6
%9)=(IB-7g@qB/h.L1g3'VWkjcpmf[5M\W'2ro_Ld#>pWUN=Vb9DU*8XQ4JePItF&rf#V4/P?kQ7%;S^T!#i)(9\k`7MEsu$hu^b,
%UWY#D@p)b"9Kh:_m3DnY+C,aT%q?VJM6g.'MOKNVWogHHNsUC#pop%(]Cta+TQ::W:Te"!qGL'I$[-pMqDdECC+[SjJ<jE)Gd/s9
%Rk$]M\?!)n:3Y:D$r/R0rH2m4Fa,8HRq$'FGIgf9MX>2@4T0p_?F:G^.#0H'5%nt_m+%Y\lo-\)B=nW+1qdG!VCC,Igg[ua_DhR%
%GsW6<2cm(od&pTR6+rY;.]-Zk5R'3nFoPdQkJuBL/C@5iabK::$G;J7R,)jdA@<"%Ue[9f>-l\!<U1bqOc\cpF,:NuXeT$XM2C_N
%!)S,'%d6mqVbpEki3PaBJGkl/n)_hn@EB(Hl4ulS/EjZJbU-q"$*hBS(_Lp\irOObJgDqP@18^/!;;mBbm9B7!'9:u=WqXl6N5;W
%K?Tiu<1A#3pC+Eaa<)q&R[&UT4&i:8PqcE?9$rL%"IJ-W&3pnqN4Zd'D:%W^FCM:On,b;<l3gS21^O#6DZP,31YcFbU0TUSC4g6I
%J$/meYrdX"2`(N\<UKG"VAW)ON_jt4E\lq!&=e]bIS!h0^JUbo-ff?"rh-nEPu:Q.`2;^Z8utbrK:WP_%6`dFYLil0b.KesVFnHO
%>mo\R3.XBJT&tCR4N1%"Bmipg/t=n_j[7Bn$,D1GAXB/3lXhQ4c=r*be%$`:-3EXP0'G^EId=D=Y'*i:X5^%Wl[,P&3>C%Skr3EJ
%>YKQ;l?kqt;P<pr]ijD`dC%-SdDq'aJL;i.Wo#JJW_"uE9A'eH`%P!c:i=6S61-YUI&VltgoFLH8Ib)Ui+(/pCg0X2PlJ/?):^0N
%p8U"3"5Fn7QsOSn"r:q)$Q#8m#!6=<;d[\q@O=5ArF6":=B9#gnMi:'=`2RTa"Gt+K[9U`,Yig86idBQn5Lf>=5^@hSPUVm)M4)L
%29Vs?p2!d_4OL4>/&`Kq<opg9`8ULYX7S['E&;$OUQ/+4E9Qa`dKAcbE1(bZ<C2#JK2F[1nFmKj2uY]<YHl+cBmEO]l65,i-$PV>
%C`\C;J+BXdbhpX!I`8eZ?S4OR>BOlO@q/r>E\Ekqo]Q>q='En3`2o#?)g36,r#p8kS=\8^;L7e8C5G/5-Ah#(^\TRE_E:TVqKnk(
%q<ak^T&35'Y2nM]+pVI;C8r%1ijsa</olra8*!Hm;rUh,hkq%LCRCh&dRbfaU6i->=*BX.!T6/noLdKdCFsdfc5'aIClTC'cY/`q
%>=O%poC^'Ud[W\d"[CLPe\;ma36SGM@/oMU?^Jh5<]9TCk'4dtb<:"D)D6F:2%T,!Mu<7U5[S5NE_7Z5a@&]OC0t$oVDui_`B^gI
%L9D=fT2$A_@<F6((9$rNpfG,j]P<![dN!LP8K[kKe`#C^)?hicMq0Tc:?9IgHjJPU["><d1)@<2:+#h'$>"k6m0;JA8l3hroasjH
%E%gC-s,_1-Db(4G^ar)j^ZEfYiqoa'k$O]>=$&)%g&nqVN-)Y2>KREuhF0p=<$*E@L[W<&%b5I@$-AJ;M$&U=F?Dd23uN^CRA8t'
%fuuF[1eV=XJ)7K$7rJ;UH$rXSnlX-`Tft#C6>pr%s3Y2EE\SG#Y+s4HYa\QL(L61[Sl`>&a$'Snc)@@?-l2fd2)\k$S@H7mhps)]
%Oi`g\&^T.=Po)V6KQ.OkAH3gaU[T#fa"Pu0%DqbF(_@QKVg=."9?919Pq8P\#Bs>.l%`*q8[cV@@<uEa*oE^qg55,.*ZbZ.C4W79
%iAA!h]FZ[2Q^ENVL%-'dC"Z1$U6t@!od?Y$ST*0HMO(kCs,tg!8(p8P"I*#h<ePA)q3=VKgY'uDqikHg<-G;NHaH+^8S'6`j&%:H
%X!)0-*]I"LjNB+%YFB<>I6(6,(T0bT92^(0RZ6c\.ks7'`0'tBnuu)Q&6&"gSHb[k[b9D<[brTd0[1MgM!Wqu6p@/t'QZ6B2KGQ^
%c+O1`YK+R[+6pFRq"A4>^n5hXDs)&Y2tJucb]n=Wn"[u)WicU=+KY!7hB6pUb]9(ea"sn^+b?eFU:Egn'rZH%lIe00`T4uGPCVF%
%m/7]\G'0h5U@P6Y*d#ktBgjkb^OkY%a;;Ci76>Z-TQJ-ng-2WbaTOh(/`l?/ru2cG_djFWie,7K:[b\jqNBmd[<PD0@SHBn[EP_k
%%pOLr2NY[po*r5*LrL=+OG-S$EN+3Sc&^P7^$EQQQo]%V5k#)>`#j#g7sKG90;K,";\@fc3t%M&aASJiYD&?h_4mQY`G\'r`FVO)
%i;<^EF@1m#,F>hXl*;&,V/Rf][o31h6jpN,N<nl]j]8NJ41D==h(LOca:k;-F&sFHJ>_d[4mJm50POt.b@/]AGP9fpEaK-jjLdlr
%)Cd&sYI@oS:MA)uW";GFL:CQ@1M9$kepl$.frrePA3!\hSFU41>Qrs4/n&/pheN%T'5dbiZMM2P2daIegLIsfL]q(-D:>`HCH]<J
%Yi=mS&`!1ja4*oJ>Z,mnAf%e>Qk,*0@dP_.B\<g5m0CD?\pk[Rq%]+Tmis>i4K^(J'I;IE_%UW6k-[Zf*&M/6EQcSZCPRG>cIsEe
%R$Om$0;VZDk$U[n;&%$FCf-C#Vpb-:N88q.,JNJ</OSK:*9q`1r+X$@aHU$;eVV.:k.)[Tnih-VgA!XI^mlQn=mRKehqOEg5B\O_
%_8;2ZiUnS53EL+5n_t/>oq#ht;6&foO%Cim3sr;DX(c%aD6&Pd:K3JCDRJtR-4Tf6\.O/J*1DYUf:Vt:qH`1linV"^Bl7D91Fogi
%Y?OAA.k3dGaD\u$:#L3WLLZX)s1!m[\mgQddMLMt9V1<:rpL)LrI<4!c"X<d6f.t04j66V4B?nAdje$/8mqKCU*l!`Brs)<@h"no
%RuNPBZ#XUKfW2Y^R%)i8WPC><+1YQ"*e2djFdCM<TnTAL%@oq#G%rq9/OCPF4bLP!,/*W*Ni?$Y7^Q697*".kh29U`n#u]@*ta%P
%4O#j$V^SacJTj$tMbDS@a0Q$#Nj/k11>b36Hh2)RCX0Z\f7&JKK-#Pj4'/\/F,]H,ih6X`Zf6d(i(9JjgD:l^=dTlacEp]UCTGW1
%T0@+[qVm"-V58BIU0P6aKX1RC`/6%tm0=^Cp2=M(O-cBR7VB%i4rg'>PB0cR<lQU+_3d5/b)N[YU@#%kXST;*V\^`Tm*9'-;/ilu
%d%2Ap)5CLA6Bi#@$4.GYH54LM%SomZ'_T.?^S.QJhIq)fai:4l=gGq6Dc7i-,USGXaM8p1-NXa+bHj]5&3\mN5n=-*Y/LScO&"@S
%/tia3\2mH/e6J@%3pu\sLB1(^,?:<#WshGSRI'ja_ZY8$I%5C"R=,na_o;6m@OMrZ3_)*)*P'N9BOr'6MG?\8Y*A(F"$JJ_fW]8-
%B^CKr[o$6e'>jB+-b]muEM2FWPOjAHCoF*73STTf?Rnh:C!3p9p@3?u^)9]gd7>L5^-_1C)QjJ4]otWHO2e7u#Dio7pfhq5+Kpjh
%L%O(:(s@^3V)EX0]@Jg^M]%7ue)FXn>>GQM)cC7_Cq4ih\9_6[UpIRtYg4qq4)*JAmBqUs3mia"Vf)`I.l,`Ip">a>-bHe'LjC:&
%N#5t@A](:\p=(/VRWt3D"QYPsi?=!Z:f('hl4I"m5:7MYQkr8*;)_pEMQZ6T\dA-['8qZ3ZHSRR]O(Uuh@X#>/J+%oO&!d>+m:Hu
%$pL>1Vsn%g'`Q:to$?feYW:miM-SD[n(E'V0eP701J?2$>GLJ"q68oFVfP&d_D@Vad'??iED.M*=i)h,[i."URnnM+Pjk0qd">BU
%rs\l^OpmYf_Ou`D(^<^X;IL"W;^oK(oScQI`m@u\8su"8M$6=?H0$"A$uGL\L;bq@$KTgHU(ABD!qUS#=C7hS\,0ZKIa*pbBVIX!
%!5UKq$ji:']<)+:O>FS(lj\+D$O8?C..d\.OkInX3a_[TpW6pQX>j@ko$E'Sk*t9'-"?V2(Uq02S"a2[-*cnm<q@F@8hFjLa;1Y_
%e`4t'H;&dcS5u+goVcr!`"MR0WtV\Oq"KQ"Dsn?F-Tgc6YT)'(2<$\h\K;3L`-%OTnB@;]8DfUpJ;C(k)+PsWqd"fZVb)8hJX7%9
%HKJ?GJkV\)]C'N^p,r3T*j%hoKG'^(]J:e`7rZIJ^&]Y1_c!d>4P<a-:KXDjX<nesCJW5bDs54D&=Or5<g3lIBKg9Zo7lBXb@H6F
%M-=tS%+t1c"Vsia]F6R!NL:+k"NT)"8-2s@ipjmjEHns%oM>0(,*\*3E-.[ZJnFp(MIG!0V-%4d'C"%/:Gd#op0XZg_tTd'eQtE7
%#i.#kTK<cY&k,N+;toA=h`[jGSKSbPmlFf.9f1W.7B1L*[J2O;AM"etq/&FMCW:0Kb3Wp9VBiO,AX7?=7)F]PblSTrG5K#I?@7#0
%l+I2Cq<JIU4FklLU=Ngo=JUb343K.#1VCY_=_l9_5(d:c9ap3kL,;#up>eJ8D%J(sUE7A3-iqEFoiXOWU\r/G=&`hBAKZh*a*&(/
%:96aSiA>"0-+2_>QoJoZb<XTIFgT!EG]nV#)@Q-cUXl1QO(p.JLk:R(U?5E3&HsmdTO5R''F_R^'q0abWN?o)K'rm8MDa8M6)(<I
%NsC#]"V-(C+`\mO<8=efJ0+=!'=mlTJ`NX*G<4X40ufA)<:$[,25NR=/rJls`1j[;EQnj4-,f$a>Qit&hu!^+:0M@8^pAs)Crd^l
%W<9Xs%>m]4ZPpLAe-H!NC5!^#2lNkh]M$:^O[#`lFrP/ldJOi%)XV0&rlAZOfN<"S^`C)%qht_V#t%4CFLiG2CX(Bd6O#P&#.chL
%7hJ'3PG$4RYT7Aaa^^4OfKp^B9kje<d=Q(&\!bX_"bY#=$ZcA)dL)o1!"CPbRPj7b6h[m*BRk>==[Xt]ak<fP<XijTOVb`Z=7s;,
%B$fiD]qIZC;MU\Mi#EAF-s'TlO\$NYjgZNrW.`D5RE_:q#E,&R^,N;D/hlp=1gV=4K<*$4'f5$`J-NbX=81*Coe+TNoG!;;4f&nd
%]@J$t4-q(6mlBZC0Q8L?!=)JV1=d!-JlkER:j/cqYmmimJ62I6>TCOq]L@a[a%]BX![p@GGoHe9850=GN7`[O(T+o]b*hG>\O&oA
%8qefUYS(O]A8RHZg=:m:37Jr3i&WA>_ZFfh&JUmQ@F;!i'+Q-&G7mQsi-4BH-^Us[o@e^*c-`ig&RMk_!b3$5A69bOqcD":2TXQ)
%'d`.Oqiit9Q-uT\9bU?Ker5<I5h7.XNDdH,CA][1^'7udlr=#r:c$_"q2:8Y"^50(=32SHj6YL&#Xm7h=MFur4MV;F+ol<.QlJr+
%AJPo6p4/bi)Y@H?T:jpl>?l;AAZ3u[0olEM1jDgR!,PkL;1?Rn(\YaP!C#kfQ3D2R:<K>5mH?fu>KBTo^$@'M81(o2f7j&X[9OC>
%ckn$'<23;>Wu&DM8^3.<!4PPt[F13Wb`MZ%1"GGq)nWZG$/q;?"gMMHoU6?/.u\R;8V/OP'[-!M=5e76j;)LX:MA".:n"d@mNZs0
%V/"k=9pNUNFUG?slMhRj6<[2&i'.a-AJ6uS09K2n%0PYpY(.LFQF@T_9'q)Fo\ce4i`?^qoSK#o8MSaKIP!L#@(,,Me;CXL*9fSO
%6DA;(Y<DMm;`H+/J#td:>l1mj%hfM9$EjbTiG&;C"EXsDZl<Ig"7F+V:K:NhL-F#$pRkXuAlO^h1G;W>!"2X<l=*lJ'C?OW1HDgE
%)i4p:Vgdh\#3%f]#P#;OUI&5<rL(!!WbEf/=<B*W'cY1(Mhr!hk^aY;]1^$LNJl@b.N<-o?F`nu_Q7O.@lKip!L5TmQ.4nE"ER9B
%&F80<QCFiBha9u`+NM1%$o^JY\N[?&\$bL,jp%8_VLNcaO`BQQ/;`stb`34;I6tYo.)u!NU[K+\W0"chrcHm9`0<+rmXbHHE8kWV
%lJEa+SX=Eu=-$:ib3?!rL<ua7"Z"`1>G%l+30?^@Q15OZ^MG<TVGG\rRYjBsTc8gom\%m$l%i&f:7(?1Sn^:cgJ<']o_rt5."6Kf
%D+-X=n%UhfC_U1.fG+jA,3rn%0]dd#3GCr65%\j;Ob47=r-q*?W^hfcn4W96JuKap#o\]GK[cHm!kruYJARJnTIV.TZoJB\C6QUR
%0YC>(kb^[f'#Yit&q#CfHd=D$[:M(^rusau@C="R</Wu6>FgB^.^1q4VPT_8+Nth9X^2:Mp.NW&EM45sC/-[Kh,2U0[L,<eIkZbD
%oce<h,`<nZMb7$b23Q;2l3=h6/"kJH7M0bW7Mf:%31:?j\"Pmg7nZ;Ub[M^!]<+!T*q\Td5V:0ES;,o_[5;E=Ya?ZKfr75'h>c8$
%diH9m`KPPRoV4qW,1"c%_+5DuS76!HUGdTKCYO&S<CjcgaLCjgJ'kKa)oPKFU.Cehd=RDpD'nVsOo17qG+H*M`*'Do%:\QA&5X-g
%.oP;i3LujU^D0&Bkms.g'CEL^_%?X)Nga'/"(V5&8=CSYps9!`iH0,P0o.1GLCpZ%F@MI`9%;W,7F&^</Xse4^D4++8q#4Rh\d%Q
%*g5'$Jd$\TmGH+S9,30D)a%lFk2DAl[J7]3Vdfkaa7r)A@.n[;r7OP!Tj'N,5V4_k-#pZCaJ%JDjIRG4`gq*pHR-50gE/3i\<G5H
%JsVriY@%pXqR&Ie#<dp=d5iVUH8OapR^$7T"b'#Q*$-k*pN0953PHhhE`ZTfB`>MDcT?/aA^FsG"7b7g_jeD0DNh##$!$X(q_6KW
%R^KDh$fDD[6\S]#4R&kABg<t2S?SM)*E^_!*(YVMVI-A8[<>B'd/hrpU7Z+=`PnJ?iH2k<Nh#Hd^G[V(Ve+$[![tg(%S:Sr)Vsq"
%f?$dE'ZLcC1!KK'5)GjZVB'j[AK$H`+>VVbiL4?SPI&965%dB]ec;9fN9-lHR$Hnc0hh3H&Gm>Q_2)1U<mfEg8RDihK5r^ZZ8mTM
%M@Z0sjJqu$ddZs5o)\bJ'*-!SJ!E<iVBm+"XhkXKS["8!j-eIG_^Nm>dDBF*ahU'Q(/Y%SN(Pj6aUr6%="uY2)+0@MYK$4ZAtFV$
%S)$5pP3IU-12q8]%*aTdQ5SR(APqj_c,!_2<@GHA7Ie50]DG5Ug@S/-4rnoO[E9A*@aPYF)hE>fdu!(5\>^*f&Uf@<M6`2P.[sEN
%]!0IWKuF-d:@,;#iM[_<Q8pMu\^>:nMD-1rB29YIZrg?IZ][B!h&)_eju;4p//LP/?<(\Xi;`c*;&u[G6c7sf;aaTc#3Oc-*u9gt
%@G7Hol$j..Tn\o.o;PiRCflVo0IAu_/0dNcJN>@.1u85+ITDMVV`Pk%K9XC06P"'oi//%(-IGQ%R&H02"4Dc=(ec@A]]"OH"36?a
%$-ZsM*)gZ?o-WBNbdG9'7KfqXKcJ@L_'%Llh140k^<1A0AK,4SOWDMsoE?Uri.(\BK9o;IZ;9T"g`DrP[332KfOnNp,p+]dJU+^f
%pu>#+2?O?YFUSRV&QUG^JN^1/Ybor<)blG?8#^4j,QLNV-:Pf>#'9>MUEu_D_JD-W"E5W6&4it"$;=KZ-6XsrfL68N(e8\)EG&#)
%[m\2I>19Kl['q!YhS"JNjk[<-WRIVV=eBC^CF\!#'hlVg01/^2r`Ohj09amUVtJB,8]9c::L,t:(e*2YiVYKc*7c[nJo%_V5L&]F
%PsZ$)-WO!]MmH9j-F33$,P/,E@n^g#_'@?*bb]m7>4)INB.u,or)r.n4e[)G9rj._%pMQ0#8D9/=\nh4YWl[bTb2nRPbOV1';N0#
%0%9'[gX?I6Y7[>[d<ML9neS>C*TN7mY;/(IOm:$u+<VatOWQ<a>F3>0QnXLlUCG$l0XE^Y<1(M7D<T2#Z[j9s:($Yos1LB@1`O=R
%g]2<6Y:9sI2ba"O_igBkY,(e_9:>U5(:!+sW6j/FHLMMe>#SmBBrl$d"]*6^k$'@CFg78X5"rj\BkWA5f>O;^k##QKpE7ifJ17bJ
%FirpJFucNm07/cWnDSgG-ZcCDBeRFS5+^F'#c*fqI[gUd;%7eN41u;oQ#AVl\uadamC^@t%i`%aeefkpY(#Yc[t1RWpS+Z%ar"A1
%g[kISc1W6fa7(=FAdl*!T00Pr>HmY(.Zj"#9c!4#lQe**`[j_(b_+sCoi976iOGGR[KuM5@i%3rMmc\hW`SNdlErK6^Ck>ZrG6dQ
%m]BM(PN9AKN)H4I]RmOZ=/AEh+$YfLEF,,Zre(fq/`Bn*f9K'U*qZMZHrG4fT<G?G3YeR[GMcg^S8(iaU5>lj8>5K):(L7&or=2C
%/adV3!SJI:VF_[j.?r0T0].W'W(qXWW786AE2D)TC_8e_#kSQ%c<)4bO7DqFN]nq8rU$f)P"o@m%Nbn4^VJ>Z4tYHoQ-b<;DrJ/h
%2n3S`3Bs574AladUlFhc:E=P">r)]X2D,QKi=Nr'i3#Z\K5[:tVj?[E6uIEdgkjTHO&2=s[-J(gs/gq_DZ]6a/:5p"F!ja*it\m\
%*j+-@WQt%6A,S//VZ5$DmoQX<6W_kC7DZsUnqNTA>G2l:TcY.N3^?fnK:b'%%J!+NLpRXY?!<I-:R;6ThAQNoj63DIVctSkr`ZZ/
%'`]MFk<ljn1Iht@2*fpqj=:?T[>alV>@-e.E[u?@+W#:#!2Yo-s&Q.8C)l4s*jKo!+W1kDMJ-0Xe;W%.E%m)m=LSGX^fH3=B@+SM
%cD%Y7*Qt>H/(>,rLgW%o="'i*Sm(A`_8k<iSXs?BC5q":%I*YB1!O,1c_dRKOH]4u<=>N^LZ]u4$.K@t`\Qb?o`S(B[guu[@bR;K
%*K"<u<<2AOWrgd3/U;0[18F[gTWa(&1W:L%Hu4:o8!Ak!A/*Q/HH/GZ0O+K#cr^b3*b-`QL!V\#X4[A!g[rOm$u_1W-u(s?:jr6m
%0TCIt85^39aY+&HAmo:;h11!E"Cu6A`5C0mEE'W;^km-SdebMU/5jB13k%jTO4qZC9Y$+h!bpkV38!.B$!MY;O"uOPO^<[*)#iQ_
%(,7-f(r^G^8h#WXlWiSSH`FA/Me86ACZ^\!Y<H:_g.'tB+Rp@/HAOjLb(s>=/b/Wgktp[g*c!Q=Bs>6i0Zoc+VsG%[R^b7[XC+u/
%YPTSi)?Mp]Y1Gs*MU=c+Y/LO_%_X.^&MdZ+3HVdJN^[;@<0\,!P>rqZ(i/XjJ_`ir+k'<1EQhqe.T3)A/.\gLb;2SgE8GO-k:`dp
%b)SC0)\2.O:KkI7"7/f9G_**A-PUc8PC6CHG:'[01kmZgnlm4-h1fK30^6$),<1ZXlua%[!._#r7Q7q@\fr7qgU2Q7PB+Kr"(#q1
%.T]*H*8lY(e#=Y?d4;8[L.TBiPU:!;e*S_,ZZ']<XLJa@PGaU\/L,lTYFpimR0EUp-rV/,*)bb!d;_$C^W*TmjH6UQ#N^q-rJ9eB
%PpQ@&abk<AHiM]FNV12UIjTi`qA8h>rUlf^k2h[(n,#>!pRMlpo&'B8Dnl>HJ,\JXs76,\s6phSq[\2S^YaP9j.H=(ch[Qib5_+m
%Du]b65Q'ubs7>t,ro*>FrZ=GB5?e*F0E:UHs7JVV_dE=k#q=E0~>
%AI9_PrivateDataEnd
